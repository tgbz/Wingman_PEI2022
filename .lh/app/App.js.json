{
    "sourceFile": "app/App.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1667755497548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1667757815662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n export default function App() {\n   return (\n     <View style={styles.container}>\n-      <Text>Open up App.js to start working on your app!</Text>\n+      <Text>TEST</Text>\n       <StatusBar style=\"auto\" />\n     </View>\n   );\n }\n"
                },
                {
                    "date": 1667757833373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n export default function App() {\n   return (\n     <View style={styles.container}>\n-      <Text>TEST</Text>\n+      <Text>A SARA ESTA MUITO CALADA;</Text>\n       <StatusBar style=\"auto\" />\n     </View>\n   );\n }\n"
                },
                {
                    "date": 1667757840002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n export default function App() {\n   return (\n     <View style={styles.container}>\n-      <Text>A SARA ESTA MUITO CALADA;</Text>\n+      <Text>TESTE</Text>\n       <StatusBar style=\"auto\" />\n     </View>\n   );\n }\n"
                },
                {
                    "date": 1667759637606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,20 +24,6 @@\n \n */\n \n export default function App() {\n-  return (\n-    <View style={styles.container}>\n-      <Text>TESTE</Text>\n-      <StatusBar style=\"auto\" />\n-    </View>\n-  );\n+  return <LoginScreen/>;\n }\n-\n-const styles = StyleSheet.create({\n-  container: {\n-    flex: 1,\n-    backgroundColor: '#fff',\n-    alignItems: 'center',\n-    justifyContent: 'center',\n-  },\n-});\n"
                },
                {
                    "date": 1667759668034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,6 @@\n import { StatusBar } from 'expo-status-bar';\n \n-\n-\n /* \n View é um componente que serve para renderizar elementos no ecrâ, invocando outros componentes React Native.\n Text é um componente que serve para renderizar texto no ecrâ.\n TouchableOpacity é um componente que serve para renderizar um botão no ecrâ.\n@@ -11,10 +9,10 @@\n Stylesheet é um componente que serve para definir estilos para os componentes React Native.\n   \n \n */\n-import { StyleSheet, Text, View } from 'react-native';\n \n+import LoginScreen from './screens/LoginScreen';\n \n \n \n //Function Component, também podemos usar Class componentes\n"
                },
                {
                    "date": 1667760137842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n import { StatusBar } from 'expo-status-bar';\n \n+\n+\n /* \n View é um componente que serve para renderizar elementos no ecrâ, invocando outros componentes React Native.\n Text é um componente que serve para renderizar texto no ecrâ.\n TouchableOpacity é um componente que serve para renderizar um botão no ecrâ.\n@@ -9,10 +11,10 @@\n Stylesheet é um componente que serve para definir estilos para os componentes React Native.\n   \n \n */\n+import { StyleSheet, Text, View } from 'react-native';\n \n-import LoginScreen from './screens/LoginScreen';\n \n \n \n //Function Component, também podemos usar Class componentes\n@@ -22,6 +24,20 @@\n \n */\n \n export default function App() {\n-  return <LoginScreen/>;\n+  return (\n+    <View style={styles.container}>\n+      <Text>TESTE</Text>\n+      <StatusBar style=\"auto\" />\n+    </View>\n+  );\n }\n+\n+const styles = StyleSheet.create({\n+  container: {\n+    flex: 1,\n+    backgroundColor: '#fff',\n+    alignItems: 'center',\n+    justifyContent: 'center',\n+  },\n+});\n"
                },
                {
                    "date": 1667760167621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n export default function App() {\n   return (\n     <View style={styles.container}>\n-      <Text>TESTE</Text>\n+      <Text></Text>\n       <StatusBar style=\"auto\" />\n     </View>\n   );\n }\n"
                },
                {
                    "date": 1667760199825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n export default function App() {\n   return (\n     <View style={styles.container}>\n-      <Text></Text>\n+      <Text>PUTA</Text>\n       <StatusBar style=\"auto\" />\n     </View>\n   );\n }\n"
                },
                {
                    "date": 1667760385353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n export default function App() {\n   return (\n     <View style={styles.container}>\n-      <Text>PUTA</Text>\n+      <Text>PUTAS</Text>\n       <StatusBar style=\"auto\" />\n     </View>\n   );\n }\n"
                },
                {
                    "date": 1667760452747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n export default function App() {\n   return (\n     <View style={styles.container}>\n-      <Text>PUTAS</Text>\n+      <Text>Open up App.js to start working on your app!</Text>\n       <StatusBar style=\"auto\" />\n     </View>\n   );\n }\n"
                },
                {
                    "date": 1667760540197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n export default function App() {\n   return (\n     <View style={styles.container}>\n-      <Text>Open up App.js to start working on your app!</Text>\n+      <Text>TESTE</Text>\n       <StatusBar style=\"auto\" />\n     </View>\n   );\n }\n"
                },
                {
                    "date": 1667760624468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n \n */\n import { StyleSheet, Text, View } from 'react-native';\n \n+import LoginScreen from (\"./screens/LoginScreen.js\")\n \n \n \n //Function Component, também podemos usar Class componentes\n@@ -24,14 +25,9 @@\n \n */\n \n export default function App() {\n-  return (\n-    <View style={styles.container}>\n-      <Text>TESTE</Text>\n-      <StatusBar style=\"auto\" />\n-    </View>\n-  );\n+  return <LoginScreen/>;\n }\n \n const styles = StyleSheet.create({\n   container: {\n"
                },
                {
                    "date": 1667760652738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n \n */\n import { StyleSheet, Text, View } from 'react-native';\n \n-import LoginScreen from (\"./screens/LoginScreen.js\")\n+import LoginScreen from \"./screens/LoginScreen.js\"\n \n \n \n //Function Component, também podemos usar Class componentes\n"
                },
                {
                    "date": 1667760700302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,13 +27,4 @@\n \n export default function App() {\n   return <LoginScreen/>;\n }\n-\n-const styles = StyleSheet.create({\n-  container: {\n-    flex: 1,\n-    backgroundColor: '#fff',\n-    alignItems: 'center',\n-    justifyContent: 'center',\n-  },\n-});\n"
                },
                {
                    "date": 1668010320594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,4 @@\n-import { StatusBar } from 'expo-status-bar';\n-\n-\n-\n /* \n View é um componente que serve para renderizar elementos no ecrâ, invocando outros componentes React Native.\n Text é um componente que serve para renderizar texto no ecrâ.\n TouchableOpacity é um componente que serve para renderizar um botão no ecrâ.\n@@ -11,20 +7,142 @@\n Stylesheet é um componente que serve para definir estilos para os componentes React Native.\n   \n \n */\n-import { StyleSheet, Text, View } from 'react-native';\n \n-import LoginScreen from \"./screens/LoginScreen.js\"\n-\n-\n-\n //Function Component, também podemos usar Class componentes\n /* \n Se está View for para IOS, esta vai estar mapeada para UIView (NATIVO IOS),\n se for para Android, esta vai estar mapeada para View.\n \n+*/ /*\n+import AppStack from './src/Navigators/AppNavigator';\n+import AuthStack from './src/Navigators/AuthNavigator';\n+import { NavigationContainer } from '@react-navigation/native';\n+import React, { useState, useEffect } from 'react';\n+import {useAuthorization} from './src/context/AuthProvider';\n+import AuthContext from './src/context/AuthProvider';\n+import {AuthProvider} from './src/context/AuthProvider';\n+\n+const App = () => {\n+  const {userToken}= React.useContext(AuthContext);\n+  console.log(userToken)\n+  return (\n+    <AuthProvider>\n+      <NavigationContainer >\n+          {userToken==null ? (<AuthStack/>) : (<AppStack/>)}\n+      </NavigationContainer>\n+    </AuthProvider>\n+  );\n+};\n+\n+\n+export default App;\n */\n \n-export default function App() {\n-  return <LoginScreen/>;\n-}\n+import AppStack from \"./src/navigators/AppNavigator\";\n+import AuthStack from \"./src/navigators/AuthNavigator\";\n+import AsyncStorage from \"@react-native-async-storage/async-storage\";\n+import { NavigationContainer } from \"@react-navigation/native\";\n+import React, { useState, useEffect } from \"react\";\n+import { serverURL } from \"./src/config/hosts\";\n+import axios from \"axios\";\n+import AuthContext from \"./src/context/AuthProvider\";\n+\n+const App = () => {\n+  const [state, dispatch] = React.useReducer(\n+    (prevState, action) => {\n+      switch (action.type) {\n+        case \"RESTORE_TOKEN\":\n+          return {\n+            ...prevState,\n+            userToken: action.userToken,\n+          };\n+        case \"SIGN_IN\":\n+          return {\n+            ...prevState,\n+            isSignout: false,\n+            userToken: action.userToken,\n+          };\n+        case \"SIGN_OUT\":\n+          return {\n+            ...prevState,\n+            isSignout: true,\n+            userToken: null,\n+          };\n+      }\n+    },\n+    {\n+      isSignout: false,\n+      userToken: null,\n+    }\n+  );\n+\n+  React.useEffect(() => {\n+    // Fetch the token from storage then navigate to our appropriate place\n+    const getToken = async () => {\n+      try {\n+        const jsonValue = await AsyncStorage.getItem(\"userToken\");\n+        if (jsonValue != null) {\n+          console.log(JSON.parse(jsonValue));\n+          dispatch({ type: \"RESTORE_TOKEN\", userToken: JSON.parse(jsonValue) });\n+        }\n+      } catch (e) {\n+        console.log(e);\n+      }\n+    };\n+    getToken();\n+    console.log(state);\n+  }, []);\n+\n+  const authContext = React.useMemo(\n+    () => ({\n+      signIn: async (email, password) => {\n+        console.log(serverURL + \"/users/login\");\n+        await axios\n+          .post(serverURL + \"/users/login\", {\n+            username: email,\n+            password: password,\n+          })\n+          .then((response) => {\n+            if (response.data) {\n+              console.log(response.data);\n+              AsyncStorage.setItem(\"userToken\", JSON.stringify(response.data));\n+              dispatch({\n+                type: \"SIGN_IN\",\n+                userToken: JSON.stringify(response.data),\n+              });\n+            } else {\n+              alert(response.status);\n+            }\n+          })\n+          .catch((error) => {\n+            console.log(error);\n+            alert(\"De momento não é possível processar a autenticação!\");\n+          });\n+      },\n+      signOut: () => {\n+        AsyncStorage.removeItem(\"userToken\");\n+        dispatch({ type: \"SIGN_OUT\" });\n+      },\n+      signUp: async (data) => {\n+        // In a production app, we need to send user data to server and get a token\n+        // We will also need to handle errors if sign up failed\n+        // After getting token, we need to persist the token using `SecureStore`\n+        // In the example, we'll use a dummy token\n+\n+        dispatch({ type: \"SIGN_IN\", token: \"dummy-auth-token\" });\n+      },\n+    }),\n+    []\n+  );\n+\n+  return (\n+    <AuthContext.Provider value={authContext}>\n+      <NavigationContainer>\n+        {state.userToken == null ? <AuthStack /> : <AppStack />}\n+      </NavigationContainer>\n+    </AuthContext.Provider>\n+  );\n+};\n+\n+export default App;\n"
                },
                {
                    "date": 1668010470543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,29 +97,29 @@\n   const authContext = React.useMemo(\n     () => ({\n       signIn: async (email, password) => {\n         console.log(serverURL + \"/users/login\");\n-        await axios\n-          .post(serverURL + \"/users/login\", {\n-            username: email,\n+        //sign in request with fetch,\n+        //if success, save token in async storage and dispatch SIGN_IN action\n+        //if error, show error message\n+        try {\n+          const response = await axios.post(serverURL + \"/users/login\", {\n+            email: email,\n             password: password,\n-          })\n-          .then((response) => {\n-            if (response.data) {\n-              console.log(response.data);\n-              AsyncStorage.setItem(\"userToken\", JSON.stringify(response.data));\n-              dispatch({\n-                type: \"SIGN_IN\",\n-                userToken: JSON.stringify(response.data),\n-              });\n-            } else {\n-              alert(response.status);\n-            }\n-          })\n-          .catch((error) => {\n-            console.log(error);\n-            alert(\"De momento não é possível processar a autenticação!\");\n           });\n+          console.log(response.data);\n+          if (response.data.success) {\n+            await AsyncStorage.setItem(\n+              \"userToken\",\n+              JSON.stringify(response.data.token)\n+            );\n+            dispatch({ type: \"SIGN_IN\", userToken: response.data.token });\n+          } else {\n+            alert(response.data.message);\n+          }\n+        } catch (e) {\n+          console.log(e);\n+        }\n       },\n       signOut: () => {\n         AsyncStorage.removeItem(\"userToken\");\n         dispatch({ type: \"SIGN_OUT\" });\n"
                },
                {
                    "date": 1668014112536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,8 +88,9 @@\n         }\n       } catch (e) {\n         console.log(e);\n       }\n+      dispatch({ type: \"RESTORE_TOKEN\", userToken: userToken });\n     };\n     getToken();\n     console.log(state);\n   }, []);\n"
                },
                {
                    "date": 1668014225044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n         }\n       } catch (e) {\n         console.log(e);\n       }\n-      dispatch({ type: \"RESTORE_TOKEN\", userToken: userToken });\n+      //dispatch({ type: \"RESTORE_TOKEN\", userToken: userToken });\n     };\n     getToken();\n     console.log(state);\n   }, []);\n"
                },
                {
                    "date": 1668014610928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n       try {\n         const jsonValue = await AsyncStorage.getItem(\"userToken\");\n         if (jsonValue != null) {\n           console.log(JSON.parse(jsonValue));\n-          dispatch({ type: \"RESTORE_TOKEN\", userToken: JSON.parse(jsonValue) });\n+          dispatch({ type: \"RESTORE_TOKEN\", token: JSON.parse(jsonValue) });\n         }\n       } catch (e) {\n         console.log(e);\n       }\n@@ -112,9 +112,9 @@\n             await AsyncStorage.setItem(\n               \"userToken\",\n               JSON.stringify(response.data.token)\n             );\n-            dispatch({ type: \"SIGN_IN\", userToken: response.data.token });\n+            dispatch({ type: \"SIGN_IN\", token: response.data.token });\n           } else {\n             alert(response.data.message);\n           }\n         } catch (e) {\n"
                }
            ],
            "date": 1667755497548,
            "name": "Commit-0",
            "content": "import { StatusBar } from 'expo-status-bar';\n\n\n\n/* \nView é um componente que serve para renderizar elementos no ecrâ, invocando outros componentes React Native.\nText é um componente que serve para renderizar texto no ecrâ.\nTouchableOpacity é um componente que serve para renderizar um botão no ecrâ.\nTextInput é um componente que serve para renderizar um input de texto no ecrâ.\nImage é um componente que serve para renderizar uma imagem no ecrâ.\nStylesheet é um componente que serve para definir estilos para os componentes React Native.\n  \n\n*/\nimport { StyleSheet, Text, View } from 'react-native';\n\n\n\n\n//Function Component, também podemos usar Class componentes\n/* \nSe está View for para IOS, esta vai estar mapeada para UIView (NATIVO IOS),\nse for para Android, esta vai estar mapeada para View.\n\n*/\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Text>Open up App.js to start working on your app!</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"
        }
    ]
}