{
    "sourceFile": "app/src/screens/AccountsScreen.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1674925447126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1674925447126,
            "name": "Commit-0",
            "content": "import {\r\n  View,\r\n  Text,\r\n  Image,\r\n  useWindowDimensions,\r\n  SafeAreaView,\r\n  Button,\r\n  StyleSheet,\r\n  Platform,\r\n  StatusBar\r\n} from 'react-native'\r\nimport {Card, Title, Paragraph } from 'react-native-paper'\r\nimport React from 'react'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\nimport { COLORS, SHADOWS, SIZES } from '../constants'\r\nimport { useState, useEffect } from 'react'\r\nimport { serverURL } from '../config/hosts'\r\nimport { AntDesign } from '@expo/vector-icons'\r\nimport { CustomBackButton, CustomButton } from '../components'\r\nimport * as ImagePicker from 'expo-image-picker'\r\nimport { useRoute } from '@react-navigation/native'\r\n\r\nexport default function AccountsScreen({ navigation }) {\r\n  const { height } = useWindowDimensions()\r\n  const [token, setToken] = useState('')\r\n  const [contas, setContas] = useState([])\r\n\r\n  useEffect(() => {\r\n    AsyncStorage.getItem('userToken')\r\n      .then((userToken) => setToken(JSON.parse(userToken)))\r\n      .catch((err) => console.log(err))\r\n  }, [])\r\n\r\n  const [data, setData] = useState([])\r\n  const fetchData = async (token) => {\r\n    //fetch getBankaccounts(id)\r\n    console.log(serverURL + '/bank/getBankAccount/' + token.id)\r\n    const resp = await fetch(`${serverURL}/bank/getBankAccounts/${token.id}`)\r\n    const data = await resp.json()\r\n    console.log(data)\r\n    setContas(data)\r\n  }\r\n  // request data from server\r\n  useEffect(() => {\r\n    console.log('Entered useEffect: ' + JSON.stringify(token) + '\\n')\r\n    if (token.id) {\r\n      fetchData(token)\r\n    }\r\n  }, [token])\r\n\r\n  // every time route.params.refresh is true when user delete an account, refresh data\r\n  const route = useRoute()\r\n  useEffect(() => {\r\n    // dont do shit if route.params is undefined\r\n    if (route.params) {\r\n      // se nao for undefined\r\n      if (route.params.refresh) {\r\n        // se for true\r\n        console.log('Entered useEffect route.params')\r\n        fetchData(token)\r\n        console.log(typeof route.params.refresh)\r\n        // set route.params.refresh to false\r\n        route.params.refresh = false\r\n      }\r\n    }\r\n  }, [route.params]) \r\n\r\n  return (\r\n    <SafeAreaView style={styles.root}>\r\n      {/* CONTAINER COM OUTLINE */}\r\n      <View style={styles.Maincontainer}>\r\n        {/* for every account in contas make a container */}\r\n        {contas.map((conta) => \r\n        <View style={styles.container} key={conta.idBankAccounts}>\r\n          <Text style={styles.textTag}>Conta {conta.idBankAccounts}</Text>\r\n          <Text style={styles.textInfo}>{conta.accountName}</Text>\r\n            {/*<Text style={styles.textInfo}>Caixa Geral de Dep√≥sitos</Text> */}\r\n            <AntDesign name=\"rightcircleo\" size={24} color=\"white\" style={styles.iconStyle} onPress={() => navigation.navigate(\"Account\", {name:`Conta ${conta.idBankAccounts}`,conta:conta})}/>\r\n        </View>\r\n        )}\r\n     </View>\r\n      <View style={styles.containerBTN}>\r\n        <CustomButton\r\n          onPress={() => navigation.navigate('AddAccount')}\r\n          text=\"Adicionar Conta\"\r\n          type=\"TERTIARY\"\r\n          widthScale={0.8}\r\n        ></CustomButton>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n  //)\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.white,\r\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\r\n   \r\n  },\r\n  textTag: {\r\n    fontFamily: 'SoraBold',\r\n    fontSize: SIZES.medium,\r\n    color: COLORS.white,\r\n    marginBottom: 10,\r\n  },\r\n  textInfo: {\r\n    //marginLeft: 30,\r\n    fontFamily: 'SoraLight',\r\n    fontSize: SIZES.font,\r\n  },\r\n  containerBTN: {\r\n    // Put the buttons if there is space 2mm after infoContainer\r\n    // center the buttons\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  container: {\r\n    // outline in wing blue, rounded corners\r\n    backgroundColor: COLORS.wingblue,\r\n    borderRadius: 10,\r\n    margin: 10,\r\n    padding: 20\r\n    },\r\n    Maincontainer: {\r\n        marginHorizontal: 30,\r\n        marginTop: \"7%\",\r\n        marginBottom: \"7%\"\r\n    },\r\n    iconStyle: {\r\n        position: 'absolute',\r\n        //  center horizontally\r\n        right: 30,\r\n        top: 30\r\n    }\r\n\r\n})\r\n"
        }
    ]
}