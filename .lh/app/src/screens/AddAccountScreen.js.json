{
    "sourceFile": "app/src/screens/AddAccountScreen.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 30,
            "patches": [
                {
                    "date": 1675061477680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1675061490639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,8 +101,13 @@\n       isValid = false\r\n       messageQueue += \"IBAN inválido\\n\"\r\n     }\r\n \r\n+    if (messageQueue != \"\") {\r\n+      alert(messageQueue)\r\n+    }\r\n+    return isValid\r\n+\r\n   }\r\n   \r\n   // handleAddAccount() -> send data to server\r\n   const handleAddAccount = async () => {\r\n"
                },
                {
                    "date": 1675061545871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,9 +164,9 @@\n           </View>\r\n       </View>\r\n       <View style={styles.containerBTN}>\r\n         <CustomButton\r\n-          onPress={() => handleAddAccount()}\r\n+          onPress={() =>  {if(validateForm() == true) handleAddAccount()}}\r\n           text=\"Adicionar\"\r\n           type=\"TERTIARY\"\r\n           widthScale={0.8}\r\n         ></CustomButton>\r\n"
                },
                {
                    "date": 1675061965203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,8 +58,12 @@\n   const [name, setName] = useState('')\r\n   const [titular,setTitular]= useState('')\r\n   const [contribuinte,setContribuinte]= useState('')\r\n   const [iban,setIban]= useState('')\r\n+  const [validName, setValidName] = useState(true)\r\n+  const [validTitular, setValidTitular] = useState(true)\r\n+  const [validContribuinte, setValidContribuinte] = useState(true)\r\n+  const [validIban, setValidIban] = useState(true)\r\n \r\n \r\n   const validateForm = () => {\r\n     // check if all fields are filled with proper information\r\n@@ -106,8 +110,21 @@\n       alert(messageQueue)\r\n     }\r\n     return isValid\r\n \r\n+  };\r\n+\r\n+  function setAllVarsTrue(){\r\n+    setValidName(true)\r\n+    setValidTitular(true)\r\n+    setValidContribuinte(true)\r\n+    setValidIban(true)\r\n+  };\r\n+  function showErrorField(text){\r\n+    return(<Text style= {{alignSelf: 'flex-start', paddingHorizontal:30}}>\r\n+    <Text style={styles.text}>{text}</Text>\r\n+    <Text style={styles.error}> * Campo Obrigatório</Text>\r\n+  </Text>)\r\n   }\r\n   \r\n   // handleAddAccount() -> send data to server\r\n   const handleAddAccount = async () => {\r\n@@ -148,9 +165,9 @@\n               <Text style={styles.textTag}>Nome Conta</Text>\r\n               <CustomInput placeholder={\"Conta Pessoal\"} value={name} setValue={setName} widthScale={0.8}/>\r\n           </View>\r\n           <View style={styles.infoLine}>\r\n-              <Text style={styles.textTag}>Titular</Text>\r\n+              {validTitular ? <Text style={styles.textTag}>Titular</Text> : showErrorField(\"Titular\")}\r\n               <CustomInput placeholder={\"\"} value={titular} setValue={setTitular} widthScale={0.8}/>\r\n           </View>\r\n \r\n           <View style={styles.infoLine}>\r\n"
                },
                {
                    "date": 1675062027014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,23 +161,23 @@\n     <SafeAreaView style={styles.root}>\r\n       {/* CONTAINER COM OUTLINE */}\r\n       <View style={styles.infoContainer}>\r\n       <View style={styles.infoLine}>\r\n-              <Text style={styles.textTag}>Nome Conta</Text>\r\n+              {validTitular ? <Text style={styles.textTag}>Nome Conta</Text> : showErrorField(\"Nome Conta\")}\r\n               <CustomInput placeholder={\"Conta Pessoal\"} value={name} setValue={setName} widthScale={0.8}/>\r\n           </View>\r\n           <View style={styles.infoLine}>\r\n               {validTitular ? <Text style={styles.textTag}>Titular</Text> : showErrorField(\"Titular\")}\r\n               <CustomInput placeholder={\"\"} value={titular} setValue={setTitular} widthScale={0.8}/>\r\n           </View>\r\n \r\n           <View style={styles.infoLine}>\r\n-            <Text style={styles.textTag}>Contribuinte</Text>\r\n+            {validContribuinte ? <Text style={styles.textTag}>Contribuinte</Text> : showErrorField(\"Contribuinte\")}\r\n             <CustomInput placeholder={\"\"} value={contribuinte} setValue={setContribuinte} widthScale={0.8}/>\r\n           </View>\r\n           \r\n           <View style={styles.infoLine}>\r\n-            <Text style={styles.textTag}>IBAN</Text>\r\n+            {validIban ? <Text style={styles.textTag}>IBAN</Text> : showErrorField(\"IBAN\")}\r\n             <CustomInput placeholder={\"PT50 0000 0000 0000 0000 0000 0\"} value={iban} setValue={setIban} widthScale={0.8}/>\r\n           </View>\r\n       </View>\r\n       <View style={styles.containerBTN}>\r\n"
                },
                {
                    "date": 1675062265908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,45 +71,31 @@\n     let isValid = true\r\n \r\n     if (!name) {\r\n       isValid = false\r\n-      messageQueue += \"Nome da conta não pode estar vazio\\n\"\r\n     }\r\n     if (!titular) {\r\n       isValid = false\r\n-      messageQueue += \"Titular não pode estar vazio\\n\"\r\n     }\r\n     if (!contribuinte) {\r\n       isValid = false\r\n-      messageQueue += \"Contribuinte não pode estar vazio\\n\"\r\n     }\r\n     if (!iban) {\r\n       isValid = false\r\n-      messageQueue += \"IBAN não pode estar vazio\\n\"\r\n     }\r\n-\r\n     //check titular has no numbers\r\n-    \r\n     if (titular.match(/\\d+/g)) {\r\n       isValid = false\r\n-      messageQueue += \"Titular não pode conter números\\n\"\r\n     }\r\n-\r\n     //check contribuinte is contruibuinte portugues\r\n     if (contribuinte.length != 9) {\r\n       isValid = false\r\n-      messageQueue += \"Contribuinte inválido\\n\"\r\n     }\r\n-\r\n     //check if is a valid IBAN\r\n     if (iban.length != 25) {\r\n       isValid = false\r\n-      messageQueue += \"IBAN inválido\\n\"\r\n     }\r\n-\r\n-    if (messageQueue != \"\") {\r\n-      alert(messageQueue)\r\n-    }\r\n+  \r\n     return isValid\r\n \r\n   };\r\n \r\n@@ -119,8 +105,33 @@\n     setValidContribuinte(true)\r\n     setValidIban(true)\r\n   };\r\n   function showErrorField(text){\r\n+    var textToWrite = \"\"\r\n+    if (text == \"Nome Conta\"){\r\n+      if (!name){\r\n+        textToWrite = \"Nome da Conta Obrigatório\"\r\n+      }\r\n+      else (!name) {\r\n+        textToWrite = \"Nome Incorrecto\"\r\n+      }\r\n+    }\r\n+\r\n+    if (text == \"Titular\"){\r\n+      if (!titular){\r\n+        textToWrite = \"Titular Obrigatório\"\r\n+      }\r\n+      else (!titular){\r\n+        textToWrite = \"Titular Incorrecto\"\r\n+      }\r\n+\r\n+    }\r\n+\r\n+    if (text == \"Contribuinte\"){\r\n+\r\n+    }\r\n+\r\n+\r\n     return(<Text style= {{alignSelf: 'flex-start', paddingHorizontal:30}}>\r\n     <Text style={styles.text}>{text}</Text>\r\n     <Text style={styles.error}> * Campo Obrigatório</Text>\r\n   </Text>)\r\n"
                },
                {
                    "date": 1675062341084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,28 +110,45 @@\n     if (text == \"Nome Conta\"){\r\n       if (!name){\r\n         textToWrite = \"Nome da Conta Obrigatório\"\r\n       }\r\n-      else (!name) {\r\n+      else  {\r\n         textToWrite = \"Nome Incorrecto\"\r\n       }\r\n     }\r\n-\r\n     if (text == \"Titular\"){\r\n       if (!titular){\r\n         textToWrite = \"Titular Obrigatório\"\r\n       }\r\n-      else (!titular){\r\n+      else {\r\n         textToWrite = \"Titular Incorrecto\"\r\n       }\r\n \r\n     }\r\n \r\n     if (text == \"Contribuinte\"){\r\n+      if (!contribuinte){\r\n+        textToWrite = \"Contribuinte Obrigatório\"\r\n+      }\r\n+      else {\r\n+        textToWrite = \"Contribuinte Incorrecto\"\r\n+      }\r\n \r\n     }\r\n \r\n+    if (text == \"IBAN\"){\r\n+      if (!iban){\r\n+        textToWrite = \"IBAN Obrigatório\"\r\n+      }\r\n+      else {\r\n+        textToWrite = \"IBAN Incorrecto\"\r\n+      }\r\n \r\n+    }\r\n+\r\n+  }\r\n+\r\n+\r\n     return(<Text style= {{alignSelf: 'flex-start', paddingHorizontal:30}}>\r\n     <Text style={styles.text}>{text}</Text>\r\n     <Text style={styles.error}> * Campo Obrigatório</Text>\r\n   </Text>)\r\n"
                },
                {
                    "date": 1675062361682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,14 +144,12 @@\n       }\r\n \r\n     }\r\n \r\n-  }\r\n-\r\n-\r\n+  \r\n     return(<Text style= {{alignSelf: 'flex-start', paddingHorizontal:30}}>\r\n     <Text style={styles.text}>{text}</Text>\r\n-    <Text style={styles.error}> * Campo Obrigatório</Text>\r\n+    <Text style={styles.error}> {textToWrite}</Text>\r\n   </Text>)\r\n   }\r\n   \r\n   // handleAddAccount() -> send data to server\r\n"
                },
                {
                    "date": 1675062401795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n           </View>\r\n       </View>\r\n       <View style={styles.containerBTN}>\r\n         <CustomButton\r\n-          onPress={() =>  {if(validateForm() == true) handleAddAccount()}}\r\n+          onPress={() =>  {if(validateForm() == true) handleAddAccount(), setAllVarsTrue()}}\r\n           text=\"Adicionar\"\r\n           type=\"TERTIARY\"\r\n           widthScale={0.8}\r\n         ></CustomButton>\r\n"
                },
                {
                    "date": 1675063316922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,9 +114,9 @@\n       else  {\r\n         textToWrite = \"Nome Incorrecto\"\r\n       }\r\n     }\r\n-    if (text == \"Titular\"){\r\n+    else if (text == \"Titular\"){\r\n       if (!titular){\r\n         textToWrite = \"Titular Obrigatório\"\r\n       }\r\n       else {\r\n@@ -124,9 +124,9 @@\n       }\r\n \r\n     }\r\n \r\n-    if (text == \"Contribuinte\"){\r\n+    else if (text == \"Contribuinte\"){\r\n       if (!contribuinte){\r\n         textToWrite = \"Contribuinte Obrigatório\"\r\n       }\r\n       else {\r\n@@ -134,9 +134,9 @@\n       }\r\n \r\n     }\r\n \r\n-    if (text == \"IBAN\"){\r\n+    else if (text == \"IBAN\"){\r\n       if (!iban){\r\n         textToWrite = \"IBAN Obrigatório\"\r\n       }\r\n       else {\r\n@@ -187,9 +187,9 @@\n     <SafeAreaView style={styles.root}>\r\n       {/* CONTAINER COM OUTLINE */}\r\n       <View style={styles.infoContainer}>\r\n       <View style={styles.infoLine}>\r\n-              {validTitular ? <Text style={styles.textTag}>Nome Conta</Text> : showErrorField(\"Nome Conta\")}\r\n+              {validName ? <Text style={styles.textTag}>Nome Conta</Text> : showErrorField(\"Nome Conta\")}\r\n               <CustomInput placeholder={\"Conta Pessoal\"} value={name} setValue={setName} widthScale={0.8}/>\r\n           </View>\r\n           <View style={styles.infoLine}>\r\n               {validTitular ? <Text style={styles.textTag}>Titular</Text> : showErrorField(\"Titular\")}\r\n"
                },
                {
                    "date": 1675065248719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,12 +266,13 @@\n       width: '60%',\r\n       marginBottom: 10,\r\n     },\r\n     textTag: {\r\n-      fontFamily: 'SoraBold',\r\n-      fontSize: SIZES.medium,\r\n       color: COLORS.wingDarkBlue,\r\n-      marginBottom: 5,\r\n+      fontFamily: \"SoraLight\",\r\n+      fontSize: 15,\r\n+      alignSelf: \"flex-start\",\r\n+      paddingHorizontal: 30,\r\n     },\r\n     textInfo: {\r\n       //marginLeft: 30,\r\n       fontFamily: 'SoraLight',\r\n"
                },
                {
                    "date": 1675065254918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,9 +270,9 @@\n       color: COLORS.wingDarkBlue,\r\n       fontFamily: \"SoraLight\",\r\n       fontSize: 15,\r\n       alignSelf: \"flex-start\",\r\n-      paddingHorizontal: 30,\r\n+      \r\n     },\r\n     textInfo: {\r\n       //marginLeft: 30,\r\n       fontFamily: 'SoraLight',\r\n"
                },
                {
                    "date": 1675065261499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -267,9 +267,9 @@\n       marginBottom: 10,\r\n     },\r\n     textTag: {\r\n       color: COLORS.wingDarkBlue,\r\n-      fontFamily: \"SoraLight\",\r\n+      fontFamily: \"SoraMedium\",\r\n       fontSize: 15,\r\n       alignSelf: \"flex-start\",\r\n       \r\n     },\r\n"
                },
                {
                    "date": 1675065269495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,10 +270,16 @@\n       color: COLORS.wingDarkBlue,\r\n       fontFamily: \"SoraMedium\",\r\n       fontSize: 15,\r\n       alignSelf: \"flex-start\",\r\n-      \r\n     },\r\n+    error: {\r\n+      color: \"red\",\r\n+      fontFamily: \"SoraLight\",\r\n+      fontSize: SIZES.small,\r\n+      alignSelf: \"flex-start\",\r\n+      paddingHorizontal: 30,\r\n+    },\r\n     textInfo: {\r\n       //marginLeft: 30,\r\n       fontFamily: 'SoraLight',\r\n       fontSize: SIZES.medium,\r\n"
                },
                {
                    "date": 1675065275061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -276,9 +276,9 @@\n       color: \"red\",\r\n       fontFamily: \"SoraLight\",\r\n       fontSize: SIZES.small,\r\n       alignSelf: \"flex-start\",\r\n-      paddingHorizontal: 30,\r\n+      \r\n     },\r\n     textInfo: {\r\n       //marginLeft: 30,\r\n       fontFamily: 'SoraLight',\r\n"
                },
                {
                    "date": 1675065285620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,9 +146,9 @@\n     }\r\n \r\n   \r\n     return(<Text style= {{alignSelf: 'flex-start', paddingHorizontal:30}}>\r\n-    <Text style={styles.text}>{text}</Text>\r\n+    <Text style={styles.textTag}>{text}</Text>\r\n     <Text style={styles.error}> {textToWrite}</Text>\r\n   </Text>)\r\n   }\r\n   \r\n@@ -276,9 +276,8 @@\n       color: \"red\",\r\n       fontFamily: \"SoraLight\",\r\n       fontSize: SIZES.small,\r\n       alignSelf: \"flex-start\",\r\n-      \r\n     },\r\n     textInfo: {\r\n       //marginLeft: 30,\r\n       fontFamily: 'SoraLight',\r\n"
                },
                {
                    "date": 1675065303863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n           </View>\r\n       </View>\r\n       <View style={styles.containerBTN}>\r\n         <CustomButton\r\n-          onPress={() =>  {if(validateForm() == true) handleAddAccount(), setAllVarsTrue()}}\r\n+          onPress={() =>  {if(validateForm() == true) (handleAddAccount(), setAllVarsTrue())}}\r\n           text=\"Adicionar\"\r\n           type=\"TERTIARY\"\r\n           widthScale={0.8}\r\n         ></CustomButton>\r\n"
                },
                {
                    "date": 1675065321790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,11 @@\n           </View>\r\n       </View>\r\n       <View style={styles.containerBTN}>\r\n         <CustomButton\r\n-          onPress={() =>  {if(validateForm() == true) (handleAddAccount(), setAllVarsTrue())}}\r\n+          onPress={() =>  {if(validateForm() == true) {\r\n+            handleAddAccount(), setAllVarsTrue()}\r\n+          }}\r\n           text=\"Adicionar\"\r\n           type=\"TERTIARY\"\r\n           widthScale={0.8}\r\n         ></CustomButton>\r\n"
                },
                {
                    "date": 1675065348262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,22 +66,25 @@\n \r\n \r\n   const validateForm = () => {\r\n     // check if all fields are filled with proper information\r\n-    var messageQueue = \"\"\r\n     let isValid = true\r\n \r\n     if (!name) {\r\n       isValid = false\r\n+      setValidName(false)\r\n     }\r\n     if (!titular) {\r\n       isValid = false\r\n+      setValidTitular(false)\r\n     }\r\n     if (!contribuinte) {\r\n       isValid = false\r\n+      setValidContribuinte(false)\r\n     }\r\n     if (!iban) {\r\n       isValid = false\r\n+      setValidIban(false)\r\n     }\r\n     //check titular has no numbers\r\n     if (titular.match(/\\d+/g)) {\r\n       isValid = false\r\n"
                },
                {
                    "date": 1675065356069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,16 +87,19 @@\n     }\r\n     //check titular has no numbers\r\n     if (titular.match(/\\d+/g)) {\r\n       isValid = false\r\n+      setValidTitular(false)\r\n     }\r\n     //check contribuinte is contruibuinte portugues\r\n     if (contribuinte.length != 9) {\r\n       isValid = false\r\n+      setValidContribuinte(false)\r\n     }\r\n     //check if is a valid IBAN\r\n     if (iban.length != 25) {\r\n       isValid = false\r\n+      setValidIban(false)\r\n     }\r\n   \r\n     return isValid\r\n \r\n"
                },
                {
                    "date": 1675065403530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,9 +151,9 @@\n \r\n     }\r\n \r\n   \r\n-    return(<Text style= {{alignSelf: 'flex-start', paddingHorizontal:30}}>\r\n+    return(<Text style= {{alignSelf: 'flex-start'}}>\r\n     <Text style={styles.textTag}>{text}</Text>\r\n     <Text style={styles.error}> {textToWrite}</Text>\r\n   </Text>)\r\n   }\r\n"
                },
                {
                    "date": 1675065486044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,46 +112,42 @@\n     setValidIban(true)\r\n   };\r\n   function showErrorField(text){\r\n     var textToWrite = \"\"\r\n-    if (text == \"Nome Conta\"){\r\n-      if (!name){\r\n-        textToWrite = \"Nome da Conta Obrigatório\"\r\n+    //check if name is empty\r\n+    if(text == \"Nome Conta\" && !validName){\r\n+      textToWrite = \"*Nome da conta não pode estar vazio\"\r\n+    }\r\n+    //check if titular is empty\r\n+    if (text == \"Titular\") {\r\n+      if (!validTitular) {\r\n+        textToWrite = \"*Titular não pode estar vazio\"\r\n       }\r\n-      else  {\r\n-        textToWrite = \"Nome Incorrecto\"\r\n+      else if (titular.match(/\\d+/g)) {\r\n+        textToWrite = \"*Titular não pode conter números\"\r\n       }\r\n     }\r\n-    else if (text == \"Titular\"){\r\n-      if (!titular){\r\n-        textToWrite = \"Titular Obrigatório\"\r\n+    //check if contribuinte is empty\r\n+    if (text == \"Contribuinte\") {\r\n+      if (!validContribuinte) {\r\n+        textToWrite = \"*Contribuinte não pode estar vazio\"\r\n       }\r\n-      else {\r\n-        textToWrite = \"Titular Incorrecto\"\r\n+      else if (contribuinte.length != 9) {\r\n+        textToWrite = \"*Contribuinte inválido\"\r\n       }\r\n-\r\n     }\r\n-\r\n-    else if (text == \"Contribuinte\"){\r\n-      if (!contribuinte){\r\n-        textToWrite = \"Contribuinte Obrigatório\"\r\n+    //check if iban is empty\r\n+    if (text == \"IBAN\") {\r\n+      if (!validIban) {\r\n+        textToWrite = \"*IBAN não pode estar vazio\"\r\n       }\r\n-      else {\r\n-        textToWrite = \"Contribuinte Incorrecto\"\r\n+      else if (iban.length != 25) {\r\n+        textToWrite = \"*IBAN inválido\"\r\n       }\r\n-\r\n     }\r\n+    \r\n \r\n-    else if (text == \"IBAN\"){\r\n-      if (!iban){\r\n-        textToWrite = \"IBAN Obrigatório\"\r\n-      }\r\n-      else {\r\n-        textToWrite = \"IBAN Incorrecto\"\r\n-      }\r\n \r\n-    }\r\n-\r\n   \r\n     return(<Text style= {{alignSelf: 'flex-start'}}>\r\n     <Text style={styles.textTag}>{text}</Text>\r\n     <Text style={styles.error}> {textToWrite}</Text>\r\n"
                },
                {
                    "date": 1675065492332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,11 +144,8 @@\n         textToWrite = \"*IBAN inválido\"\r\n       }\r\n     }\r\n     \r\n-\r\n-\r\n-  \r\n     return(<Text style= {{alignSelf: 'flex-start'}}>\r\n     <Text style={styles.textTag}>{text}</Text>\r\n     <Text style={styles.error}> {textToWrite}</Text>\r\n   </Text>)\r\n"
                },
                {
                    "date": 1675065554189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,32 +114,32 @@\n   function showErrorField(text){\r\n     var textToWrite = \"\"\r\n     //check if name is empty\r\n     if(text == \"Nome Conta\" && !validName){\r\n-      textToWrite = \"*Nome da conta não pode estar vazio\"\r\n+      textToWrite = \"* Campo Obrigatório\"\r\n     }\r\n     //check if titular is empty\r\n     if (text == \"Titular\") {\r\n       if (!validTitular) {\r\n-        textToWrite = \"*Titular não pode estar vazio\"\r\n+        textToWrite = \"* Campo Obrigatório\"\r\n       }\r\n       else if (titular.match(/\\d+/g)) {\r\n         textToWrite = \"*Titular não pode conter números\"\r\n       }\r\n     }\r\n     //check if contribuinte is empty\r\n     if (text == \"Contribuinte\") {\r\n       if (!validContribuinte) {\r\n-        textToWrite = \"*Contribuinte não pode estar vazio\"\r\n+        textToWrite = \"* Campo Obrigatório\"\r\n       }\r\n       else if (contribuinte.length != 9) {\r\n         textToWrite = \"*Contribuinte inválido\"\r\n       }\r\n     }\r\n     //check if iban is empty\r\n     if (text == \"IBAN\") {\r\n       if (!validIban) {\r\n-        textToWrite = \"*IBAN não pode estar vazio\"\r\n+        textToWrite = \"* Campo Obrigatório\"\r\n       }\r\n       else if (iban.length != 25) {\r\n         textToWrite = \"*IBAN inválido\"\r\n       }\r\n"
                },
                {
                    "date": 1675068518543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,10 +113,15 @@\n   };\r\n   function showErrorField(text){\r\n     var textToWrite = \"\"\r\n     //check if name is empty\r\n-    if(text == \"Nome Conta\" && !validName){\r\n-      textToWrite = \"* Campo Obrigatório\"\r\n+    if(text == \"Nome Conta\") {\r\n+      if (!validName) {\r\n+        textToWrite = \"* Campo Obrigatório\"\r\n+      }\r\n+      else if (name.length < 3) {\r\n+        textToWrite = \"*Nome da conta inválido\"\r\n+      }\r\n     }\r\n     //check if titular is empty\r\n     if (text == \"Titular\") {\r\n       if (!validTitular) {\r\n"
                },
                {
                    "date": 1675068525374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n     if(text == \"Nome Conta\") {\r\n       if (!validName) {\r\n         textToWrite = \"* Campo Obrigatório\"\r\n       }\r\n-      else if (name.length < 3) {\r\n+      else if (name.length < 1) {\r\n         textToWrite = \"*Nome da conta inválido\"\r\n       }\r\n     }\r\n     //check if titular is empty\r\n"
                },
                {
                    "date": 1675068552799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,8 +129,9 @@\n       }\r\n       else if (titular.match(/\\d+/g)) {\r\n         textToWrite = \"*Titular não pode conter números\"\r\n       }\r\n+      else textToWrite = \"\"\r\n     }\r\n     //check if contribuinte is empty\r\n     if (text == \"Contribuinte\") {\r\n       if (!validContribuinte) {\r\n"
                },
                {
                    "date": 1675068728177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,9 +129,8 @@\n       }\r\n       else if (titular.match(/\\d+/g)) {\r\n         textToWrite = \"*Titular não pode conter números\"\r\n       }\r\n-      else textToWrite = \"\"\r\n     }\r\n     //check if contribuinte is empty\r\n     if (text == \"Contribuinte\") {\r\n       if (!validContribuinte) {\r\n@@ -192,23 +191,23 @@\n     <SafeAreaView style={styles.root}>\r\n       {/* CONTAINER COM OUTLINE */}\r\n       <View style={styles.infoContainer}>\r\n       <View style={styles.infoLine}>\r\n-              {validName ? <Text style={styles.textTag}>Nome Conta</Text> : showErrorField(\"Nome Conta\")}\r\n+              {validName ? (<Text style={styles.textTag}>Nome Conta</Text> ): showErrorField(\"Nome Conta\")}\r\n               <CustomInput placeholder={\"Conta Pessoal\"} value={name} setValue={setName} widthScale={0.8}/>\r\n           </View>\r\n           <View style={styles.infoLine}>\r\n-              {validTitular ? <Text style={styles.textTag}>Titular</Text> : showErrorField(\"Titular\")}\r\n+              {validTitular ? (<Text style={styles.textTag}>Titular</Text> ): showErrorField(\"Titular\")}\r\n               <CustomInput placeholder={\"\"} value={titular} setValue={setTitular} widthScale={0.8}/>\r\n           </View>\r\n \r\n           <View style={styles.infoLine}>\r\n-            {validContribuinte ? <Text style={styles.textTag}>Contribuinte</Text> : showErrorField(\"Contribuinte\")}\r\n+            {validContribuinte ? (<Text style={styles.textTag}>Contribuinte</Text>) : showErrorField(\"Contribuinte\")}\r\n             <CustomInput placeholder={\"\"} value={contribuinte} setValue={setContribuinte} widthScale={0.8}/>\r\n           </View>\r\n           \r\n           <View style={styles.infoLine}>\r\n-            {validIban ? <Text style={styles.textTag}>IBAN</Text> : showErrorField(\"IBAN\")}\r\n+            {validIban ? (<Text style={styles.textTag}>IBAN</Text>) : showErrorField(\"IBAN\")}\r\n             <CustomInput placeholder={\"PT50 0000 0000 0000 0000 0000 0\"} value={iban} setValue={setIban} widthScale={0.8}/>\r\n           </View>\r\n       </View>\r\n       <View style={styles.containerBTN}>\r\n"
                },
                {
                    "date": 1675068750143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,23 +191,23 @@\n     <SafeAreaView style={styles.root}>\r\n       {/* CONTAINER COM OUTLINE */}\r\n       <View style={styles.infoContainer}>\r\n       <View style={styles.infoLine}>\r\n-              {validName ? (<Text style={styles.textTag}>Nome Conta</Text> ): showErrorField(\"Nome Conta\")}\r\n+              {validName ? (<Text style={styles.textTag}>Nome Conta</Text> ): (showErrorField(\"Nome Conta\"))}\r\n               <CustomInput placeholder={\"Conta Pessoal\"} value={name} setValue={setName} widthScale={0.8}/>\r\n           </View>\r\n           <View style={styles.infoLine}>\r\n-              {validTitular ? (<Text style={styles.textTag}>Titular</Text> ): showErrorField(\"Titular\")}\r\n+              {validTitular ? (<Text style={styles.textTag}>Titular</Text> ): (showErrorField(\"Titular\"))}\r\n               <CustomInput placeholder={\"\"} value={titular} setValue={setTitular} widthScale={0.8}/>\r\n           </View>\r\n \r\n           <View style={styles.infoLine}>\r\n-            {validContribuinte ? (<Text style={styles.textTag}>Contribuinte</Text>) : showErrorField(\"Contribuinte\")}\r\n+            {validContribuinte ? (<Text style={styles.textTag}>Contribuinte</Text>) : (showErrorField(\"Contribuinte\"))}\r\n             <CustomInput placeholder={\"\"} value={contribuinte} setValue={setContribuinte} widthScale={0.8}/>\r\n           </View>\r\n           \r\n           <View style={styles.infoLine}>\r\n-            {validIban ? (<Text style={styles.textTag}>IBAN</Text>) : showErrorField(\"IBAN\")}\r\n+            {validIban ? (<Text style={styles.textTag}>IBAN</Text>) :( showErrorField(\"IBAN\"))}\r\n             <CustomInput placeholder={\"PT50 0000 0000 0000 0000 0000 0\"} value={iban} setValue={setIban} widthScale={0.8}/>\r\n           </View>\r\n       </View>\r\n       <View style={styles.containerBTN}>\r\n"
                },
                {
                    "date": 1675068811374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,8 +111,13 @@\n     setValidContribuinte(true)\r\n     setValidIban(true)\r\n   };\r\n   function showErrorField(text){\r\n+    console.log(\"In showErrorField\")\r\n+    console.log(name)\r\n+    console.log(titular)\r\n+    console.log(contribuinte)\r\n+    console.log(iban)\r\n     var textToWrite = \"\"\r\n     //check if name is empty\r\n     if(text == \"Nome Conta\") {\r\n       if (!validName) {\r\n"
                },
                {
                    "date": 1675068866373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,36 +119,36 @@\n     console.log(iban)\r\n     var textToWrite = \"\"\r\n     //check if name is empty\r\n     if(text == \"Nome Conta\") {\r\n-      if (!validName) {\r\n+      if (!name) {\r\n         textToWrite = \"* Campo Obrigatório\"\r\n       }\r\n       else if (name.length < 1) {\r\n         textToWrite = \"*Nome da conta inválido\"\r\n       }\r\n     }\r\n     //check if titular is empty\r\n     if (text == \"Titular\") {\r\n-      if (!validTitular) {\r\n+      if (!titular) {\r\n         textToWrite = \"* Campo Obrigatório\"\r\n       }\r\n       else if (titular.match(/\\d+/g)) {\r\n         textToWrite = \"*Titular não pode conter números\"\r\n       }\r\n     }\r\n     //check if contribuinte is empty\r\n     if (text == \"Contribuinte\") {\r\n-      if (!validContribuinte) {\r\n+      if (!contribuinte) {\r\n         textToWrite = \"* Campo Obrigatório\"\r\n       }\r\n       else if (contribuinte.length != 9) {\r\n         textToWrite = \"*Contribuinte inválido\"\r\n       }\r\n     }\r\n     //check if iban is empty\r\n     if (text == \"IBAN\") {\r\n-      if (!validIban) {\r\n+      if (!iban) {\r\n         textToWrite = \"* Campo Obrigatório\"\r\n       }\r\n       else if (iban.length != 25) {\r\n         textToWrite = \"*IBAN inválido\"\r\n"
                }
            ],
            "date": 1675061477680,
            "name": "Commit-0",
            "content": "import {\r\n  View,\r\n  Text,\r\n  Image,\r\n  useWindowDimensions,\r\n  SafeAreaView,\r\n  Button,\r\n  StyleSheet,\r\n  Platform,\r\n} from 'react-native'\r\nimport React from 'react'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\nimport { COLORS, SHADOWS, SIZES } from '../constants'\r\nimport { useState, useEffect } from 'react'\r\nimport { serverURL } from '../config/hosts'\r\nimport { CustomInput, CustomButton } from '../components'\r\nimport { useRoute } from '@react-navigation/native'\r\n\r\nexport default function AddAccountScreen({ navigation }) {\r\n  const { height } = useWindowDimensions()\r\n  const [token, setToken] = useState('')\r\n\r\n  useEffect(() => {\r\n    AsyncStorage.getItem('userToken')\r\n      .then((userToken) => setToken(JSON.parse(userToken)))\r\n      .catch((err) => console.log(err))\r\n  }, [])\r\n\r\n  const [data, setData] = useState([])\r\n  const fetchData = async (token) => {\r\n    //console.log(serverURL + '/users/userProfile/' + token.id)\r\n  }\r\n  // request data from server\r\n  useEffect(() => {\r\n    console.log('Entered useEffect: ' + JSON.stringify(token) + '\\n')\r\n    if (token.id) {\r\n      fetchData(token)\r\n    }\r\n  }, [token])\r\n\r\n  // every time route.params is true when user add account, refresh data\r\n  const route = useRoute()\r\n  useEffect(() => {\r\n    // dont do shit if route.params is undefined\r\n    if (route.params) {\r\n      // se nao for undefined\r\n      if (route.params.refresh) {\r\n        // se for true\r\n        console.log('Entered useEffect route.params')\r\n        fetchData(token)\r\n        console.log(typeof route.params.refresh)\r\n        // set route.params.refresh to false\r\n        route.params.refresh = false\r\n      }\r\n    }\r\n  }, [route.params])\r\n\r\n  const [name, setName] = useState('')\r\n  const [titular,setTitular]= useState('')\r\n  const [contribuinte,setContribuinte]= useState('')\r\n  const [iban,setIban]= useState('')\r\n\r\n\r\n  const validateForm = () => {\r\n    // check if all fields are filled with proper information\r\n    var messageQueue = \"\"\r\n    let isValid = true\r\n\r\n    if (!name) {\r\n      isValid = false\r\n      messageQueue += \"Nome da conta não pode estar vazio\\n\"\r\n    }\r\n    if (!titular) {\r\n      isValid = false\r\n      messageQueue += \"Titular não pode estar vazio\\n\"\r\n    }\r\n    if (!contribuinte) {\r\n      isValid = false\r\n      messageQueue += \"Contribuinte não pode estar vazio\\n\"\r\n    }\r\n    if (!iban) {\r\n      isValid = false\r\n      messageQueue += \"IBAN não pode estar vazio\\n\"\r\n    }\r\n\r\n    //check titular has no numbers\r\n    \r\n    if (titular.match(/\\d+/g)) {\r\n      isValid = false\r\n      messageQueue += \"Titular não pode conter números\\n\"\r\n    }\r\n\r\n    //check contribuinte is contruibuinte portugues\r\n    if (contribuinte.length != 9) {\r\n      isValid = false\r\n      messageQueue += \"Contribuinte inválido\\n\"\r\n    }\r\n\r\n    //check if is a valid IBAN\r\n    if (iban.length != 25) {\r\n      isValid = false\r\n      messageQueue += \"IBAN inválido\\n\"\r\n    }\r\n\r\n  }\r\n  \r\n  // handleAddAccount() -> send data to server\r\n  const handleAddAccount = async () => {\r\n    console.log('Entered handleAddAccount')\r\n    console.log('name: ' + name)\r\n    console.log('titular: ' + titular)\r\n    console.log('contribuinte: ' + contribuinte)\r\n    console.log('iban: ' + iban)\r\n    console.log('token: ' + token.id)\r\n    // send data to server\r\n    const response = await fetch(serverURL + '/bank/createBankAccount', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        accountName: name,\r\n        titular: titular,\r\n        NIF: contribuinte,\r\n        IBAN: iban,\r\n        idUser: token.id,\r\n      }),\r\n    })\r\n    const data = await response.json()\r\n    console.log('data: ' + JSON.stringify(data))\r\n    // if data is not empty, then account was added\r\n    if (data) {\r\n      // go back to AccountsScreen and refresh data\r\n      navigation.navigate('Accounts', { refresh: true })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.root}>\r\n      {/* CONTAINER COM OUTLINE */}\r\n      <View style={styles.infoContainer}>\r\n      <View style={styles.infoLine}>\r\n              <Text style={styles.textTag}>Nome Conta</Text>\r\n              <CustomInput placeholder={\"Conta Pessoal\"} value={name} setValue={setName} widthScale={0.8}/>\r\n          </View>\r\n          <View style={styles.infoLine}>\r\n              <Text style={styles.textTag}>Titular</Text>\r\n              <CustomInput placeholder={\"\"} value={titular} setValue={setTitular} widthScale={0.8}/>\r\n          </View>\r\n\r\n          <View style={styles.infoLine}>\r\n            <Text style={styles.textTag}>Contribuinte</Text>\r\n            <CustomInput placeholder={\"\"} value={contribuinte} setValue={setContribuinte} widthScale={0.8}/>\r\n          </View>\r\n          \r\n          <View style={styles.infoLine}>\r\n            <Text style={styles.textTag}>IBAN</Text>\r\n            <CustomInput placeholder={\"PT50 0000 0000 0000 0000 0000 0\"} value={iban} setValue={setIban} widthScale={0.8}/>\r\n          </View>\r\n      </View>\r\n      <View style={styles.containerBTN}>\r\n        <CustomButton\r\n          onPress={() => handleAddAccount()}\r\n          text=\"Adicionar\"\r\n          type=\"TERTIARY\"\r\n          widthScale={0.8}\r\n        ></CustomButton>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n  //)\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.white,\r\n   \r\n  },\r\n  containerBTN: {\r\n    // Put the buttons if there is space 2mm after infoContainer\r\n    // center the buttons\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  container: {\r\n    // outline in wing blue, rounded corners\r\n    backgroundColor: COLORS.wingblue,\r\n    borderRadius: 10,\r\n    margin: 10,\r\n    padding: 20\r\n    },\r\n    Maincontainer: {\r\n        marginHorizontal: 30,\r\n        marginTop: \"7%\",\r\n        marginBottom: \"7%\"\r\n    },\r\n    iconStyle: {\r\n        position: 'absolute',\r\n        //  center horizontally\r\n        right: 30,\r\n        top: 32\r\n    },\r\n    infoContainer: {\r\n      marginHorizontal: 40,\r\n      marginTop: \"7%\",\r\n      marginBottom: \"7%\",\r\n    },\r\n    infoLine: {\r\n      // space between two lines of info\r\n      marginBottom: 15,\r\n    },\r\n    col1: {\r\n      width: '40%',\r\n      marginBottom: 10,\r\n    },\r\n    col2: {\r\n      width: '60%',\r\n      marginBottom: 10,\r\n    },\r\n    textTag: {\r\n      fontFamily: 'SoraBold',\r\n      fontSize: SIZES.medium,\r\n      color: COLORS.wingDarkBlue,\r\n      marginBottom: 5,\r\n    },\r\n    textInfo: {\r\n      //marginLeft: 30,\r\n      fontFamily: 'SoraLight',\r\n      fontSize: SIZES.medium,\r\n    },\r\n    \r\n})\r\n"
        }
    ]
}