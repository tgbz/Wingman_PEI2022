{
    "sourceFile": "app/src/screens/HomeScreen.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 46,
            "patches": [
                {
                    "date": 1674127451404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1674127492212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n \r\n   const transactionsList = [];\r\n   // Extract only the wanted info from the request to api\r\n   function adjustData(transData) {\r\n-    if (transData.length === 0) return;\r\n+    console.log(transData);\r\n     transData.forEach((element) => {\r\n       let obj = {\r\n         date: treatDate(element.date),\r\n         transaction: element.seller,\r\n"
                },
                {
                    "date": 1674127519126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,11 @@\n \r\n   const transactionsList = [];\r\n   // Extract only the wanted info from the request to api\r\n   function adjustData(transData) {\r\n+    console.log(\"\\n\\n\\nTESTE\");\r\n     console.log(transData);\r\n+\r\n     transData.forEach((element) => {\r\n       let obj = {\r\n         date: treatDate(element.date),\r\n         transaction: element.seller,\r\n"
                },
                {
                    "date": 1674127558967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,8 @@\n \r\n   const transactionsList = [];\r\n   // Extract only the wanted info from the request to api\r\n   function adjustData(transData) {\r\n-    console.log(\"\\n\\n\\nTESTE\");\r\n     console.log(transData);\r\n \r\n     transData.forEach((element) => {\r\n       let obj = {\r\n"
                },
                {
                    "date": 1674127762446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,16 +53,17 @@\n   };\r\n   // Put transaction data on dd/mm/aa format\r\n   function treatDate(date) {\r\n     //Obtain the first 10 caracteres: data\r\n-    if (typeof date === \"string\") {\r\n+    return date;\r\n+    /*  if (typeof date === \"string\") {\r\n       return date\r\n         .slice(5, 10)\r\n         .replaceAll(\"-\", \"/\")\r\n         .split(\"/\")\r\n         .reverse()\r\n         .join(\"/\");\r\n-    }\r\n+    } */\r\n   }\r\n \r\n   const transactionsList = [];\r\n   // Extract only the wanted info from the request to api\r\n"
                },
                {
                    "date": 1674748550841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n   Image,\r\n   SafeAreaView,\r\n } from \"react-native\";\r\n import { ScrollView } from \"react-native-gesture-handler\";\r\n-\r\n+import { useRoute } from '@react-navigation/native'\r\n import { useState, useEffect } from \"react\";\r\n import AuthContext from \"../context/AuthProvider\";\r\n import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n import { FONTS, COLORS, SHADOWS, SIZES } from \"../constants\";\r\n@@ -31,55 +31,34 @@\n       .then((userToken) => setToken(JSON.parse(userToken)))\r\n       .catch((err) => console.log(err));\r\n   }, []);\r\n \r\n-  const getCategories = async () => {\r\n-    // fecth data from serverURL/users/userCategory/:id and print it\r\n-    console.log(`${serverURL}+'/categories/userCategory/'+${token.id}`);\r\n-    const resp = await fetch(\r\n-      `${serverURL}/categories/userCategory/${token.id}`\r\n-    );\r\n-    const data = await resp.json();\r\n-    console.log(data);\r\n-  };\r\n \r\n   //----------------------Resumo de Atividade--------------\r\n   const getActvs = async () => {\r\n     // fecth data from serverURL/users/userCategory/:id and print it\r\n     const resp = await fetch(\r\n       `${serverURL}/purchases/getAllPurchase/${token.id}`\r\n     );\r\n     const transData = await resp.json();\r\n-    setTransactionsData(transData.slice(0, 5));\r\n+    setTransactionsData(transData.slice(0,5))\r\n   };\r\n   // Put transaction data on dd/mm/aa format\r\n   function treatDate(date) {\r\n-    //Obtain the first 10 caracteres: data\r\n-    return date;\r\n-    /*  if (typeof date === \"string\") {\r\n-      return date\r\n-        .slice(5, 10)\r\n-        .replaceAll(\"-\", \"/\")\r\n-        .split(\"/\")\r\n-        .reverse()\r\n-        .join(\"/\");\r\n-    } */\r\n+    date = date.split(\"T\")[0];\r\n+    date = date.split(\"-\").reverse().join(\"/\");\r\n+    date = date.split(\"/\").slice(0,2).join(\"/\")\r\n+   \r\n+    return date\r\n   }\r\n \r\n-  const transactionsList = [];\r\n-  // Extract only the wanted info from the request to api\r\n-  function adjustData(transData) {\r\n-    console.log(transData);\r\n-\r\n-    transData.forEach((element) => {\r\n-      let obj = {\r\n-        date: treatDate(element.date),\r\n-        transaction: element.seller,\r\n-        value: element.value,\r\n-        category: element.idcategory,\r\n-        type: element.type,\r\n-      };\r\n-      transactionsList.push(obj);\r\n+  const transactionsList = []\r\n+  // Extract only the wanted info from the request to api \r\n+  function adjustData( transData) {\r\n+    transData.forEach(element => {\r\n+      //console.log(element)\r\n+      let obj = {idPurchase: element.idPurchase,date: treatDate(element.date), transaction: element.title, value: element.value, category: element.idcategory, type: element.type}\r\n+      transactionsList.push(obj)\r\n     });\r\n   }\r\n   //---------------------- FimResumo de Atividade--------------\r\n \r\n@@ -149,12 +128,12 @@\n     );\r\n     const categoryData = await resp.json();\r\n     //console.log('User fetch categoru data: ' + JSON.stringify(categoryData))\r\n     setCategoryData(categoryData);\r\n-\r\n+    dataCategoryPretty(categoryData);\r\n     const img = await fetch(`${serverURL}/files/avatar/${token.id}`);\r\n     //console.log('Time: ' + new Date().toLocaleTimeString())\r\n-    console.log(\"User fetch img: \" + JSON.stringify(img.url));\r\n+    //console.log(\"User fetch img: \" + JSON.stringify(img.url));\r\n     setPhoto(img.url);\r\n   };\r\n \r\n   useEffect(() => {\r\n@@ -163,32 +142,85 @@\n       getActvs(token);\r\n     }\r\n   }, [token]);\r\n \r\n+\r\n+  const [dataCPretty, setDataCPretty] = useState({});\r\n+\r\n+  // transform the data to the format--> is_essential: {plafond, total_spent,categorieList}\r\n+  function dataCategoryPretty(categoryData) {\r\n+    const data = {};\r\n+    // add all the spent of each is_essential\r\n+    categoryData.forEach((element) => {\r\n+      if (data[element.is_essential]) {\r\n+        data[element.is_essential].total_spent += parseInt(element.total_spent);\r\n+        data[element.is_essential].plafond += parseInt(element.plafond);\r\n+        data[element.is_essential].categorieList.push(element.idcategory);\r\n+      } else {\r\n+        data[element.is_essential] = {\r\n+          spent: parseInt(element.total_spent),\r\n+          plafond: parseInt(element.plafond),\r\n+          categorieList: [element.idcategory],\r\n+        };\r\n+      }\r\n+    });\r\n+    //console.log('\\ndataCategoryPretty: ' + JSON.stringify(data))\r\n+    setDataCPretty(data)\r\n+  }\r\n+\r\n+\r\n+  //dataCategoryPretty(categoryData);\r\n+\r\n+      \r\n   function transformToNoCategoryData(selector, categoryData) {\r\n     const data = {};\r\n-    let spent = 0,\r\n+    // make it wait for the data to be fetched\r\n+    //console.log('\\n\\nreformedData: ' + typeof  )\r\n+    let spent =0,\r\n       total_plafond = 0;\r\n     //le.log('-----------------')\r\n     //console.log('selector: ' + selector)\r\n+    \r\n     categoryData.forEach((element) => {\r\n       if (parseInt(element.is_essential) == selector) {\r\n         total_plafond += parseInt(element.plafond);\r\n         spent += parseInt(element.total_spent);\r\n       }\r\n     });\r\n-\r\n+    console.log('selector:' + selector + '\\n' + 'total_plafond: ' + total_plafond)\r\n     //console.log('total_plafond: ' + total_plafond)\r\n     //console.log('spent: ' + spent)\r\n     if (spent >= total_plafond) {\r\n       // TODO: change this to 1\r\n-      data.data = [0.5];\r\n-    } else data.data = [spent / total_plafond];\r\n+      data.data = [1];\r\n+      //console.log(selector +' :'+ Math.round(spent / total_plafond))\r\n+      // arredonda para inteiro\r\n+      //data.data = [Math.round(spent / total_plafond)];\r\n+    } else data.data = [Math.round(spent / total_plafond)];\r\n \r\n     data.labels = [selector];\r\n     return data;\r\n   }\r\n \r\n+  // every time route.params is true when user add despesa e edit despesa, refresh data\r\n+  const route = useRoute()\r\n+  useEffect(() => {\r\n+    console.log('route.params: ' + JSON.stringify(route.params))\r\n+    // dont do shit if route.params is undefined\r\n+    if (route.params) {\r\n+      // se nao for undefined\r\n+      if (route.params.refresh) {\r\n+        // se for true\r\n+        console.log('Refresh Home Screen')\r\n+        fetchData(token)\r\n+        getActvs(token);\r\n+        //console.log(typeof route.params.refresh)\r\n+        // set route.params.refresh to false\r\n+        route.params.refresh = false\r\n+      }\r\n+    }\r\n+  }, [route.params])\r\n+\r\n   return (\r\n     adjustData(transactionsData),\r\n     (\r\n       <SafeAreaView style={styles.root}>\r\n@@ -231,9 +263,9 @@\n             </View>\r\n             <View style={styles.body}>\r\n               {/* if hascategory==0  make a card to redirect to politicsSuggestionScreen \r\n         ELSE NOTHING*/}\r\n-              {userData.hascategory == 1 ? (\r\n+              {userData.hascategory == 0 ? (\r\n                 <View style={[styles.card1, { backgroundColor: \"#ee821a\" }]}>\r\n                   <View>\r\n                     <Text\r\n                       style={{\r\n@@ -256,22 +288,14 @@\n               ) : (\r\n                 <View></View>\r\n               )}\r\n               <View style={[styles.card1, { backgroundColor: COLORS.white }]}>\r\n-                {/* \r\n-            <View style={{ justifyContent: 'space-between'}}>\r\n-              <Text style={{color: COLORS.white, fontFamily: 'SoraLight', fontSize: SIZES.large}}>Saldo</Text>\r\n-              <Text style={{color: COLORS.white, fontFamily: 'SoraBold', fontSize:22}}>1.200 €</Text>\r\n-              <Text style={{color: COLORS.white, fontFamily: 'SoraLight', fontSize: 22}}>550€</Text>\r\n-          </View>\r\n-          */}\r\n                 {/* Donut Charts with space between */}\r\n                 <View\r\n                   style={{\r\n                     flexDirection: \"row\",\r\n                     justifyContent: \"space-between\",\r\n-                  }}\r\n-                >\r\n+                  }}>\r\n                   <View style={styles.charts}>\r\n                     <ProgressChart\r\n                       data={transformToNoCategoryData(\r\n                         essencial_selector,\r\n@@ -284,8 +308,9 @@\n                       chartConfig={chartConfig(essencial_selector)}\r\n                       hideLegend={true}\r\n                     />\r\n                     <Text style={styles.charts_text}>Essenciais</Text>\r\n+                    {/* <Text style={styles.charts_text}>{JSON.stringify(dataCPretty[0].spent)} €</Text> */}\r\n                   </View>\r\n                   <View style={styles.charts}>\r\n                     <ProgressChart\r\n                       data={transformToNoCategoryData(\r\n@@ -341,11 +366,12 @@\n         */}\r\n           </View>\r\n           <ActivityTable\r\n             data={transactionsList}\r\n-            headerHome={true}\r\n+            headerHome={true} \r\n             navigation={navigation}\r\n           ></ActivityTable>\r\n+          <TouchableOpacity onPress={() => navigation.navigate('OCR')}><Text>OCR</Text></TouchableOpacity>\r\n         </ScrollView>\r\n       </SafeAreaView>\r\n     )\r\n   );\r\n@@ -367,9 +393,8 @@\n     //flex: 1,\r\n     //backgroundColor: COLORS.white,\r\n     //alignItems: \"center\",\r\n     //justifyContent: \"center\",\r\n-\r\n     marginHorizontal: 20,\r\n     marginTop: \"3%\",\r\n   },\r\n   charts: {\r\n@@ -433,5 +458,7 @@\n     right: 0,\r\n   },\r\n });\r\n \r\n+\r\n+\r\n export default HomeScreen;\r\n"
                },
                {
                    "date": 1674748571120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,9 +185,9 @@\n         total_plafond += parseInt(element.plafond);\r\n         spent += parseInt(element.total_spent);\r\n       }\r\n     });\r\n-    console.log('selector:' + selector + '\\n' + 'total_plafond: ' + total_plafond)\r\n+    console.log('selector:' + selector + '\\n' + 'total_plafond: ' + total_plafond + '\\n' + 'spent: ' + spent)\r\n     //console.log('total_plafond: ' + total_plafond)\r\n     //console.log('spent: ' + spent)\r\n     if (spent >= total_plafond) {\r\n       // TODO: change this to 1\r\n"
                },
                {
                    "date": 1674749819338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -196,8 +196,9 @@\n       // arredonda para inteiro\r\n       //data.data = [Math.round(spent / total_plafond)];\r\n     } else data.data = [Math.round(spent / total_plafond)];\r\n \r\n+\r\n     data.labels = [selector];\r\n     return data;\r\n   }\r\n \r\n@@ -307,9 +308,9 @@\n                       radius={32}\r\n                       chartConfig={chartConfig(essencial_selector)}\r\n                       hideLegend={true}\r\n                     />\r\n-                    <Text style={styles.charts_text}>Essenciais</Text>\r\n+                    <Text style={styles.charts_text}>Essenciais, {categoryData.total_spent}</Text>\r\n                     {/* <Text style={styles.charts_text}>{JSON.stringify(dataCPretty[0].spent)} €</Text> */}\r\n                   </View>\r\n                   <View style={styles.charts}>\r\n                     <ProgressChart\r\n"
                },
                {
                    "date": 1674749915894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,8 +185,9 @@\n         total_plafond += parseInt(element.plafond);\r\n         spent += parseInt(element.total_spent);\r\n       }\r\n     });\r\n+    console.log(categoryData)\r\n     console.log('selector:' + selector + '\\n' + 'total_plafond: ' + total_plafond + '\\n' + 'spent: ' + spent)\r\n     //console.log('total_plafond: ' + total_plafond)\r\n     //console.log('spent: ' + spent)\r\n     if (spent >= total_plafond) {\r\n"
                },
                {
                    "date": 1674749992210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,9 +185,9 @@\n         total_plafond += parseInt(element.plafond);\r\n         spent += parseInt(element.total_spent);\r\n       }\r\n     });\r\n-    console.log(categoryData)\r\n+    \r\n     console.log('selector:' + selector + '\\n' + 'total_plafond: ' + total_plafond + '\\n' + 'spent: ' + spent)\r\n     //console.log('total_plafond: ' + total_plafond)\r\n     //console.log('spent: ' + spent)\r\n     if (spent >= total_plafond) {\r\n@@ -199,8 +199,9 @@\n     } else data.data = [Math.round(spent / total_plafond)];\r\n \r\n \r\n     data.labels = [selector];\r\n+    console.log(data)\r\n     return data;\r\n   }\r\n \r\n   // every time route.params is true when user add despesa e edit despesa, refresh data\r\n"
                },
                {
                    "date": 1674751112869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,9 +197,10 @@\n       // arredonda para inteiro\r\n       //data.data = [Math.round(spent / total_plafond)];\r\n     } else data.data = [Math.round(spent / total_plafond)];\r\n \r\n-\r\n+    data.total_spent = spent;\r\n+    data.plafond = total_plafond;\r\n     data.labels = [selector];\r\n     console.log(data)\r\n     return data;\r\n   }\r\n"
                },
                {
                    "date": 1674751154729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,9 +311,9 @@\n                       radius={32}\r\n                       chartConfig={chartConfig(essencial_selector)}\r\n                       hideLegend={true}\r\n                     />\r\n-                    <Text style={styles.charts_text}>Essenciais, {categoryData.total_spent}</Text>\r\n+                    <Text style={styles.charts_text}>Essenciais, {data.total_spent}</Text>\r\n                     {/* <Text style={styles.charts_text}>{JSON.stringify(dataCPretty[0].spent)} €</Text> */}\r\n                   </View>\r\n                   <View style={styles.charts}>\r\n                     <ProgressChart\r\n"
                },
                {
                    "date": 1674751191231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,9 +311,12 @@\n                       radius={32}\r\n                       chartConfig={chartConfig(essencial_selector)}\r\n                       hideLegend={true}\r\n                     />\r\n-                    <Text style={styles.charts_text}>Essenciais, {data.total_spent}</Text>\r\n+                    <Text style={styles.charts_text}>Essenciais, {transformToNoCategoryData(\r\n+                        essencial_selector,\r\n+                        categoryData\r\n+                      )}</Text>\r\n                     {/* <Text style={styles.charts_text}>{JSON.stringify(dataCPretty[0].spent)} €</Text> */}\r\n                   </View>\r\n                   <View style={styles.charts}>\r\n                     <ProgressChart\r\n"
                },
                {
                    "date": 1674751200834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -314,9 +314,9 @@\n                     />\r\n                     <Text style={styles.charts_text}>Essenciais, {transformToNoCategoryData(\r\n                         essencial_selector,\r\n                         categoryData\r\n-                      )}</Text>\r\n+                      ).total_spent}</Text>\r\n                     {/* <Text style={styles.charts_text}>{JSON.stringify(dataCPretty[0].spent)} €</Text> */}\r\n                   </View>\r\n                   <View style={styles.charts}>\r\n                     <ProgressChart\r\n"
                },
                {
                    "date": 1674751209242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -314,9 +314,9 @@\n                     />\r\n                     <Text style={styles.charts_text}>Essenciais, {transformToNoCategoryData(\r\n                         essencial_selector,\r\n                         categoryData\r\n-                      ).total_spent}</Text>\r\n+                      ).plafond}</Text>\r\n                     {/* <Text style={styles.charts_text}>{JSON.stringify(dataCPretty[0].spent)} €</Text> */}\r\n                   </View>\r\n                   <View style={styles.charts}>\r\n                     <ProgressChart\r\n"
                },
                {
                    "date": 1674751263359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,9 +311,9 @@\n                       radius={32}\r\n                       chartConfig={chartConfig(essencial_selector)}\r\n                       hideLegend={true}\r\n                     />\r\n-                    <Text style={styles.charts_text}>Essenciais, {transformToNoCategoryData(\r\n+                    <Text style={styles.charts_text}>Essenciais {transformToNoCategoryData(\r\n                         essencial_selector,\r\n                         categoryData\r\n                       ).plafond}</Text>\r\n                     {/* <Text style={styles.charts_text}>{JSON.stringify(dataCPretty[0].spent)} €</Text> */}\r\n"
                },
                {
                    "date": 1674751291116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,10 +197,9 @@\n       // arredonda para inteiro\r\n       //data.data = [Math.round(spent / total_plafond)];\r\n     } else data.data = [Math.round(spent / total_plafond)];\r\n \r\n-    data.total_spent = spent;\r\n-    data.plafond = total_plafond;\r\n+    data.ratio = Math.round(spent / total_plafond);\r\n     data.labels = [selector];\r\n     console.log(data)\r\n     return data;\r\n   }\r\n@@ -314,9 +313,9 @@\n                     />\r\n                     <Text style={styles.charts_text}>Essenciais {transformToNoCategoryData(\r\n                         essencial_selector,\r\n                         categoryData\r\n-                      ).plafond}</Text>\r\n+                      ).ratio}</Text>\r\n                     {/* <Text style={styles.charts_text}>{JSON.stringify(dataCPretty[0].spent)} €</Text> */}\r\n                   </View>\r\n                   <View style={styles.charts}>\r\n                     <ProgressChart\r\n"
                },
                {
                    "date": 1674751303156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,9 +197,9 @@\n       // arredonda para inteiro\r\n       //data.data = [Math.round(spent / total_plafond)];\r\n     } else data.data = [Math.round(spent / total_plafond)];\r\n \r\n-    data.ratio = Math.round(spent / total_plafond);\r\n+    data.ratio = Math.round(spent * 100 / total_plafond);\r\n     data.labels = [selector];\r\n     console.log(data)\r\n     return data;\r\n   }\r\n"
                },
                {
                    "date": 1674751330451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,9 +197,9 @@\n       // arredonda para inteiro\r\n       //data.data = [Math.round(spent / total_plafond)];\r\n     } else data.data = [Math.round(spent / total_plafond)];\r\n \r\n-    data.ratio = Math.round(spent * 100 / total_plafond);\r\n+    data.ratio = Math.round(spent / total_plafond);\r\n     data.labels = [selector];\r\n     console.log(data)\r\n     return data;\r\n   }\r\n@@ -310,12 +310,9 @@\n                       radius={32}\r\n                       chartConfig={chartConfig(essencial_selector)}\r\n                       hideLegend={true}\r\n                     />\r\n-                    <Text style={styles.charts_text}>Essenciais {transformToNoCategoryData(\r\n-                        essencial_selector,\r\n-                        categoryData\r\n-                      ).ratio}</Text>\r\n+                    <Text style={styles.charts_text}>Essenciais</Text>\r\n                     {/* <Text style={styles.charts_text}>{JSON.stringify(dataCPretty[0].spent)} €</Text> */}\r\n                   </View>\r\n                   <View style={styles.charts}>\r\n                     <ProgressChart\r\n"
                },
                {
                    "date": 1674752056140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -195,11 +195,13 @@\n       data.data = [1];\r\n       //console.log(selector +' :'+ Math.round(spent / total_plafond))\r\n       // arredonda para inteiro\r\n       //data.data = [Math.round(spent / total_plafond)];\r\n-    } else data.data = [Math.round(spent / total_plafond)];\r\n+    } else data.data = [Math.round(spent*100 / total_plafond)];\r\n \r\n-    data.ratio = Math.round(spent / total_plafond);\r\n+    data.percSpent = Math.round(spent*100 / total_plafond);\r\n+    data.total_spent = spent;\r\n+    data.plafond = total_plafond;\r\n     data.labels = [selector];\r\n     console.log(data)\r\n     return data;\r\n   }\r\n"
                },
                {
                    "date": 1674752220960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -328,8 +328,16 @@\n                       radius={32}\r\n                       chartConfig={chartConfig(non_essencial_selector)}\r\n                       hideLegend={true}\r\n                     />\r\n+                      <Text\r\n+    style={{\r\n+      position: 'absolute',\r\n+      alignSelf: 'center',\r\n+      top: '50%',\r\n+      transform: [{translateY: -12}],\r\n+    }}\r\n+  ></Text>\r\n                     <Text style={styles.charts_text}>Não Essenciais</Text>\r\n                   </View>\r\n                   <View style={styles.charts}>\r\n                     <ProgressChart\r\n"
                },
                {
                    "date": 1674752239550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n   Image,\r\n   SafeAreaView,\r\n } from \"react-native\";\r\n import { ScrollView } from \"react-native-gesture-handler\";\r\n-import { useRoute } from '@react-navigation/native'\r\n+import { useRoute } from \"@react-navigation/native\";\r\n import { useState, useEffect } from \"react\";\r\n import AuthContext from \"../context/AuthProvider\";\r\n import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n import { FONTS, COLORS, SHADOWS, SIZES } from \"../constants\";\r\n@@ -31,34 +31,40 @@\n       .then((userToken) => setToken(JSON.parse(userToken)))\r\n       .catch((err) => console.log(err));\r\n   }, []);\r\n \r\n-\r\n   //----------------------Resumo de Atividade--------------\r\n   const getActvs = async () => {\r\n     // fecth data from serverURL/users/userCategory/:id and print it\r\n     const resp = await fetch(\r\n       `${serverURL}/purchases/getAllPurchase/${token.id}`\r\n     );\r\n     const transData = await resp.json();\r\n-    setTransactionsData(transData.slice(0,5))\r\n+    setTransactionsData(transData.slice(0, 5));\r\n   };\r\n   // Put transaction data on dd/mm/aa format\r\n   function treatDate(date) {\r\n     date = date.split(\"T\")[0];\r\n     date = date.split(\"-\").reverse().join(\"/\");\r\n-    date = date.split(\"/\").slice(0,2).join(\"/\")\r\n-   \r\n-    return date\r\n+    date = date.split(\"/\").slice(0, 2).join(\"/\");\r\n+\r\n+    return date;\r\n   }\r\n \r\n-  const transactionsList = []\r\n-  // Extract only the wanted info from the request to api \r\n-  function adjustData( transData) {\r\n-    transData.forEach(element => {\r\n+  const transactionsList = [];\r\n+  // Extract only the wanted info from the request to api\r\n+  function adjustData(transData) {\r\n+    transData.forEach((element) => {\r\n       //console.log(element)\r\n-      let obj = {idPurchase: element.idPurchase,date: treatDate(element.date), transaction: element.title, value: element.value, category: element.idcategory, type: element.type}\r\n-      transactionsList.push(obj)\r\n+      let obj = {\r\n+        idPurchase: element.idPurchase,\r\n+        date: treatDate(element.date),\r\n+        transaction: element.title,\r\n+        value: element.value,\r\n+        category: element.idcategory,\r\n+        type: element.type,\r\n+      };\r\n+      transactionsList.push(obj);\r\n     });\r\n   }\r\n   //---------------------- FimResumo de Atividade--------------\r\n \r\n@@ -142,9 +148,8 @@\n       getActvs(token);\r\n     }\r\n   }, [token]);\r\n \r\n-\r\n   const [dataCPretty, setDataCPretty] = useState({});\r\n \r\n   // transform the data to the format--> is_essential: {plafond, total_spent,categorieList}\r\n   function dataCategoryPretty(categoryData) {\r\n@@ -163,68 +168,75 @@\n         };\r\n       }\r\n     });\r\n     //console.log('\\ndataCategoryPretty: ' + JSON.stringify(data))\r\n-    setDataCPretty(data)\r\n+    setDataCPretty(data);\r\n   }\r\n \r\n-\r\n   //dataCategoryPretty(categoryData);\r\n \r\n-      \r\n   function transformToNoCategoryData(selector, categoryData) {\r\n     const data = {};\r\n     // make it wait for the data to be fetched\r\n     //console.log('\\n\\nreformedData: ' + typeof  )\r\n-    let spent =0,\r\n+    let spent = 0,\r\n       total_plafond = 0;\r\n     //le.log('-----------------')\r\n     //console.log('selector: ' + selector)\r\n-    \r\n+\r\n     categoryData.forEach((element) => {\r\n       if (parseInt(element.is_essential) == selector) {\r\n         total_plafond += parseInt(element.plafond);\r\n         spent += parseInt(element.total_spent);\r\n       }\r\n     });\r\n-    \r\n-    console.log('selector:' + selector + '\\n' + 'total_plafond: ' + total_plafond + '\\n' + 'spent: ' + spent)\r\n+\r\n+    console.log(\r\n+      \"selector:\" +\r\n+        selector +\r\n+        \"\\n\" +\r\n+        \"total_plafond: \" +\r\n+        total_plafond +\r\n+        \"\\n\" +\r\n+        \"spent: \" +\r\n+        spent\r\n+    );\r\n     //console.log('total_plafond: ' + total_plafond)\r\n     //console.log('spent: ' + spent)\r\n     if (spent >= total_plafond) {\r\n       // TODO: change this to 1\r\n       data.data = [1];\r\n       //console.log(selector +' :'+ Math.round(spent / total_plafond))\r\n       // arredonda para inteiro\r\n       //data.data = [Math.round(spent / total_plafond)];\r\n-    } else data.data = [Math.round(spent*100 / total_plafond)];\r\n+    } else data.data = [Math.round((spent * 100) / total_plafond)];\r\n \r\n-    data.percSpent = Math.round(spent*100 / total_plafond);\r\n+    data.percSpent = Math.round((spent * 100) / total_plafond);\r\n     data.total_spent = spent;\r\n     data.plafond = total_plafond;\r\n     data.labels = [selector];\r\n-    console.log(data)\r\n+    console.log(data);\r\n     return data;\r\n   }\r\n \r\n   // every time route.params is true when user add despesa e edit despesa, refresh data\r\n-  const route = useRoute()\r\n+  const route = useRoute();\r\n   useEffect(() => {\r\n-    console.log('route.params: ' + JSON.stringify(route.params))\r\n+    console.log(\"route.params: \" + JSON.stringify(route.params));\r\n     // dont do shit if route.params is undefined\r\n     if (route.params) {\r\n       // se nao for undefined\r\n       if (route.params.refresh) {\r\n         // se for true\r\n-        console.log('Refresh Home Screen')\r\n-        fetchData(token)\r\n+        console.log(\"Refresh Home Screen\");\r\n+        fetchData(token);\r\n         getActvs(token);\r\n         //console.log(typeof route.params.refresh)\r\n         // set route.params.refresh to false\r\n-        route.params.refresh = false\r\n+        route.params.refresh = false;\r\n       }\r\n     }\r\n-  }, [route.params])\r\n+  }, [route.params]);\r\n \r\n   return (\r\n     adjustData(transactionsData),\r\n     (\r\n@@ -298,9 +310,10 @@\n                 <View\r\n                   style={{\r\n                     flexDirection: \"row\",\r\n                     justifyContent: \"space-between\",\r\n-                  }}>\r\n+                  }}\r\n+                >\r\n                   <View style={styles.charts}>\r\n                     <ProgressChart\r\n                       data={transformToNoCategoryData(\r\n                         essencial_selector,\r\n@@ -328,16 +341,16 @@\n                       radius={32}\r\n                       chartConfig={chartConfig(non_essencial_selector)}\r\n                       hideLegend={true}\r\n                     />\r\n-                      <Text\r\n-    style={{\r\n-      position: 'absolute',\r\n-      alignSelf: 'center',\r\n-      top: '50%',\r\n-      transform: [{translateY: -12}],\r\n-    }}\r\n-  ></Text>\r\n+                    <Text\r\n+                      style={{\r\n+                        position: \"absolute\",\r\n+                        alignSelf: \"center\",\r\n+                        top: \"50%\",\r\n+                        transform: [{ translateY: -12 }],\r\n+                      }}\r\n+                    ></Text>\r\n                     <Text style={styles.charts_text}>Não Essenciais</Text>\r\n                   </View>\r\n                   <View style={styles.charts}>\r\n                     <ProgressChart\r\n@@ -379,12 +392,14 @@\n         */}\r\n           </View>\r\n           <ActivityTable\r\n             data={transactionsList}\r\n-            headerHome={true} \r\n+            headerHome={true}\r\n             navigation={navigation}\r\n           ></ActivityTable>\r\n-          <TouchableOpacity onPress={() => navigation.navigate('OCR')}><Text>OCR</Text></TouchableOpacity>\r\n+          <TouchableOpacity onPress={() => navigation.navigate(\"OCR\")}>\r\n+            <Text>OCR</Text>\r\n+          </TouchableOpacity>\r\n         </ScrollView>\r\n       </SafeAreaView>\r\n     )\r\n   );\r\n@@ -471,7 +486,5 @@\n     right: 0,\r\n   },\r\n });\r\n \r\n-\r\n-\r\n export default HomeScreen;\r\n"
                },
                {
                    "date": 1674752251211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -348,9 +348,9 @@\n                         alignSelf: \"center\",\r\n                         top: \"50%\",\r\n                         transform: [{ translateY: -12 }],\r\n                       }}\r\n-                    ></Text>\r\n+                    >{data.percSpent}%</Text>\r\n                     <Text style={styles.charts_text}>Não Essenciais</Text>\r\n                   </View>\r\n                   <View style={styles.charts}>\r\n                     <ProgressChart\r\n"
                },
                {
                    "date": 1674752272913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -354,11 +354,11 @@\n                   </View>\r\n                   <View style={styles.charts}>\r\n                     <ProgressChart\r\n                       data={transformToNoCategoryData(\r\n-                        investment_selector,\r\n+                        non_essencial_selector,\r\n                         categoryData\r\n-                      )}\r\n+                      ).total_spent}\r\n                       width={screenWidth / 4}\r\n                       height={charts_height}\r\n                       strokeWidth={16}\r\n                       radius={32}\r\n"
                },
                {
                    "date": 1674752295735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -348,17 +348,20 @@\n                         alignSelf: \"center\",\r\n                         top: \"50%\",\r\n                         transform: [{ translateY: -12 }],\r\n                       }}\r\n-                    >{data.percSpent}%</Text>\r\n+                    >{transformToNoCategoryData(\r\n+                      investment_selector,\r\n+                      categoryData\r\n+                    ).percSpent}</Text>\r\n                     <Text style={styles.charts_text}>Não Essenciais</Text>\r\n                   </View>\r\n                   <View style={styles.charts}>\r\n                     <ProgressChart\r\n                       data={transformToNoCategoryData(\r\n-                        non_essencial_selector,\r\n+                        investment_selector,\r\n                         categoryData\r\n-                      ).total_spent}\r\n+                      )}\r\n                       width={screenWidth / 4}\r\n                       height={charts_height}\r\n                       strokeWidth={16}\r\n                       radius={32}\r\n"
                },
                {
                    "date": 1674752300935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -346,9 +346,9 @@\n                       style={{\r\n                         position: \"absolute\",\r\n                         alignSelf: \"center\",\r\n                         top: \"50%\",\r\n-                        transform: [{ translateY: -12 }],\r\n+                        transform: [{ translateY: -10 }],\r\n                       }}\r\n                     >{transformToNoCategoryData(\r\n                       investment_selector,\r\n                       categoryData\r\n"
                },
                {
                    "date": 1674752307396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -346,9 +346,9 @@\n                       style={{\r\n                         position: \"absolute\",\r\n                         alignSelf: \"center\",\r\n                         top: \"50%\",\r\n-                        transform: [{ translateY: -10 }],\r\n+                        transform: [{ translateY: -20 }],\r\n                       }}\r\n                     >{transformToNoCategoryData(\r\n                       investment_selector,\r\n                       categoryData\r\n"
                },
                {
                    "date": 1674752312684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -346,9 +346,9 @@\n                       style={{\r\n                         position: \"absolute\",\r\n                         alignSelf: \"center\",\r\n                         top: \"50%\",\r\n-                        transform: [{ translateY: -20 }],\r\n+                        transform: [{ translateY: -80 }],\r\n                       }}\r\n                     >{transformToNoCategoryData(\r\n                       investment_selector,\r\n                       categoryData\r\n"
                },
                {
                    "date": 1674752319765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -346,9 +346,9 @@\n                       style={{\r\n                         position: \"absolute\",\r\n                         alignSelf: \"center\",\r\n                         top: \"50%\",\r\n-                        transform: [{ translateY: -80 }],\r\n+                        transform: [{ translateY: -45 }],\r\n                       }}\r\n                     >{transformToNoCategoryData(\r\n                       investment_selector,\r\n                       categoryData\r\n"
                },
                {
                    "date": 1674752326918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -346,9 +346,9 @@\n                       style={{\r\n                         position: \"absolute\",\r\n                         alignSelf: \"center\",\r\n                         top: \"50%\",\r\n-                        transform: [{ translateY: -45 }],\r\n+                        transform: [{ translateY: -28 }],\r\n                       }}\r\n                     >{transformToNoCategoryData(\r\n                       investment_selector,\r\n                       categoryData\r\n"
                },
                {
                    "date": 1674752340504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -346,9 +346,9 @@\n                       style={{\r\n                         position: \"absolute\",\r\n                         alignSelf: \"center\",\r\n                         top: \"50%\",\r\n-                        transform: [{ translateY: -28 }],\r\n+                        transform: [{ translateY: -27 }],\r\n                       }}\r\n                     >{transformToNoCategoryData(\r\n                       investment_selector,\r\n                       categoryData\r\n@@ -367,8 +367,19 @@\n                       radius={32}\r\n                       chartConfig={chartConfig(investment_selector)}\r\n                       hideLegend={true}\r\n                     />\r\n+                          <Text\r\n+                      style={{\r\n+                        position: \"absolute\",\r\n+                        alignSelf: \"center\",\r\n+                        top: \"50%\",\r\n+                        transform: [{ translateY: -27 }],\r\n+                      }}\r\n+                    >{transformToNoCategoryData(\r\n+                      investment_selector,\r\n+                      categoryData\r\n+                    ).percSpent}</Text>\r\n                     <Text style={styles.charts_text}>Investimentos</Text>\r\n                   </View>\r\n                 </View>\r\n               </View>\r\n"
                },
                {
                    "date": 1674752347099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -325,8 +325,19 @@\n                       radius={32}\r\n                       chartConfig={chartConfig(essencial_selector)}\r\n                       hideLegend={true}\r\n                     />\r\n+                          <Text\r\n+                      style={{\r\n+                        position: \"absolute\",\r\n+                        alignSelf: \"center\",\r\n+                        top: \"50%\",\r\n+                        transform: [{ translateY: -27 }],\r\n+                      }}\r\n+                    >{transformToNoCategoryData(\r\n+                      investment_selector,\r\n+                      categoryData\r\n+                    ).percSpent}</Text>\r\n                     <Text style={styles.charts_text}>Essenciais</Text>\r\n                     {/* <Text style={styles.charts_text}>{JSON.stringify(dataCPretty[0].spent)} €</Text> */}\r\n                   </View>\r\n                   <View style={styles.charts}>\r\n"
                },
                {
                    "date": 1674752437311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -360,9 +360,9 @@\n                         top: \"50%\",\r\n                         transform: [{ translateY: -27 }],\r\n                       }}\r\n                     >{transformToNoCategoryData(\r\n-                      investment_selector,\r\n+                      non_essencial_selector,\r\n                       categoryData\r\n                     ).percSpent}</Text>\r\n                     <Text style={styles.charts_text}>Não Essenciais</Text>\r\n                   </View>\r\n"
                },
                {
                    "date": 1674752462267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -333,9 +333,9 @@\n                         top: \"50%\",\r\n                         transform: [{ translateY: -27 }],\r\n                       }}\r\n                     >{transformToNoCategoryData(\r\n-                      investment_selector,\r\n+                      essencial_selector,\r\n                       categoryData\r\n                     ).percSpent}</Text>\r\n                     <Text style={styles.charts_text}>Essenciais</Text>\r\n                     {/* <Text style={styles.charts_text}>{JSON.stringify(dataCPretty[0].spent)} €</Text> */}\r\n"
                },
                {
                    "date": 1674752467377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -335,9 +335,9 @@\n                       }}\r\n                     >{transformToNoCategoryData(\r\n                       essencial_selector,\r\n                       categoryData\r\n-                    ).percSpent}</Text>\r\n+                    ).percSpent}%</Text>\r\n                     <Text style={styles.charts_text}>Essenciais</Text>\r\n                     {/* <Text style={styles.charts_text}>{JSON.stringify(dataCPretty[0].spent)} €</Text> */}\r\n                   </View>\r\n                   <View style={styles.charts}>\r\n"
                },
                {
                    "date": 1674752482853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -362,9 +362,9 @@\n                       }}\r\n                     >{transformToNoCategoryData(\r\n                       non_essencial_selector,\r\n                       categoryData\r\n-                    ).percSpent}</Text>\r\n+                    ).percSpent}%</Text>\r\n                     <Text style={styles.charts_text}>Não Essenciais</Text>\r\n                   </View>\r\n                   <View style={styles.charts}>\r\n                     <ProgressChart\r\n@@ -388,9 +388,9 @@\n                       }}\r\n                     >{transformToNoCategoryData(\r\n                       investment_selector,\r\n                       categoryData\r\n-                    ).percSpent}</Text>\r\n+                    ).percSpent}%</Text>\r\n                     <Text style={styles.charts_text}>Investimentos</Text>\r\n                   </View>\r\n                 </View>\r\n               </View>\r\n"
                },
                {
                    "date": 1674752521378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -384,8 +384,11 @@\n                         position: \"absolute\",\r\n                         alignSelf: \"center\",\r\n                         top: \"50%\",\r\n                         transform: [{ translateY: -27 }],\r\n+                        fontFamily: FONTS.medium,\r\n+                        fontSize: SIZES.medium,\r\n+                        color: COLORS.wingDarkBlue,\r\n                       }}\r\n                     >{transformToNoCategoryData(\r\n                       investment_selector,\r\n                       categoryData\r\n"
                },
                {
                    "date": 1674752528347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -358,8 +358,11 @@\n                         position: \"absolute\",\r\n                         alignSelf: \"center\",\r\n                         top: \"50%\",\r\n                         transform: [{ translateY: -27 }],\r\n+                        fontFamily: FONTS.medium,\r\n+                        fontSize: SIZES.medium,\r\n+                        color: COLORS.wingDarkBlue,\r\n                       }}\r\n                     >{transformToNoCategoryData(\r\n                       non_essencial_selector,\r\n                       categoryData\r\n"
                },
                {
                    "date": 1674752535752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -331,8 +331,11 @@\n                         position: \"absolute\",\r\n                         alignSelf: \"center\",\r\n                         top: \"50%\",\r\n                         transform: [{ translateY: -27 }],\r\n+                        fontFamily: FONTS.medium,\r\n+                        fontSize: SIZES.medium,\r\n+                        color: COLORS.wingDarkBlue,\r\n                       }}\r\n                     >{transformToNoCategoryData(\r\n                       essencial_selector,\r\n                       categoryData\r\n"
                },
                {
                    "date": 1674752543114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n                         alignSelf: \"center\",\r\n                         top: \"50%\",\r\n                         transform: [{ translateY: -27 }],\r\n                         fontFamily: FONTS.medium,\r\n-                        fontSize: SIZES.medium,\r\n+                        fontSize: SIZES.small,\r\n                         color: COLORS.wingDarkBlue,\r\n                       }}\r\n                     >{transformToNoCategoryData(\r\n                       essencial_selector,\r\n"
                },
                {
                    "date": 1674752562211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -361,9 +361,9 @@\n                         position: \"absolute\",\r\n                         alignSelf: \"center\",\r\n                         top: \"50%\",\r\n                         transform: [{ translateY: -27 }],\r\n-                        fontFamily: FONTS.medium,\r\n+                        fontFamily: FONTS.small,\r\n                         fontSize: SIZES.medium,\r\n                         color: COLORS.wingDarkBlue,\r\n                       }}\r\n                     >{transformToNoCategoryData(\r\n@@ -391,9 +391,9 @@\n                         alignSelf: \"center\",\r\n                         top: \"50%\",\r\n                         transform: [{ translateY: -27 }],\r\n                         fontFamily: FONTS.medium,\r\n-                        fontSize: SIZES.medium,\r\n+                        fontSize: SIZES.small,\r\n                         color: COLORS.wingDarkBlue,\r\n                       }}\r\n                     >{transformToNoCategoryData(\r\n                       investment_selector,\r\n"
                },
                {
                    "date": 1674752569153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -389,9 +389,9 @@\n                       style={{\r\n                         position: \"absolute\",\r\n                         alignSelf: \"center\",\r\n                         top: \"50%\",\r\n-                        transform: [{ translateY: -27 }],\r\n+                        transform: [{ translateY: -26 }],\r\n                         fontFamily: FONTS.medium,\r\n                         fontSize: SIZES.small,\r\n                         color: COLORS.wingDarkBlue,\r\n                       }}\r\n"
                },
                {
                    "date": 1674752575598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -330,9 +330,9 @@\n                       style={{\r\n                         position: \"absolute\",\r\n                         alignSelf: \"center\",\r\n                         top: \"50%\",\r\n-                        transform: [{ translateY: -27 }],\r\n+                        transform: [{ translateY: -26 }],\r\n                         fontFamily: FONTS.medium,\r\n                         fontSize: SIZES.small,\r\n                         color: COLORS.wingDarkBlue,\r\n                       }}\r\n@@ -360,9 +360,9 @@\n                       style={{\r\n                         position: \"absolute\",\r\n                         alignSelf: \"center\",\r\n                         top: \"50%\",\r\n-                        transform: [{ translateY: -27 }],\r\n+                        transform: [{ translateY: -26 }],\r\n                         fontFamily: FONTS.small,\r\n                         fontSize: SIZES.medium,\r\n                         color: COLORS.wingDarkBlue,\r\n                       }}\r\n"
                },
                {
                    "date": 1674752681031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -209,9 +209,9 @@\n       // arredonda para inteiro\r\n       //data.data = [Math.round(spent / total_plafond)];\r\n     } else data.data = [Math.round((spent * 100) / total_plafond)];\r\n \r\n-    data.percSpent = Math.round((spent * 100) / total_plafond);\r\n+    data.percSpent = (spent >= total_plafond) ? Math.round((spent * 100) / total_plafond) : 100;\r\n     data.total_spent = spent;\r\n     data.plafond = total_plafond;\r\n     data.labels = [selector];\r\n     console.log(data);\r\n"
                },
                {
                    "date": 1674752705013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -209,9 +209,9 @@\n       // arredonda para inteiro\r\n       //data.data = [Math.round(spent / total_plafond)];\r\n     } else data.data = [Math.round((spent * 100) / total_plafond)];\r\n \r\n-    data.percSpent = (spent >= total_plafond) ? Math.round((spent * 100) / total_plafond) : 100;\r\n+    data.percSpent = (spent >= total_plafond) ? 100 : Math.round((spent * 100) / total_plafond);\r\n     data.total_spent = spent;\r\n     data.plafond = total_plafond;\r\n     data.labels = [selector];\r\n     console.log(data);\r\n"
                },
                {
                    "date": 1674752727239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n       data.data = [1];\r\n       //console.log(selector +' :'+ Math.round(spent / total_plafond))\r\n       // arredonda para inteiro\r\n       //data.data = [Math.round(spent / total_plafond)];\r\n-    } else data.data = [Math.round((spent * 100) / total_plafond)];\r\n+    } else data.data = [Math.round((spent * 100) / total_plafond)]/100;\r\n \r\n     data.percSpent = (spent >= total_plafond) ? 100 : Math.round((spent * 100) / total_plafond);\r\n     data.total_spent = spent;\r\n     data.plafond = total_plafond;\r\n"
                },
                {
                    "date": 1674752733492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n       data.data = [1];\r\n       //console.log(selector +' :'+ Math.round(spent / total_plafond))\r\n       // arredonda para inteiro\r\n       //data.data = [Math.round(spent / total_plafond)];\r\n-    } else data.data = [Math.round((spent * 100) / total_plafond)]/100;\r\n+    } else data.data = [Math.round((spent * 100) / total_plafond)/100];\r\n \r\n     data.percSpent = (spent >= total_plafond) ? 100 : Math.round((spent * 100) / total_plafond);\r\n     data.total_spent = spent;\r\n     data.plafond = total_plafond;\r\n"
                }
            ],
            "date": 1674127451404,
            "name": "Commit-0",
            "content": "import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Button,\r\n  Dimensions,\r\n  Image,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport AuthContext from \"../context/AuthProvider\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { FONTS, COLORS, SHADOWS, SIZES } from \"../constants\";\r\nimport { serverURL } from \"../config/hosts\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { ProgressChart } from \"react-native-chart-kit\";\r\nimport _ from \"lodash\"; //Fazer Clone dos objetos\r\nimport ActivityTable from \"../components/ActivityTable\";\r\n\r\nfunction HomeScreen({ navigation }) {\r\n  const [token, setToken] = useState(\"\");\r\n  const [transactionsData, setTransactionsData] = useState([]);\r\n\r\n  const { signOut } = React.useContext(AuthContext);\r\n  useEffect(() => {\r\n    AsyncStorage.getItem(\"userToken\")\r\n      .then((userToken) => setToken(JSON.parse(userToken)))\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const getCategories = async () => {\r\n    // fecth data from serverURL/users/userCategory/:id and print it\r\n    console.log(`${serverURL}+'/categories/userCategory/'+${token.id}`);\r\n    const resp = await fetch(\r\n      `${serverURL}/categories/userCategory/${token.id}`\r\n    );\r\n    const data = await resp.json();\r\n    console.log(data);\r\n  };\r\n\r\n  //----------------------Resumo de Atividade--------------\r\n  const getActvs = async () => {\r\n    // fecth data from serverURL/users/userCategory/:id and print it\r\n    const resp = await fetch(\r\n      `${serverURL}/purchases/getAllPurchase/${token.id}`\r\n    );\r\n    const transData = await resp.json();\r\n    setTransactionsData(transData.slice(0, 5));\r\n  };\r\n  // Put transaction data on dd/mm/aa format\r\n  function treatDate(date) {\r\n    //Obtain the first 10 caracteres: data\r\n    if (typeof date === \"string\") {\r\n      return date\r\n        .slice(5, 10)\r\n        .replaceAll(\"-\", \"/\")\r\n        .split(\"/\")\r\n        .reverse()\r\n        .join(\"/\");\r\n    }\r\n  }\r\n\r\n  const transactionsList = [];\r\n  // Extract only the wanted info from the request to api\r\n  function adjustData(transData) {\r\n    if (transData.length === 0) return;\r\n    transData.forEach((element) => {\r\n      let obj = {\r\n        date: treatDate(element.date),\r\n        transaction: element.seller,\r\n        value: element.value,\r\n        category: element.idcategory,\r\n        type: element.type,\r\n      };\r\n      transactionsList.push(obj);\r\n    });\r\n  }\r\n  //---------------------- FimResumo de Atividade--------------\r\n\r\n  // Donut Charts\r\n  // ----------------------------------------------------------------------------------------\r\n\r\n  const screenWidth = Dimensions.get(\"window\").width - 40;\r\n  const [categoryData, setCategoryData] = useState([]);\r\n  const noCategoryChartDataExample = {\r\n    labels: [\"No Category\"], // optional\r\n    data: [0.4],\r\n  };\r\n\r\n  const essencial_selector = 1;\r\n  const non_essencial_selector = 2;\r\n  const investment_selector = 3;\r\n  const charts_height = 100;\r\n\r\n  // funtion to get the color of the chart\r\n  const getColor = (selector) => {\r\n    switch (selector) {\r\n      case 1:\r\n        return (opacity = 1) => `rgba(255, 0, 0, ${opacity})`;\r\n      case 2:\r\n        return (opacity = 1) => `rgba(255, 190, 11, ${opacity})`;\r\n      case 3:\r\n        return (opacity = 1) => `rgba(58, 134, 255, ${opacity})`;\r\n      default:\r\n        return (opacity = 1) => `rgba(255, 25, 255, ${opacity})`;\r\n    }\r\n  };\r\n  // function chartConfig receives a selector and returns a chartConfig\r\n  const chartConfig = (selector) => {\r\n    return {\r\n      backgroundGradientFrom: COLORS.white,\r\n      //backgroundGradientFromOpacity: 0,\r\n      backgroundGradientTo: COLORS.white,\r\n      //backgroundGradientToOpacity: 0,\r\n      //backgroundGradientToOpacity: 1,\r\n      decimalPlaces: 2, // optional, defaults to 2dp\r\n      color: getColor(selector),\r\n      //color: (opacity = 1) => `rgba(${a}, ${b}, ${c}, ${opacity})`,\r\n      style: {\r\n        borderRadius: 16,\r\n      },\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    AsyncStorage.getItem(\"userToken\")\r\n      .then((userToken) => setToken(JSON.parse(userToken)))\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  // USER DATA\r\n  const [userData, setUserData] = useState([]);\r\n  const [photo, setPhoto] = useState(\"\");\r\n\r\n  const fetchData = async (token) => {\r\n    const resp1 = await fetch(`${serverURL}/users/userProfile/${token.id}`);\r\n    const userData = await resp1.json();\r\n    //console.log('User fetch data: ' + JSON.stringify(userData))\r\n    setUserData(userData);\r\n\r\n    const resp = await fetch(\r\n      `${serverURL}/categories/userCategory/${token.id}`\r\n    );\r\n    const categoryData = await resp.json();\r\n    //console.log('User fetch categoru data: ' + JSON.stringify(categoryData))\r\n    setCategoryData(categoryData);\r\n\r\n    const img = await fetch(`${serverURL}/files/avatar/${token.id}`);\r\n    //console.log('Time: ' + new Date().toLocaleTimeString())\r\n    console.log(\"User fetch img: \" + JSON.stringify(img.url));\r\n    setPhoto(img.url);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token.id) {\r\n      fetchData(token);\r\n      getActvs(token);\r\n    }\r\n  }, [token]);\r\n\r\n  function transformToNoCategoryData(selector, categoryData) {\r\n    const data = {};\r\n    let spent = 0,\r\n      total_plafond = 0;\r\n    //le.log('-----------------')\r\n    //console.log('selector: ' + selector)\r\n    categoryData.forEach((element) => {\r\n      if (parseInt(element.is_essential) == selector) {\r\n        total_plafond += parseInt(element.plafond);\r\n        spent += parseInt(element.total_spent);\r\n      }\r\n    });\r\n\r\n    //console.log('total_plafond: ' + total_plafond)\r\n    //console.log('spent: ' + spent)\r\n    if (spent >= total_plafond) {\r\n      // TODO: change this to 1\r\n      data.data = [0.5];\r\n    } else data.data = [spent / total_plafond];\r\n\r\n    data.labels = [selector];\r\n    return data;\r\n  }\r\n\r\n  return (\r\n    adjustData(transactionsData),\r\n    (\r\n      <SafeAreaView style={styles.root}>\r\n        <ScrollView>\r\n          <View style={styles.container}>\r\n            <View style={styles.header}>\r\n              <View style={styles.profileImage}>\r\n                {photo ? (\r\n                  (console.log(\"I have photo!! \" + JSON.stringify(photo)),\r\n                  (\r\n                    <Image\r\n                      source={{ uri: photo }}\r\n                      style={styles.profileImage}\r\n                    />\r\n                  ))\r\n                ) : userData.gender == 0 ? ( // man\r\n                  <Image\r\n                    source={require(\"../../assets/images/male-avatar.png\")}\r\n                    style={styles.image}\r\n                    resizeMode=\"center\"\r\n                  ></Image>\r\n                ) : userData.gender == 1 ? (\r\n                  <Image\r\n                    source={require(\"../../assets/images/female-avatar.png\")}\r\n                    style={styles.image}\r\n                    resizeMode=\"center\"\r\n                  ></Image>\r\n                ) : (\r\n                  <Image\r\n                    source={require(\"../../assets/images/other-avatar.png\")}\r\n                    style={styles.image}\r\n                    resizeMode=\"center\"\r\n                  ></Image>\r\n                )}\r\n              </View>\r\n              <View style={{ left: 90, top: 10 }}>\r\n                <Text style={styles.title}>Welcome Back,</Text>\r\n                <Text style={styles.name}>{userData.name}</Text>\r\n              </View>\r\n            </View>\r\n            <View style={styles.body}>\r\n              {/* if hascategory==0  make a card to redirect to politicsSuggestionScreen \r\n        ELSE NOTHING*/}\r\n              {userData.hascategory == 1 ? (\r\n                <View style={[styles.card1, { backgroundColor: \"#ee821a\" }]}>\r\n                  <View>\r\n                    <Text\r\n                      style={{\r\n                        color: COLORS.white,\r\n                        fontFamily: \"SoraBold\",\r\n                        fontSize: SIZES.medium,\r\n                      }}\r\n                    >\r\n                      Definir Política de consumo\r\n                    </Text>\r\n                    <AntDesign\r\n                      name=\"rightcircleo\"\r\n                      size={24}\r\n                      color=\"white\"\r\n                      style={styles.iconStyle}\r\n                      onPress={() => navigation.navigate(\"PoliticsSuggestion\")}\r\n                    />\r\n                  </View>\r\n                </View>\r\n              ) : (\r\n                <View></View>\r\n              )}\r\n              <View style={[styles.card1, { backgroundColor: COLORS.white }]}>\r\n                {/* \r\n            <View style={{ justifyContent: 'space-between'}}>\r\n              <Text style={{color: COLORS.white, fontFamily: 'SoraLight', fontSize: SIZES.large}}>Saldo</Text>\r\n              <Text style={{color: COLORS.white, fontFamily: 'SoraBold', fontSize:22}}>1.200 €</Text>\r\n              <Text style={{color: COLORS.white, fontFamily: 'SoraLight', fontSize: 22}}>550€</Text>\r\n          </View>\r\n          */}\r\n                {/* Donut Charts with space between */}\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <View style={styles.charts}>\r\n                    <ProgressChart\r\n                      data={transformToNoCategoryData(\r\n                        essencial_selector,\r\n                        categoryData\r\n                      )}\r\n                      width={screenWidth / 4}\r\n                      height={charts_height}\r\n                      strokeWidth={16}\r\n                      radius={32}\r\n                      chartConfig={chartConfig(essencial_selector)}\r\n                      hideLegend={true}\r\n                    />\r\n                    <Text style={styles.charts_text}>Essenciais</Text>\r\n                  </View>\r\n                  <View style={styles.charts}>\r\n                    <ProgressChart\r\n                      data={transformToNoCategoryData(\r\n                        non_essencial_selector,\r\n                        categoryData\r\n                      )}\r\n                      width={screenWidth / 4}\r\n                      height={charts_height}\r\n                      strokeWidth={16}\r\n                      radius={32}\r\n                      chartConfig={chartConfig(non_essencial_selector)}\r\n                      hideLegend={true}\r\n                    />\r\n                    <Text style={styles.charts_text}>Não Essenciais</Text>\r\n                  </View>\r\n                  <View style={styles.charts}>\r\n                    <ProgressChart\r\n                      data={transformToNoCategoryData(\r\n                        investment_selector,\r\n                        categoryData\r\n                      )}\r\n                      width={screenWidth / 4}\r\n                      height={charts_height}\r\n                      strokeWidth={16}\r\n                      radius={32}\r\n                      chartConfig={chartConfig(investment_selector)}\r\n                      hideLegend={true}\r\n                    />\r\n                    <Text style={styles.charts_text}>Investimentos</Text>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </View>\r\n            {/*\r\n        <View>\r\n          <Button title=\"Log out\" onPress={() => signOut()} />\r\n        </View>\r\n        <View>\r\n          <Button title=\"Perfil\" onPress={() => navigation.navigate('Profile')} />\r\n        </View>\r\n        <View>\r\n          <Button\r\n            title=\"Definir Políticas de Consumo\"\r\n            onPress={() => navigation.navigate('PoliticsSuggestion')}\r\n          />\r\n        </View>\r\n        <View>\r\n          <Button\r\n            title=\"Resumo de Atividade\"\r\n            onPress={() => navigation.navigate('ActivitySummary')}\r\n          />\r\n        </View>\r\n        */}\r\n          </View>\r\n          <ActivityTable\r\n            data={transactionsList}\r\n            headerHome={true}\r\n            navigation={navigation}\r\n          ></ActivityTable>\r\n        </ScrollView>\r\n      </SafeAreaView>\r\n    )\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.eggshell,\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    // alignItems: 'center',\r\n    justifyContent: \"space-between\",\r\n    marginTop: \"3%\",\r\n  },\r\n\r\n  container: {\r\n    //flex: 1,\r\n    //backgroundColor: COLORS.white,\r\n    //alignItems: \"center\",\r\n    //justifyContent: \"center\",\r\n\r\n    marginHorizontal: 20,\r\n    marginTop: \"3%\",\r\n  },\r\n  charts: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  text: {\r\n    padding: 5,\r\n    fontFamily: FONTS.medium,\r\n    fontSize: SIZES.medium,\r\n    color: COLORS.wingDarkBlue,\r\n  },\r\n  charts_text: {\r\n    padding: 5,\r\n    fontFamily: \"SoraMedium\",\r\n    fontSize: SIZES.font,\r\n    color: COLORS.wingDarkBlue,\r\n  },\r\n  title: {\r\n    fontFamily: \"SoraLight\",\r\n    fontSize: SIZES.medium,\r\n    color: COLORS.wingDarkBlue,\r\n    marginBottom: 5,\r\n    // align text to the right\r\n    textAlign: \"left\",\r\n  },\r\n  name: {\r\n    fontFamily: \"SoraMedium\",\r\n    fontSize: SIZES.large,\r\n    color: COLORS.wingDarkBlue,\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    width: undefined,\r\n    height: undefined,\r\n  },\r\n  profileImage: {\r\n    // put image in the upper left corner\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: 70,\r\n    height: 70,\r\n    borderRadius: 100,\r\n    overflow: \"hidden\",\r\n  },\r\n  card1: {\r\n    // outline in wing blue, rounded corners\r\n    borderRadius: 10,\r\n    //margin: 10,\r\n    padding: 20,\r\n    marginBottom: 20,\r\n  },\r\n  body: {\r\n    marginTop: 40,\r\n    // cards in column with space between\r\n  },\r\n  iconStyle: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0,\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n"
        }
    ]
}