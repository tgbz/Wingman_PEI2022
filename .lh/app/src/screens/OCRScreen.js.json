{
    "sourceFile": "app/src/screens/OCRScreen.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1674931935609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1674931946200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -256,12 +256,13 @@\n   bt: {\r\n     paddingVertical: 10,\r\n   },\r\n   textInicial: {\r\n-    \r\n+    padding: 20,\r\n     fontFamily: FONTS.medium,\r\n     fontSize: SIZES.medium,\r\n-    justifyContent: 'center',\r\n+    \r\n+    alignItems: 'center',\r\n     color: COLORS.wingDarkBlue\r\n     \r\n   },\r\n   text: {\r\n"
                },
                {
                    "date": 1674931952923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -261,8 +261,9 @@\n     fontFamily: FONTS.medium,\r\n     fontSize: SIZES.medium,\r\n     \r\n     alignItems: 'center',\r\n+    alignContent: 'center',\r\n     color: COLORS.wingDarkBlue\r\n     \r\n   },\r\n   text: {\r\n"
                },
                {
                    "date": 1674932007687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,9 @@\n       <View style={[styles.viewButton, {width: width*0.70}]}>{camara}{galeria}</View>\r\n       }\r\n \r\n     \r\n-        <TouchableOpacity onPress={()  => sendPost()} style={[styles.button, { width: width*0.70, backgroundColor: disabled? '#E8E8E8': COLORS.orange}]} disabled={disabled}>\r\n+        <TouchableOpacity onPress={()  => sendPost()} style={[styles.button, { width: width*0.70, backgroundColor: disabled? '#E8E8E8': COLORS.orange, alignContent: 'center'}]} disabled={disabled}>\r\n             <Text style={[styles.text , {color: disabled? '#C0C0C0': COLORS.white}]}>Continuar   <Entypo name=\"arrow-right\" size={25} style={styles.item} color={COLORS.wingDarkBlue}/>\r\n             </Text>\r\n         </TouchableOpacity>\r\n     \r\n@@ -261,9 +261,8 @@\n     fontFamily: FONTS.medium,\r\n     fontSize: SIZES.medium,\r\n     \r\n     alignItems: 'center',\r\n-    alignContent: 'center',\r\n     color: COLORS.wingDarkBlue\r\n     \r\n   },\r\n   text: {\r\n"
                },
                {
                    "date": 1674932012919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,9 @@\n       <View style={[styles.viewButton, {width: width*0.70}]}>{camara}{galeria}</View>\r\n       }\r\n \r\n     \r\n-        <TouchableOpacity onPress={()  => sendPost()} style={[styles.button, { width: width*0.70, backgroundColor: disabled? '#E8E8E8': COLORS.orange, alignContent: 'center'}]} disabled={disabled}>\r\n+        <TouchableOpacity onPress={()  => sendPost()} style={[styles.button, { width: width*0.70, backgroundColor: disabled? '#E8E8E8': COLORS.orange, alignItems: 'center'}]} disabled={disabled}>\r\n             <Text style={[styles.text , {color: disabled? '#C0C0C0': COLORS.white}]}>Continuar   <Entypo name=\"arrow-right\" size={25} style={styles.item} color={COLORS.wingDarkBlue}/>\r\n             </Text>\r\n         </TouchableOpacity>\r\n     \r\n"
                },
                {
                    "date": 1674932022481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,9 @@\n       <View style={[styles.viewButton, {width: width*0.70}]}>{camara}{galeria}</View>\r\n       }\r\n \r\n     \r\n-        <TouchableOpacity onPress={()  => sendPost()} style={[styles.button, { width: width*0.70, backgroundColor: disabled? '#E8E8E8': COLORS.orange, alignItems: 'center'}]} disabled={disabled}>\r\n+        <TouchableOpacity onPress={()  => sendPost()} style={[styles.button, { width: width*0.70, backgroundColor: disabled? '#E8E8E8': COLORS.orange, justifyContent:'center'}]} disabled={disabled}>\r\n             <Text style={[styles.text , {color: disabled? '#C0C0C0': COLORS.white}]}>Continuar   <Entypo name=\"arrow-right\" size={25} style={styles.item} color={COLORS.wingDarkBlue}/>\r\n             </Text>\r\n         </TouchableOpacity>\r\n     \r\n"
                },
                {
                    "date": 1674932041704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,9 @@\n       <View style={[styles.viewButton, {width: width*0.70}]}>{camara}{galeria}</View>\r\n       }\r\n \r\n     \r\n-        <TouchableOpacity onPress={()  => sendPost()} style={[styles.button, { width: width*0.70, backgroundColor: disabled? '#E8E8E8': COLORS.orange, justifyContent:'center'}]} disabled={disabled}>\r\n+        <TouchableOpacity onPress={()  => sendPost()} style={[styles.button, { width: width*0.70, backgroundColor: disabled? '#E8E8E8': COLORS.orange}]} disabled={disabled}>\r\n             <Text style={[styles.text , {color: disabled? '#C0C0C0': COLORS.white}]}>Continuar   <Entypo name=\"arrow-right\" size={25} style={styles.item} color={COLORS.wingDarkBlue}/>\r\n             </Text>\r\n         </TouchableOpacity>\r\n     \r\n"
                },
                {
                    "date": 1674932073205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -276,9 +276,9 @@\n     justifyContent:\"center\",\r\n     borderRadius: 22   // it will be height/2\r\n     },\r\n   item: {\r\n-    alignSelf: \"center\",\r\n+    \r\n     color:'white',\r\n     },\r\n   imageContainer: {\r\n     padding: 20\r\n"
                }
            ],
            "date": 1674931935609,
            "name": "Commit-0",
            "content": "import { useWindowDimensions,\r\n  StyleSheet, Image, Alert, Text, TouchableOpacity, View,  ActivityIndicator,ImageBackground,\r\n} from 'react-native'\r\nimport React from 'react'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\nimport { COLORS, FONTS, SHADOWS, SIZES, CATEGORIES } from '../constants'\r\nimport { useState, useEffect } from 'react'\r\nimport * as ImagePicker from 'expo-image-picker'\r\nimport { SafeAreaView } from 'react-native'\r\nimport { color, ScreenWidth } from 'react-native-elements/dist/helpers'\r\nimport { Ionicons,  MaterialCommunityIcons,Entypo, MaterialIcons, FontAwesome, FontAwesome5, SimpleLineIcons, Feather } from '@expo/vector-icons'\r\nimport OCRExpense from '../components/OCRExpense'\r\nimport { ScrollView } from 'react-native-gesture-handler'\r\n\r\n\r\n\r\n\r\nexport default function OCRScreen({ navigation }) {\r\nconst { height, width } = useWindowDimensions()\r\n  const [products, setProducts] = useState([])\r\n  const [token, setToken] = useState('')\r\n  const [hasPermission, setPermission] = React.useState(false)\r\n  const [photo, setPhoto] = React.useState(null)\r\n  const [pickedImage, setPickedImage] = React.useState([])\r\n  const [pickId, setPickId] = useState(0) \r\n  const [disabled, setDisabled] = useState(true)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loaded, setLoaded] = useState(false)\r\n  const [generalInfo, setGeneralInfo] = useState(null)\r\n\r\n  useEffect(() => {\r\n    AsyncStorage.getItem('userToken')\r\n      .then((userToken) => {setToken(JSON.parse(userToken))})\r\n      .catch((err) => console.log(err))\r\n  }, [])\r\n\r\n  const askPermission = async() =>{\r\n    const granted = await ImagePicker.requestMediaLibraryPermissionsAsync()\r\n    setPermission(granted)\r\n  }\r\n\r\nconst pickFromGallery = async () =>{\r\n  if (hasPermission){\r\n    let data = await ImagePicker.launchImageLibraryAsync({\r\n      \r\n      mediaTypes:ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true, \r\n      aspect: [3,5] ,\r\n      quality: 1})\r\n    if (!data.cancelled) {\r\n      setPhoto(data.uri)\r\n      setPickedImage(pickedImage.concat(data))\r\n      setDisabled(false)\r\n      setMoreOptions(false)\r\n\r\n    }\r\n  }else{\r\n    askPermission();\r\n  }\r\n}\r\n\r\nconst pickFromCamera = async () =>{\r\n  if (hasPermission){\r\n    let data = await ImagePicker.launchCameraAsync({\r\n      mediaTypes:ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true, aspect: [3,4] ,\r\n      quality: 0.7})\r\n    if (!data.cancelled) {\r\n      setPhoto(data.uri)\r\n      data.name = \"Cam\".concat(String(pickId))\r\n      data.fileName = \"Cam\".concat(String(pickId))\r\n      setPickId(pickId+1)\r\n      setPickedImage(pickedImage.concat(data))\r\n      setDisabled(false)\r\n      setMoreOptions(false)\r\n    }\r\n  }else{\r\n    Alert.alert(\"Permita o acesso Ã  galeria!\")\r\n  }\r\n}\r\n\r\n\r\n\r\nconst createFormData = () => {\r\n  //console.log('Create form data: ' + JSON.stringify(pickedImage) + ' ' + JSON.stringify(user))\r\n  const data = new FormData()\r\n  //for each image, do this \r\n  pickedImage.forEach(element => {\r\n        element.path = Platform.OS === 'ios' ? element.uri.replace('file://', '') : element.uri\r\n        element.name = element.fileName\r\n        data.append(element.fileName, element);\r\n})\r\n  return data\r\n}\r\n\r\n//send Post request with all imagens inside \r\nconst sendPost = async () => {\r\n  setLoading(true)\r\n  //console.log('handleUploadPhoto ' + JSON.stringify(pickedImage))\r\n  const resp = await fetch(`http://94.60.175.136:8000/ocr/upload`, {\r\n    method: 'POST',\r\n    body: createFormData(),\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  })\r\n  const transData = await resp.json()\r\n  //console.log(transData)\r\n  let productsResult = transformData(transData)\r\n  setLoading(false)\r\n  setLoaded(true)\r\n  setPickedImage([])\r\n  navigation.navigate('EditExpense', {originOCR: true, products: productsResult[0], genInfo: productsResult[1]})\r\n\r\n}\r\n\r\nconst transformData = (transData) => {      \r\n    var purchase = JSON.parse(transData);\r\n    let products = []\r\n    Object.keys(purchase.items).forEach((key, index) => {\r\n      products.push({\r\n        idcategory: 22,\r\n        value:purchase.items[key],\r\n        quantity: 1,\r\n        description: key         \r\n      })\r\n      });\r\n    let gen = {\r\n      date: purchase.date,\r\n      market: purchase.market,\r\n      total : purchase.total\r\n    }\r\n    // Retorno isto assim pq se usar o setVar(), como Ã© assÃ­ncrono, geralmente chega vazio Ã  pag de Edit expense\r\n    //  e assim tenho a certeza que nÃ£o \r\n    return [products, gen]\r\n}\r\n\r\nconst deleteImage = (fileName) => {\r\nsomeArray2 = pickedImage.filter( el => el.fileName !== fileName );\r\nsetPickedImage(someArray2)\r\n\r\n\r\n}\r\nconst camara =  <View style={styles.bt}>\r\n                <TouchableOpacity onPress={()  => pickFromCamera()} style={[styles.roundshape, {backgroundColor:  COLORS.wingblue}]}>\r\n                <FontAwesome5 name=\"camera\" size={25} style={styles.item} />\r\n                </TouchableOpacity>\r\n                <Text style={{fontFamily:FONTS.light}}>CÃ¢mara</Text>\r\n                </View>\r\nconst galeria = <View style={styles.bt}>\r\n              <TouchableOpacity  onPress={()  => pickFromGallery()} style={[styles.roundshape, {backgroundColor:  COLORS.wingblue}]}>\r\n                    <Entypo name=\"images\" size={25} style={styles.item} />\r\n              </TouchableOpacity>\r\n              <Text style={{fontFamily:FONTS.light}}>Galeria</Text>\r\n              </View>\r\nconst [moreOptions, setMoreOptions] = useState(false)\r\nconst  maisImg = <View style={styles.bt}>\r\n              <TouchableOpacity  onPress={()  => setMoreOptions(true)} style={[styles.roundshape, {backgroundColor:  COLORS.wingblue}]}>\r\n                    <MaterialCommunityIcons name=\"file-image-plus-outline\" size={25} style={styles.item} />\r\n              </TouchableOpacity>\r\n              </View>\r\n\r\n\r\n  return ( askPermission(), \r\n \r\n    <SafeAreaView style={styles.root}>\r\n       <ScrollView style={ {backgroundColor: COLORS.white} }>\r\n           {!loaded && <Text style={styles.textInicial}>Carrega a fotografia da tua fatura:</Text>}\r\n\r\n    {pickedImage.length === 0 &&\r\n    <View style={{\r\n        backgroundColor: COLORS.eggshell,\r\n        width: width*0.7,\r\n        height: height*0.45,\r\n        borderColor: COLORS.wingblue,\r\n        borderWidth: 3,\r\n        justifyContent: 'center',\r\n        borderStyle: 'dashed',\r\n        alignSelf: 'center',  \r\n        alignItems: 'center',\r\n        marginVertical: 20,   \r\n      }}>\r\n        <View style={{ flexDirection:\"row\", flexWrap:'wrap', justifyContent:'space-around', width: width*0.60}}>{camara}{galeria}</View>\r\n    </View>\r\n  }\r\n  {pickedImage.length > 0 && pickedImage.map(element => {\r\n    return <View  key={element.fileName} style={{\r\n        backgroundColor: COLORS.eggshell,\r\n        width: (element.width > width*0.7?width*0.7:element.width)+5,\r\n        height: (element.height > height*0.4?height*0.4:element.height)+5,\r\n        borderColor: COLORS.wingblue,\r\n        borderWidth: 3,\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',  \r\n        alignItems: 'center',\r\n        marginVertical: 10,   \r\n      }}>\r\n          <ImageBackground source={{ uri: element.uri}}\r\n                style={[styles.image, { width: (element.width > width*0.7?width*0.7:element.width),\r\n          height: (element.height > height*0.4?height*0.4:element.height)}]}>\r\n            <TouchableOpacity onPress={()=> (deleteImage(element.fileName), console.log(\"Delete Image\", element.fileName))} style={{justifyContent:'flex-end', alignContent:'flex-end', alignItems:'flex-end', alignSelf:'flex-end'}}>\r\n              <FontAwesome name=\"remove\" size={30} style={[styles.item,{ color:COLORS.orange}]} />\r\n            </TouchableOpacity>\r\n          </ImageBackground>\r\n    </View>})\r\n  }\r\n    <View style={[{\r\n        alignContent: 'center',\r\n        alignItems: 'center',\r\n        alignSelf: 'center',\r\n        marginVertical: 20,\r\n      }]}>\r\n\r\n      {pickedImage.length > 0  && !moreOptions &&\r\n      <View style={[styles.viewButton, {width: width*0.70}]}>{maisImg}</View>\r\n      }\r\n      {pickedImage.length > 0  && moreOptions &&\r\n      <View style={[styles.viewButton, {width: width*0.70}]}>{camara}{galeria}</View>\r\n      }\r\n\r\n    \r\n        <TouchableOpacity onPress={()  => sendPost()} style={[styles.button, { width: width*0.70, backgroundColor: disabled? '#E8E8E8': COLORS.orange}]} disabled={disabled}>\r\n            <Text style={[styles.text , {color: disabled? '#C0C0C0': COLORS.white}]}>Continuar   <Entypo name=\"arrow-right\" size={25} style={styles.item} color={COLORS.wingDarkBlue}/>\r\n            </Text>\r\n        </TouchableOpacity>\r\n    \r\n    \r\n    </View>\r\n  \r\n  </ScrollView>\r\n  {loading && \r\n    <View style={styles.loading}>\r\n               <ActivityIndicator size=\"large\" color={COLORS.orange}/></View>}\r\n  </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    backgroundColor: COLORS.white,\r\n    padding: 50,\r\n    flex: 1\r\n\r\n  },\r\n  button:{\r\n    backgroundColor:COLORS.wingblue,\r\n    justifyContent:'center',\r\n    height: 45,\r\n    borderRadius:15,\r\n    marginBottom: 10,\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    alignSelf: 'center'\r\n  },\r\n  bt: {\r\n    paddingVertical: 10,\r\n  },\r\n  textInicial: {\r\n    \r\n    fontFamily: FONTS.medium,\r\n    fontSize: SIZES.medium,\r\n    justifyContent: 'center',\r\n    color: COLORS.wingDarkBlue\r\n    \r\n  },\r\n  text: {\r\n    fontFamily: FONTS.medium,\r\n    fontSize: SIZES.medium,\r\n    justifyContent: 'center'\r\n  },\r\n  roundshape:  {\r\n    height: 50, //any of height\r\n    width: 50, //any of width\r\n    justifyContent:\"center\",\r\n    borderRadius: 22   // it will be height/2\r\n    },\r\n  item: {\r\n    alignSelf: \"center\",\r\n    color:'white',\r\n    },\r\n  imageContainer: {\r\n    padding: 20\r\n    },\r\n  image: {\r\n    resizeMode: 'cover'\r\n    },\r\n  viewButton : { \r\n    flexDirection:\"row\", \r\n    flexWrap:'wrap', \r\n    justifyContent:'space-around',\r\n    backgroundColor: COLORS.eggshell,\r\n    borderColor: COLORS.wingblue,\r\n    borderWidth: 3,\r\n    borderStyle: 'dashed',\r\n    marginVertical: 10,   \r\n    borderRadius:5\r\n  } ,\r\n  loading: {\r\n    position: 'absolute',\r\n opacity:0.5,\r\n    top:0,\r\n    bottom:0, \r\n    left:0,\r\n    right:0,\r\n    backgroundColor: 'black',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  }\r\n})\r\n"
        }
    ]
}