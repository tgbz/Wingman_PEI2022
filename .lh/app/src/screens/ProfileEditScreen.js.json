{
    "sourceFile": "app/src/screens/ProfileEditScreen.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1674932899146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1674932926197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,10 +34,10 @@\n   const [data, setData] = useState([])\r\n   const fetchData = async (token) => {\r\n     console.log(serverURL + '/users/userProfile/' + token.id)\r\n     const resp = await fetch(`${serverURL}/users/userProfile/${token.id}`)\r\n+    const data = await resp.json()\r\n     console.log(data)\r\n-    const data = await resp.json()\r\n     setData(data)\r\n     setSelected(data.gender)\r\n     setBirthdate(data.birthdate.substring(0, 10))\r\n     setName(data.name)\r\n"
                }
            ],
            "date": 1674932899146,
            "name": "Commit-0",
            "content": "import { View, Text, Image, TouchableOpacity, useWindowDimensions } from 'react-native'\r\nimport React from 'react'\r\nimport AuthContext from '../context/AuthProvider'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\nimport { COLORS, SHADOWS, SIZES } from '../constants'\r\nimport { useState, useEffect } from 'react'\r\nimport { StyleSheet } from 'react-native'\r\nimport { ScrollView } from 'react-native-gesture-handler'\r\nimport { SafeAreaView } from 'react-native'\r\nimport { serverURL } from '../config/hosts'\r\nimport { Ionicons, MaterialCommunityIcons } from '@expo/vector-icons'\r\nimport { CustomBackButton, CustomButton, CustomInput, CustomTextButton } from '../components'\r\nimport { SelectList } from 'react-native-dropdown-select-list'\r\n\r\nexport default function ProfileEditScreen({ navigation }) {\r\n  const { height } = useWindowDimensions()\r\n  const [token, setToken] = useState('')\r\n\r\n  const [name, setName] = useState('')\r\n  const [birthdate, setBirthdate] = useState('')\r\n  const data_gender = [\r\n    { key: '0', value: 'Masculino' },\r\n    { key: '1', value: 'Feminino' },\r\n    { key: '2', value: 'Outro' },\r\n  ]\r\n  const [selected, setSelected] = React.useState('2')\r\n\r\n  useEffect(() => {\r\n    AsyncStorage.getItem('userToken')\r\n      .then((userToken) => setToken(JSON.parse(userToken)))\r\n      .catch((err) => console.log(err))\r\n  }, [])\r\n\r\n  const [data, setData] = useState([])\r\n  const fetchData = async (token) => {\r\n    console.log(serverURL + '/users/userProfile/' + token.id)\r\n    const resp = await fetch(`${serverURL}/users/userProfile/${token.id}`)\r\n    console.log(data)\r\n    const data = await resp.json()\r\n    setData(data)\r\n    setSelected(data.gender)\r\n    setBirthdate(data.birthdate.substring(0, 10))\r\n    setName(data.name)\r\n    console.log(\"User fetch data: \"+JSON.stringify(data))\r\n  }\r\n  // request data from server\r\n  useEffect(() => {\r\n    console.log('Request data ' + token.id)\r\n    if (token.id) {\r\n      fetchData(token)\r\n    }\r\n  }, [token])\r\n\r\n\r\n\r\n\r\n  // handleFormSubmission that sends the information to the server to update the user\r\n  // get user data and send it to the server updating the variables that were changed\r\n  // if error occurs, it will show an alert\r\n  // if success, it will show an alert and redirect to the profile screen\r\n  const handleFormSubmission = async () => {\r\n    // get user data object that is already in the state\r\n    //const userData = data\r\n    // do an object with the new data\r\n    //\r\n    const newData = {\r\n      name: name,\r\n      gender: selected,\r\n      birthdate: birthdate,\r\n    }\r\n    // merge the two objects\r\n    //const updatedData = { ...userData, ...newData }\r\n    //console.log(updatedData)\r\n    const resp = await fetch(`${serverURL}/users/updateProfile/${token.id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(newData),\r\n    }).then((resp) => {\r\n      if (resp.status === 200) {\r\n        alert('Dados atualizados com sucesso!')\r\n        navigation.navigate('Profile',{refresh: true})\r\n      } else {\r\n        alert('Erro ao atualizar dados!')\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    console.log(\"--------------\\nToken data: \"+ JSON.stringify(token) + \"\\n--------------\"),\r\n    (\r\n      <SafeAreaView style={styles.root}>\r\n        {/* Header \r\n        <View style={styles.navigationBar}>\r\n          <CustomBackButton onPress={() => navigation.goBack()} />\r\n          <Text style={styles.pageTitle}>Editar Perfil</Text>\r\n        </View>\r\n        */}\r\n        \r\n        <View style={styles.infoContainer}>\r\n          {/* Name input */}\r\n          <Text style={styles.textTag}>Nome</Text>\r\n          <CustomInput placeholder={`${data.name}`} value={name} setValue={setName} widthScale={0.8}/>\r\n\r\n          {/* Gender input */}\r\n          {console.log('Gender selection: ' + selected)}\r\n          <Text style={styles.textTag}>Género</Text>\r\n          <SelectList\r\n            setSelected={(val) => {\r\n              val === 'Feminino'\r\n                ? setSelected('1')\r\n                : val === 'Masculino'\r\n                ? setSelected('0')\r\n                : setSelected('2')\r\n            }}\r\n            data={data_gender}\r\n            save=\"value\"\r\n            search={false}\r\n            //defaultOption={{key: data.gender, value: data_gender.find(x => x.key == data.gender).value}}\r\n            fontFamily=\"SoraLight\"\r\n            boxStyles={styles.selectList}\r\n            inputStyles={[styles.text, { color: 'black' }]}\r\n            dropdownStyles={styles.dropdownStyles}\r\n          />\r\n\r\n          {/* Birthdate input */}\r\n          <Text style={styles.textTag}>Data de Nascimento</Text>\r\n          <CustomInput\r\n            placeholder={'aaaa-mm-dd'}\r\n            value={birthdate}\r\n            setValue={setBirthdate}\r\n            iconNameEntry=\"date-range\"\r\n            widthScale={0.8}\r\n          />\r\n        </View>\r\n\r\n        <View style={styles.containerBTN}>\r\n          {/* \r\n            <TouchableOpacity onPress={() => navigation.navigate(\"ProfileEdit\")} style={[styles.button,{height: height*0.05}]}>\r\n                <Text style={styles.buttonText}>Guardar</Text>\r\n            </TouchableOpacity>\r\n          */}\r\n          <CustomButton\r\n            onPress={() => handleFormSubmission()}\r\n            text=\"Guardar Alterações\"\r\n            type = \"TERTIARY\"\r\n            widthScale={0.8}\r\n          ></CustomButton>\r\n        </View>\r\n      </SafeAreaView>\r\n    )\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.white,\r\n  },\r\n  navigationBar: {\r\n    // in case i wanto to add a button in the right side\r\n    flexDirection: 'row',\r\n    marginTop: 10,\r\n    marginHorizontal: 10,\r\n    marginBottom: 10,\r\n  },\r\n  pageTitle: {\r\n    fontFamily: 'SoraMedium',\r\n    fontSize: SIZES.medium,\r\n    color: COLORS.wingDarkBlue,\r\n    // center the text\r\n    alignSelf: 'center',\r\n    // center the text horizontally\r\n    flex: 1,\r\n    textAlign: 'center',\r\n    right: 20,\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    width: undefined,\r\n    height: undefined,\r\n  },\r\n  profileImage: {\r\n    width: 200,\r\n    height: 200,\r\n    borderRadius: 100,\r\n    overflow: 'hidden',\r\n  },\r\n  addAvatar: {\r\n    backgroundColor: COLORS.white,\r\n    position: 'absolute',\r\n    bottom: 5,\r\n    right: 1,\r\n    height: 50,\r\n    width: 50,\r\n    borderRadius: 30,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  nameContainer: {\r\n    alignSelf: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 16,\r\n  },\r\n  infoContainer: {\r\n    marginHorizontal: 40,\r\n    marginTop: 40,\r\n    marginBottom: 40,\r\n  },\r\n  textTag: {\r\n    fontFamily: 'SoraBold',\r\n    fontSize: SIZES.medium,\r\n    color: COLORS.wingDarkBlue,\r\n  },\r\n  textInfo: {\r\n    //marginLeft: 30,\r\n    fontFamily: 'SoraLight',\r\n    fontSize: SIZES.medium,\r\n  },\r\n  button: {\r\n    backgroundColor: COLORS.wingDarkBlue,\r\n    borderRadius: SIZES.small,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginBottom: SIZES.base,\r\n    width: '40%',\r\n    height: '80%',\r\n  },\r\n  containerBTN: {\r\n    // Put the buttons at the bottom of the screen\r\n    //position: 'absolute',\r\n    //alignItems: \"center\",\r\n    //justifyContent: \"center\",\r\n    //bottom: \"10%\",\r\n    //width: \"100%\",\r\n    //  on the vertical center\r\n    flex: 1,\r\n    //justifyContent: 'center',\r\n    alignItems: 'flex-start',\r\n    marginHorizontal: 40,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: SIZES.small,\r\n    fontFamily: 'SoraBold',\r\n  },\r\n  selectList: {\r\n    backgroundColor: 'white',\r\n    borderColor: COLORS.wingblue,\r\n    borderRadius: 5,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 15,\r\n    marginVertical: 12,\r\n    borderWidth: 1,\r\n  },\r\n  dropdownStyles: {\r\n    maxHeight: 120,\r\n    backgroundColor: 'white',\r\n    borderColor: COLORS.wingblue,\r\n  },\r\n  text: {\r\n    color: COLORS.wingDarkBlue,\r\n    fontFamily: 'SoraLight',\r\n    fontSize: 15,\r\n    alignSelf: 'flex-start',\r\n  },\r\n})\r\n"
        }
    ]
}