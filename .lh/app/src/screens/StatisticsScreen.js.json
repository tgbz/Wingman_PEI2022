{
    "sourceFile": "app/src/screens/StatisticsScreen.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1674933871985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1674933895035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -289,8 +289,9 @@\n const styles = StyleSheet.create({\r\n   root: {\r\n     flex: 1,\r\n     backgroundColor: COLORS.white,\r\n+    paddingTop: platform === 'ios' ? 0 : StatusBar.currentHeight,\r\n   },\r\n   container: {\r\n     flex: 1,\r\n     alignItems: 'center',\r\n"
                },
                {
                    "date": 1674933941532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -289,9 +289,9 @@\n const styles = StyleSheet.create({\r\n   root: {\r\n     flex: 1,\r\n     backgroundColor: COLORS.white,\r\n-    paddingTop: platform === 'ios' ? 0 : StatusBar.currentHeight,\r\n+    paddingTop: Platform.OS === 'ios' ? 0 : StatusBar.currentHeight,\r\n   },\r\n   container: {\r\n     flex: 1,\r\n     alignItems: 'center',\r\n"
                },
                {
                    "date": 1674933968444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -205,16 +205,16 @@\n               <Text style={styles.percentageBalance}>Gastaste {Math.round((expense*100)/income)}% do que ganhaste</Text>\r\n             </View>\r\n             {/* Two containers in line */}\r\n             <View style={styles.incomeExpenseContainer}>\r\n-              <View style={[styles.IEContainer,{shadowColor: 'green'}]}>\r\n+              <View style={[styles.IEContainer]}>\r\n                 <MaterialCommunityIcons name=\"arrow-up\" style={styles.incomeIcon} />\r\n                 <View style={styles.IETextContainer}>\r\n                   <Text style={styles.IEText}>Receitas</Text>\r\n                   <Text style={styles.IENumber}>{income} €</Text>\r\n                 </View>\r\n               </View>\r\n-              <View style={[styles.IEContainer,{shadowColor: 'red'}]}>\r\n+              <View style={[styles.IEContainer]}>\r\n                 <MaterialCommunityIcons name=\"arrow-down\" style={styles.expenseIcon} />\r\n                 <View style={styles.IETextContainer}>\r\n                   <Text style={styles.IEText}>Despesas</Text>\r\n                   <Text style={styles.IENumber}>{expense} €</Text>\r\n"
                },
                {
                    "date": 1674933991745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -434,9 +434,8 @@\n     width: '48%',\r\n     padding: 10,\r\n     borderRadius: 5,\r\n     backgroundColor: COLORS.eggshell,\r\n-    elevation: 5,\r\n     //shadowOffset: { width: 5, height: 5 },\r\n     //shadowOpacity: 0.3, \r\n     //shadowRadius: 5,\r\n     marginRight: 5,\r\n"
                },
                {
                    "date": 1674934770411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,12 @@\n   }, [])\r\n \r\n   //  function to get 12 months before the current month\r\n   const getMonths = () => {\r\n+    const monthNames = [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\",\r\n+    \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"\r\n+  ];\r\n+  \r\n     let date = new Date()\r\n     date.setMonth(date.getMonth() - 12)\r\n     for (let i = 0; i < 12; i++) {\r\n       date.setMonth(date.getMonth() + 1)\r\n"
                },
                {
                    "date": 1674934790702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,14 +45,14 @@\n     AsyncStorage.getItem('userToken')\r\n       .then((userToken) => setToken(JSON.parse(userToken)))\r\n       .catch((err) => console.log(err))\r\n   }, [])\r\n-\r\n+  const monthNames = [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\",\r\n+  \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"\r\n+];\r\n   //  function to get 12 months before the current month\r\n   const getMonths = () => {\r\n-    const monthNames = [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\",\r\n-    \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"\r\n-  ];\r\n+   \r\n   \r\n     let date = new Date()\r\n     date.setMonth(date.getMonth() - 12)\r\n     for (let i = 0; i < 12; i++) {\r\n"
                },
                {
                    "date": 1674935114347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,19 +45,16 @@\n     AsyncStorage.getItem('userToken')\r\n       .then((userToken) => setToken(JSON.parse(userToken)))\r\n       .catch((err) => console.log(err))\r\n   }, [])\r\n-  const monthNames = [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\",\r\n-  \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"\r\n-];\r\n+\r\n   //  function to get 12 months before the current month\r\n   const getMonths = () => {\r\n-   \r\n-  \r\n     let date = new Date()\r\n     date.setMonth(date.getMonth() - 12)\r\n     for (let i = 0; i < 12; i++) {\r\n       date.setMonth(date.getMonth() + 1)\r\n+      console.log(date)\r\n       months.push({\r\n         month: date.toLocaleString('pt-br', { month: 'long' }),\r\n         year: date.getFullYear(),\r\n       })\r\n"
                },
                {
                    "date": 1674935139364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,8 +53,9 @@\n     date.setMonth(date.getMonth() - 12)\r\n     for (let i = 0; i < 12; i++) {\r\n       date.setMonth(date.getMonth() + 1)\r\n       console.log(date)\r\n+      console.log(date.toLocaleString('pt-br', { month: 'long' }))\r\n       months.push({\r\n         month: date.toLocaleString('pt-br', { month: 'long' }),\r\n         year: date.getFullYear(),\r\n       })\r\n"
                },
                {
                    "date": 1674935163281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n     let date = new Date()\r\n     date.setMonth(date.getMonth() - 12)\r\n     for (let i = 0; i < 12; i++) {\r\n       date.setMonth(date.getMonth() + 1)\r\n-      console.log(date)\r\n+      console.log(date.getMonth())\r\n       console.log(date.toLocaleString('pt-br', { month: 'long' }))\r\n       months.push({\r\n         month: date.toLocaleString('pt-br', { month: 'long' }),\r\n         year: date.getFullYear(),\r\n"
                },
                {
                    "date": 1674935291997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,14 +48,17 @@\n   }, [])\r\n \r\n   //  function to get 12 months before the current month\r\n   const getMonths = () => {\r\n+    const monthNames = [\"janeiro\", \"fevereiro\", \"março\", \"abril\", \"maio\", \"junho\",\r\n+    \"julho\", \"agosto\", \"setembro\", \"outubro\", \"novembro\", \"dezembro\"\r\n+  ];\r\n     let date = new Date()\r\n     date.setMonth(date.getMonth() - 12)\r\n     for (let i = 0; i < 12; i++) {\r\n       date.setMonth(date.getMonth() + 1)\r\n       console.log(date.getMonth())\r\n-      console.log(date.toLocaleString('pt-br', { month: 'long' }))\r\n+      console.log(monthNames[date.getMonth()])\r\n       months.push({\r\n         month: date.toLocaleString('pt-br', { month: 'long' }),\r\n         year: date.getFullYear(),\r\n       })\r\n"
                },
                {
                    "date": 1674935303385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n       date.setMonth(date.getMonth() + 1)\r\n       console.log(date.getMonth())\r\n       console.log(monthNames[date.getMonth()])\r\n       months.push({\r\n-        month: date.toLocaleString('pt-br', { month: 'long' }),\r\n+        month: monthNames[date.getMonth()],\r\n         year: date.getFullYear(),\r\n       })\r\n     }\r\n   }\r\n"
                },
                {
                    "date": 1674935310919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,10 +55,8 @@\n     let date = new Date()\r\n     date.setMonth(date.getMonth() - 12)\r\n     for (let i = 0; i < 12; i++) {\r\n       date.setMonth(date.getMonth() + 1)\r\n-      console.log(date.getMonth())\r\n-      console.log(monthNames[date.getMonth()])\r\n       months.push({\r\n         month: monthNames[date.getMonth()],\r\n         year: date.getFullYear(),\r\n       })\r\n"
                }
            ],
            "date": 1674933871985,
            "name": "Commit-0",
            "content": "import React from 'react'\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Button,\r\n  Dimensions,\r\n  Image,\r\n  Platform,\r\n  StatusBar,\r\n  useWindowDimensions,\r\n  FlatList,\r\n} from 'react-native'\r\nimport { SafeAreaView } from 'react-navigation'\r\nimport { ScrollView } from 'react-native-gesture-handler'\r\nimport { useRoute } from '@react-navigation/native'\r\nimport { useState, useEffect } from 'react'\r\nimport AuthContext from '../context/AuthProvider'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\nimport { FONTS, COLORS, SHADOWS, SIZES } from '../constants'\r\nimport { serverURL } from '../config/hosts'\r\nimport { MaterialCommunityIcons, Ionicons } from '@expo/vector-icons'\r\nimport { ProgressChart } from 'react-native-chart-kit'\r\nimport { CATEGORIES, CATEGORIESCOLORS } from '../constants'\r\nimport { BarChart } from 'react-native-chart-kit'\r\nimport _ from 'lodash' //Fazer Clone dos objetos\r\nimport { set } from 'react-native-reanimated'\r\n\r\nfunction StatisticsScreen({ navigation }) {\r\n  const { width } = useWindowDimensions()\r\n  const [token, setToken] = useState('')\r\n  const months = []\r\n  const [selectedMonth, setSelectedMonth] = useState(11)\r\n    // Set the height of each item in the list\r\n    const ITEM_HEIGHT = 100;\r\n\r\n\r\n  const getItemLayout = (data, index) => (\r\n\r\n    { length: ITEM_HEIGHT, offset: ITEM_HEIGHT * index, index }\r\n  );\r\n\r\n  useEffect(() => {\r\n    AsyncStorage.getItem('userToken')\r\n      .then((userToken) => setToken(JSON.parse(userToken)))\r\n      .catch((err) => console.log(err))\r\n  }, [])\r\n\r\n  //  function to get 12 months before the current month\r\n  const getMonths = () => {\r\n    let date = new Date()\r\n    date.setMonth(date.getMonth() - 12)\r\n    for (let i = 0; i < 12; i++) {\r\n      date.setMonth(date.getMonth() + 1)\r\n      months.push({\r\n        month: date.toLocaleString('pt-br', { month: 'long' }),\r\n        year: date.getFullYear(),\r\n      })\r\n    }\r\n  }\r\n\r\n  const navigateToPrevious = () => {\r\n    if (selectedMonth > 0) {\r\n      setSelectedMonth(selectedMonth - 1)\r\n      //flatListRef.current.scrollToIndex({ animated: true, index: selectedMonth - 1 })\r\n    }\r\n  }\r\n\r\n  const navigateToNext = () => {\r\n    if (selectedMonth < months.length - 1) {\r\n      setSelectedMonth(selectedMonth + 1)\r\n      //flatListRef.current.scrollToIndex({ animated: true, index: selectedMonth + 1 })\r\n    }\r\n  }\r\n\r\n  const flatListRef = React.createRef()\r\n\r\n  // fecth data from the server\r\n  // router.get(\"/userCategory/:id/:date\"\r\n  const [dataCategories, setDataCategories] = useState([])\r\n  const [income, setIncome] = useState(0)\r\n  const [expense, setExpense] = useState(0)\r\n  const fecthData = async (token, date) => {\r\n    //console.log('Date to fetch: ', date)\r\n    const response = await fetch(`${serverURL}/categories/userCategory/` + token.id + `/` + date, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    const data = await response.json()\r\n    //console.log('Data: ', data[0])\r\n    setDataCategories(data)\r\n\r\n    // fetch data for the balance info \r\n    // router.get('/getBalance/:id/:date'\r\n    console.log('Date to fetch: ', `${serverURL}/purchases/getBalance/` + token.id + `/` + date)\r\n    const responseBalance = await fetch(`${serverURL}/purchases/getBalance/` + token.id + `/` + date, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    })\r\n    const dataBalance = await responseBalance.json()\r\n    console.log('Data Balance: ', dataBalance[0])\r\n    console.log('Income: ', dataBalance[0].income)\r\n    console.log('Expense: ', dataBalance[0].despesa)\r\n    setIncome(Math.round(dataBalance[0].income))\r\n    setExpense(Math.round(dataBalance[0].despesa))\r\n  }\r\n  const monthsLong = {\r\n    janeiro: '01',\r\n    febreiro: '02',\r\n    março: '03',\r\n    abril: '04',\r\n    maio: '05',\r\n    junho: '06',\r\n    julho: '07',\r\n    agosto: '08',\r\n    setembro: '09',\r\n    outubro: '10',\r\n    novembro: '11',\r\n    dezembro: '12',\r\n  }\r\n  // fetch the data for the correct month when the month is changed\r\n  useEffect(() => {\r\n    // got the month and year from the months array\r\n    const month = months[selectedMonth].month\r\n    const year = months[selectedMonth].year\r\n    // MONTH NAME TO NUMBER\r\n    const monthNumber = monthsLong[month]\r\n\r\n    // format  2023-01-01\r\n    const date = year + '-' + monthNumber + '-' + '01'\r\n    flatListRef.current.scrollToIndex({ animated: true, index: selectedMonth });\r\n    fecthData(token, date)\r\n  }, [selectedMonth])\r\n\r\n  useEffect(() => {\r\n    if (token.id) {\r\n      const today = new Date()\r\n      // format  2023-01-01\r\n      const date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate()\r\n      flatListRef.current.scrollToIndex({ animated: true, index: selectedMonth });\r\n      fecthData(token, date)\r\n    }\r\n  }, [token])\r\n\r\n  // screen that on top has a scrool horizontal to select th month\r\n  // and on the bottom has a bar chart with the incomes vs expenses data of the month selected\r\n  // and a donut chart for  each categorie with the plafond vs spent data of the month selected\r\n  return (\r\n    getMonths(),\r\n    //console.log(months),\r\n    (\r\n      <SafeAreaView style={styles.root} forceInset={{ horizontal: 'never' }}>\r\n        <ScrollView>\r\n          {/*Container with border and rounded corners */}\r\n          <View style={styles.container}>\r\n            <View style={styles.listContainer}>\r\n              <TouchableOpacity onPress={() => navigateToPrevious()}>\r\n                <MaterialCommunityIcons name=\"chevron-left\" style={styles.arrow} />\r\n              </TouchableOpacity>\r\n              <FlatList\r\n                ref={flatListRef}\r\n                getItemLayout={getItemLayout}\r\n                data={months}\r\n                keyExtractor={(item, index) => index.toString()}\r\n                renderItem={({ item, index }) => (\r\n                  <TouchableOpacity\r\n                    onPress={() => setSelectedMonth(index)}\r\n                    style={[styles.listItem, index === selectedMonth ? styles.selected : null]}\r\n                  >\r\n                    <Text\r\n                      style={[\r\n                        styles.monthText,\r\n                        index === selectedMonth ? { color: COLORS.white } : null,\r\n                      ]}\r\n                    >\r\n                      {item.month}\r\n                    </Text>\r\n                    <Text\r\n                      style={[\r\n                        styles.yearText,\r\n                        index === selectedMonth ? { color: COLORS.white } : null,\r\n                      ]}\r\n                    >\r\n                      {item.year}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n                horizontal={true}\r\n                showsHorizontalScrollIndicator={false}\r\n              />\r\n              <TouchableOpacity onPress={() => navigateToNext()}>\r\n                <MaterialCommunityIcons name=\"chevron-right\" style={styles.arrow} />\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n\r\n          <View style={styles.containerC}>\r\n            <View style={styles.balanceContainer}>\r\n              <Text style={styles.balanceText}>{income-expense} €</Text>\r\n              <Text style={styles.percentageBalance}>Gastaste {Math.round((expense*100)/income)}% do que ganhaste</Text>\r\n            </View>\r\n            {/* Two containers in line */}\r\n            <View style={styles.incomeExpenseContainer}>\r\n              <View style={[styles.IEContainer,{shadowColor: 'green'}]}>\r\n                <MaterialCommunityIcons name=\"arrow-up\" style={styles.incomeIcon} />\r\n                <View style={styles.IETextContainer}>\r\n                  <Text style={styles.IEText}>Receitas</Text>\r\n                  <Text style={styles.IENumber}>{income} €</Text>\r\n                </View>\r\n              </View>\r\n              <View style={[styles.IEContainer,{shadowColor: 'red'}]}>\r\n                <MaterialCommunityIcons name=\"arrow-down\" style={styles.expenseIcon} />\r\n                <View style={styles.IETextContainer}>\r\n                  <Text style={styles.IEText}>Despesas</Text>\r\n                  <Text style={styles.IENumber}>{expense} €</Text>\r\n                </View>\r\n              </View>\r\n            </View>\r\n\r\n            {/*Title FlatList \r\n            <View style={styles.titleContainer}>\r\n              <Text style={styles.title}>Despesas por Categoria</Text>\r\n            </View>\r\n            */}\r\n\r\n            <FlatList\r\n              //data={dataCategories}\r\n              // order the data by the total spent\r\n              data={dataCategories.sort((a, b) => b.total_spent - a.total_spent)}\r\n              keyExtractor={(item, index) => index.toString()}\r\n              renderItem={({ item }) => (\r\n                <View style={styles.categoryContainer}>\r\n                  <View style={styles.categorySpentContainer}>\r\n                    <View\r\n                      style={[\r\n                        styles.categorySpentBar,\r\n                        {\r\n                          backgroundColor: CATEGORIESCOLORS[item.idcategory],\r\n                          width: `${(item.total_spent / item.plafond) * 100}%`,\r\n                          maxWidth: width - 20,\r\n                        },\r\n                      ]}\r\n                    />\r\n                  </View>\r\n                  <View style={styles.categoryIconContainer}>\r\n                    {CATEGORIES[item.idcategory].icon}\r\n                  </View>\r\n                  <View style={styles.categoryTextContainer}>\r\n                    <Text style={styles.categoryName}>{CATEGORIES[item.idcategory].name}</Text>\r\n                    <Text style={styles.categoryPercentage}>\r\n                      {((item.total_spent / item.plafond) * 100).toFixed(0)}%\r\n                    </Text>\r\n                  </View>\r\n                  {/*At the end of the row show spent and planfond */}\r\n                  <View style={{ alignItems: 'flex-end', paddingRight: 20 }}>\r\n                    {/*If the spent is bigger than the plafond show the plafond in red */}\r\n                    {item.total_spent > item.plafond && (\r\n                      <>\r\n                        <Text\r\n                          style={{\r\n                            fontSize: 14,\r\n                            fontFamily: 'SoraBold',\r\n                            color: COLORS.wingDarkBlue,\r\n                          }}\r\n                        >\r\n                          {Number(item.total_spent).toFixed(0)} €\r\n                        </Text>\r\n                        <Text style={{ fontSize: 13, color: COLORS.wingDarkBlue, opacity: 0.8 }}>\r\n                          {Number(item.plafond).toFixed(0)} €\r\n                        </Text>\r\n                      </>\r\n                    )}\r\n                  </View>\r\n                </View>\r\n              )}\r\n            />\r\n          </View>\r\n        </ScrollView>\r\n      </SafeAreaView>\r\n    )\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.white,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  listContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  listItem: {\r\n    width: 100,\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    //margin: 5,\r\n    borderRadius: 15,\r\n  },\r\n  monthText: {\r\n    fontSize: 15,\r\n    fontWeight: 'bold',\r\n  },\r\n  yearText: {\r\n    fontSize: 13,\r\n  },\r\n  selected: {\r\n    backgroundColor: COLORS.wingDarkBlue,\r\n    // text color white\r\n    color: COLORS.white,\r\n    borderRadius: 15,\r\n  },\r\n  notSelected: {\r\n    backgroundColor: 'transparent',\r\n    color: COLORS.wingDarkBlue,\r\n  },\r\n  arrow: {\r\n    fontSize: 30,\r\n    color: COLORS.wingDarkBlue,\r\n  },\r\n\r\n  containerC: {\r\n    flex: 1,\r\n    //alignItems: 'center',\r\n    // tirar este padding e ajustar a width right to full screen\r\n    padding: 10,\r\n//paddingTop: 10,\r\n    justifyContent: 'center',\r\n    paddingBottom: 100,\r\n  },\r\n  categoryContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingVertical: 8,\r\n    paddingLeft: 16,\r\n    marginBottom: 8,\r\n    borderRadius: 8,\r\n    backgroundColor: 'white',\r\n  },\r\n  categoryIconContainer: {\r\n    width: 32,\r\n    height: 32,\r\n    marginRight: 8,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  categoryTextContainer: {\r\n    flex: 1,\r\n    //alignItems: 'flex-start',\r\n  },\r\n  categoryName: {\r\n    fontSize: SIZES.font,\r\n    fontFamily: 'SoraBold',\r\n    color: COLORS.wingDarkBlue,\r\n  },\r\n  categoryPercentage: {\r\n    fontSize: 14,\r\n    color: COLORS.wingDarkBlue,\r\n    opacity: 0.8,\r\n    marginTop: 4,\r\n  },\r\n  categorySpentContainer: {\r\n    width: '100%',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n  },\r\n\r\n  categorySpentBar: {\r\n    height: '100%',\r\n    //borderRadius: 8,\r\n    borderBottomEndRadius: 8,\r\n    borderTopEndRadius: 8,\r\n    opacity: 0.8,\r\n  },\r\n  titleContainer: {\r\n    flex: 1,\r\n    //alignItems: 'center',\r\n    //justifyContent: 'center',\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    marginTop: 10,\r\n  },\r\n  title: {\r\n    color: COLORS.wingDarkBlue,\r\n    fontFamily: 'SoraMedium',\r\n    fontSize: 20,\r\n  },\r\n  balanceContainer: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    //justifyContent: 'center',\r\n    padding: 10,\r\n    //marginBottom: 5,\r\n  },\r\n  balanceText: {\r\n    color: COLORS.wingDarkBlue,\r\n    fontFamily: 'SoraMedium',\r\n    fontSize: 30,\r\n  },\r\n  percentageBalance: {\r\n    color: COLORS.secondary,\r\n    fontFamily: 'SoraMedium',\r\n    fontSize: 13,\r\n  },\r\n\r\n  incomeExpenseContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    paddingHorizontal: 20,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  IEContainer: {\r\n    alignItems: 'center',\r\n    width: '48%',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    backgroundColor: COLORS.eggshell,\r\n    elevation: 5,\r\n    //shadowOffset: { width: 5, height: 5 },\r\n    //shadowOpacity: 0.3, \r\n    //shadowRadius: 5,\r\n    marginRight: 5,\r\n    flexDirection: 'row',\r\n  },\r\n  IETextContainer: {\r\n    flex: 1,\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'center',\r\n    marginLeft: 10,\r\n  },\r\n  incomeIcon: {\r\n    color: 'green',\r\n    fontSize: 30,\r\n    //marginBottom: 10,\r\n  },\r\n  expenseIcon: {\r\n    color: 'red',\r\n    fontSize: 30,\r\n    //marginBottom: 10,\r\n  },\r\n  IEText: {\r\n    color: COLORS.secondary,\r\n    fontFamily: 'SoraMedium',\r\n    fontSize: 15,\r\n  },\r\n  IENumber: {\r\n    color: COLORS.wingDarkBlue,\r\n    fontFamily: 'SoraMedium',\r\n    fontSize: 24,\r\n  },\r\n})\r\n\r\nexport default StatisticsScreen\r\n"
        }
    ]
}