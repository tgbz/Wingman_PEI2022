{
    "sourceFile": "server/controllers/users.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 42,
            "patches": [
                {
                    "date": 1667226072449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1667226207497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,27 +21,8 @@\n         });   \n     })       \n };\n \n-Users.create = function (newUser, callback) {\n-    User.findOne({employee: newUser.employee}, (err,user) => {\n-        if (!user) {\n-            bcrypt.genSalt(salt, function(err, salt) {\n-                bcrypt.hash(newUser.password, salt, async function (err, hash) {\n-                    newUser.password = hash\n-                    try {\n-                        newUser = await newUser.save()\n-                        callback(null, newUser)\n-                    } catch (error) {\n-                        callback(error, null)\n-                    }\n-                })\n-            })\n-        }\n-        else \n-            callback(null,false)\n-    })\n-}\n \n     \n /*User.login = function(u){\n     console.log(u)\n"
                },
                {
                    "date": 1667227791594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,69 +1,86 @@\n var sql = require('../config/database.js');\n+var User = requite('../models/user.js');\n var Users = module.exports;\n+const salt = 14;\n \n-Users.register = function (u) {    \n-    console.log(\"here i am\")\n-    const saltHash=genPassword(req.body.password);\n-    console.log(saltHash);\n-    const salt = saltHash.salt;\n-    const hash = saltHash.hash;\n-    var parameters = [u.name, hash, u.email, u.birthDate, u.gender, u.savings]\n-    console.log(parameters);\n-    return new Promise(function(resolve, reject) {\n-    sql.query(\"INSERT INTO users ( name, password, email , birthDate, gender, savings) VALUES ( ?, ?, ?, ?, ?, ?)\", parameters, function (err, res) {\n-            if(err) {\n-                console.log(\"error: \", err);\n-                reject(err);\n-            }\n-            else{\n-                resolve(res.insertId);\n-            }\n-        });   \n-    })       \n-};\n \n+Users.create = function(u){\n+    bcrypt.genSalt(salt,function(err,salt){\n+        bcrypt.hash(u.password,salt,function(err,hash){\n+            let parameters = [u.name,hash,u.email,u.birthDate,u.gender,u.savings]\n+            console.log(parameters);\n+            return new Promise(function(resolve, reject) {\n+                sql.query(\"INSERT INTO users ( name, password, email, birthDate, gender, savings) VALUES ( ?, ?, ?, ?, ?, ?)\", parameters, function (err, res) {\n+                        if(err) {\n+                            console.log(\"error: \", err);\n+                            reject(err);\n+                        }\n+                        else{\n+                            resolve(res.insertId);\n+                        }\n+                    });   \n+                }) \n+        })\n+    })\n+}\n \n+Users.register = function (newUser) {\n+    Users.getOne({email:newUser.email})\n+    .then(ser=>{\n+        if(!user){\n+            Users.create(newUser)\n+            .then(id =>{\n+                resolve(id)\n+            })\n+            .catch(err=>{\n+                res.status(500).jsonp(err)\n+            })\n+        }\n+    })\n+    .catch(err =>{\n+\n+    })\n+\n+    /*\n+    Users.getOne({email: newUser.email}, (err,user) => {\n+        if (!user) {\n+            bcrypt.genSalt(salt, function(err, salt) {\n+                bcrypt.hash(newUser.password, salt, async function (err, hash) {\n+                    newUser.password = hash\n+                    try {\n+                        newUser = await newUser.save()\n+                        callback(null, newUser)\n+                    } catch (error) {\n+                        callback(error, null)\n+                    }\n+                })\n+            })\n+        }\n+        else \n+            callback(null,false)\n+    })*/\n+}\n+\n+\n+\n+\n     \n-/*User.login = function(u){\n-    console.log(u)\n-    return new Promise(function(resolve,reject){\n-        sql.query(\"Select * from user where email= ?\",u.email ,function(err,res){\n-            if(err) {\n-                console.log(\"error: \", err);\n-                reject(err);\n-            }\n-            else{\n-                bcrypt.compare(u.password, res.password, function (err, isMatch) {\n-                    callback(null, isMatch);\n-                });\n-            }\n-        });   \n-    })       \n-};*/\n \n \n Users.getOne = function(email) {\n-    console.log(\"TT\")\n     return new Promise(function(resolve,reject){\n         sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n                 reject(err);\n             }\n             else{\n-                console.log(res);\n-                resolve(res);\n+                console.log(res[0]);\n+                resolve(res[0]);\n             }\n         });   \n     })   \n }\n \n \n \n-Users.comparePassword = function (candidatePassword, hash, callback) {\n-\tbcrypt.compare(candidatePassword, hash, function (err, isMatch) {\n-\t\tcallback(null, isMatch);\n-\t});\n-}\n-\n-\n"
                },
                {
                    "date": 1667227796804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n             })\n         }\n     })\n     .catch(err =>{\n-\n+        res.status(500).jsonp(err)\n     })\n \n     /*\n     Users.getOne({email: newUser.email}, (err,user) => {\n"
                },
                {
                    "date": 1667227808239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n }\n \n Users.register = function (newUser) {\n     Users.getOne({email:newUser.email})\n-    .then(ser=>{\n+    .then(user=>{\n         if(!user){\n             Users.create(newUser)\n             .then(id =>{\n                 resolve(id)\n"
                },
                {
                    "date": 1667227817635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n var sql = require('../config/database.js');\n-var User = requite('../models/user.js');\n+var User = require('../models/user.js');\n var Users = module.exports;\n const salt = 14;\n \n \n"
                },
                {
                    "date": 1667228020761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,11 +4,12 @@\n const salt = 14;\n \n \n Users.create = function(u){\n+    console.log(u+\"kekw\")\n     bcrypt.genSalt(salt,function(err,salt){\n         bcrypt.hash(u.password,salt,function(err,hash){\n-            let parameters = [u.name,hash,u.email,u.birthDate,u.gender,u.savings]\n+            let parameters = [u.username,hash,u.email,u.birthdate,u.gender,u.savings]\n             console.log(parameters);\n             return new Promise(function(resolve, reject) {\n                 sql.query(\"INSERT INTO users ( name, password, email, birthDate, gender, savings) VALUES ( ?, ?, ?, ?, ?, ?)\", parameters, function (err, res) {\n                         if(err) {\n"
                },
                {
                    "date": 1667228047051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,8 +68,9 @@\n     \n \n \n Users.getOne = function(email) {\n+    console.log(email + \"  Ola\")\n     return new Promise(function(resolve,reject){\n         sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n"
                },
                {
                    "date": 1667228304844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,14 +33,14 @@\n             .then(id =>{\n                 resolve(id)\n             })\n             .catch(err=>{\n-                res.status(500).jsonp(err)\n+                reject(err)\n             })\n         }\n     })\n     .catch(err =>{\n-        res.status(500).jsonp(err)\n+        reject(err)\n     })\n \n     /*\n     Users.getOne({email: newUser.email}, (err,user) => {\n"
                },
                {
                    "date": 1667228355484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,9 @@\n     })\n }\n \n Users.register = function (newUser) {\n+    return new Promise(function(resolve, reject) {\n     Users.getOne({email:newUser.email})\n     .then(user=>{\n         if(!user){\n             Users.create(newUser)\n@@ -40,8 +41,9 @@\n     })\n     .catch(err =>{\n         reject(err)\n     })\n+})\n \n     /*\n     Users.getOne({email: newUser.email}, (err,user) => {\n         if (!user) {\n"
                },
                {
                    "date": 1667228506586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n var sql = require('../config/database.js');\n var User = require('../models/user.js');\n var Users = module.exports;\n const salt = 14;\n+var bcrypt = require('bcryptjs')\n \n-\n Users.create = function(u){\n     console.log(u+\"kekw\")\n     bcrypt.genSalt(salt,function(err,salt){\n         bcrypt.hash(u.password,salt,function(err,hash){\n"
                },
                {
                    "date": 1667228532851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n         bcrypt.hash(u.password,salt,function(err,hash){\n             let parameters = [u.username,hash,u.email,u.birthdate,u.gender,u.savings]\n             console.log(parameters);\n             return new Promise(function(resolve, reject) {\n-                sql.query(\"INSERT INTO users ( name, password, email, birthDate, gender, savings) VALUES ( ?, ?, ?, ?, ?, ?)\", parameters, function (err, res) {\n+                sql.query(\"INSERT INTO user ( name, password, email, birthDate, gender, savings) VALUES ( ?, ?, ?, ?, ?, ?)\", parameters, function (err, res) {\n                         if(err) {\n                             console.log(\"error: \", err);\n                             reject(err);\n                         }\n"
                },
                {
                    "date": 1667228569647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n var sql = require('../config/database.js');\n var User = require('../models/user.js');\n var Users = module.exports;\n-const salt = 14;\n+const salt = 7;\n var bcrypt = require('bcryptjs')\n \n Users.create = function(u){\n     console.log(u+\"kekw\")\n"
                },
                {
                    "date": 1667228619199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,11 @@\n var sql = require('../config/database.js');\n var User = require('../models/user.js');\n var Users = module.exports;\n-const salt = 7;\n+const salt = 14;\n var bcrypt = require('bcryptjs')\n \n Users.create = function(u){\n-    console.log(u+\"kekw\")\n     bcrypt.genSalt(salt,function(err,salt){\n         bcrypt.hash(u.password,salt,function(err,hash){\n             let parameters = [u.username,hash,u.email,u.birthdate,u.gender,u.savings]\n             console.log(parameters);\n"
                },
                {
                    "date": 1667228675021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n }\n \n Users.register = function (newUser) {\n     return new Promise(function(resolve, reject) {\n-    Users.getOne({email:newUser.email})\n+    Users.getOne(newUser.email)\n     .then(user=>{\n         if(!user){\n             Users.create(newUser)\n             .then(id =>{\n"
                },
                {
                    "date": 1667228769690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,11 @@\n             .catch(err=>{\n                 reject(err)\n             })\n         }\n+        else{\n+            console.log(\"Já existe\")\n+        }\n     })\n     .catch(err =>{\n         reject(err)\n     })\n"
                },
                {
                    "date": 1667228883530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n                 reject(err)\n             })\n         }\n         else{\n-            console.log(\"Já existe\")\n+            reject(\"User exists\")\n         }\n     })\n     .catch(err =>{\n         reject(err)\n"
                },
                {
                    "date": 1667229257724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,10 +37,9 @@\n                 reject(err)\n             })\n         }\n         else{\n-            reject(\"User exists\")\n-        }\n+            reject(\"Já existe uma conta associada a este utilizador\")\n     })\n     .catch(err =>{\n         reject(err)\n     })\n"
                },
                {
                    "date": 1667229856291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,11 +4,12 @@\n const salt = 14;\n var bcrypt = require('bcryptjs')\n \n Users.create = function(u){\n+    console.log(u)\n     bcrypt.genSalt(salt,function(err,salt){\n         bcrypt.hash(u.password,salt,function(err,hash){\n-            let parameters = [u.username,hash,u.email,u.birthdate,u.gender,u.savings]\n+            let parameters = [u.name,hash,u.email,u.birthdate,u.gender,u.savings]\n             console.log(parameters);\n             return new Promise(function(resolve, reject) {\n                 sql.query(\"INSERT INTO user ( name, password, email, birthDate, gender, savings) VALUES ( ?, ?, ?, ?, ?, ?)\", parameters, function (err, res) {\n                         if(err) {\n@@ -38,8 +39,9 @@\n             })\n         }\n         else{\n             reject(\"Já existe uma conta associada a este utilizador\")\n+        }\n     })\n     .catch(err =>{\n         reject(err)\n     })\n"
                },
                {
                    "date": 1667230611641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n const salt = 14;\n var bcrypt = require('bcryptjs')\n \n Users.create = function(u){\n-    console.log(u)\n+    console.log(u.email + \"  Ola\")\n     bcrypt.genSalt(salt,function(err,salt){\n         bcrypt.hash(u.password,salt,function(err,hash){\n             let parameters = [u.name,hash,u.email,u.birthdate,u.gender,u.savings]\n             console.log(parameters);\n"
                },
                {
                    "date": 1667230736566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,8 @@\n                 console.log(\"error: \", err);\n                 reject(err);\n             }\n             else{\n-                console.log(res[0]);\n                 resolve(res[0]);\n             }\n         });   \n     })   \n"
                },
                {
                    "date": 1667230861453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,8 @@\n     \n \n \n Users.getOne = function(email) {\n-    console.log(email + \"  Ola\")\n     return new Promise(function(resolve,reject){\n         sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n"
                },
                {
                    "date": 1667231099598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,8 +80,9 @@\n                 console.log(\"error: \", err);\n                 reject(err);\n             }\n             else{\n+                if(res.length == 0) reject(\"User doest not exist\");\n                 resolve(res[0]);\n             }\n         });   \n     })   \n"
                },
                {
                    "date": 1667231193272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,10 +80,9 @@\n                 console.log(\"error: \", err);\n                 reject(err);\n             }\n             else{\n-                if(res.length == 0) reject(\"User doest not exist\");\n-                resolve(res[0]);\n+                resolve(res);\n             }\n         });   \n     })   \n }\n"
                },
                {
                    "date": 1667231299529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,16 +73,18 @@\n     \n \n \n Users.getOne = function(email) {\n+    console.log(email + \"  Ola\")\n     return new Promise(function(resolve,reject){\n         sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n                 reject(err);\n             }\n             else{\n-                resolve(res);\n+                console.log(res[0]);\n+                resolve(res[0]);\n             }\n         });   \n     })   \n }\n"
                },
                {
                    "date": 1667231334238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,8 @@\n                 console.log(\"error: \", err);\n                 reject(err);\n             }\n             else{\n-                console.log(res[0]);\n                 resolve(res[0]);\n             }\n         });   \n     })   \n"
                },
                {
                    "date": 1667231393313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,16 +74,18 @@\n \n \n Users.getOne = function(email) {\n     console.log(email + \"  Ola\")\n+    let user = ''\n     return new Promise(function(resolve,reject){\n         sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n                 reject(err);\n             }\n             else{\n-                resolve(res[0]);\n+                user=res[0]\n+                resolve(user);\n             }\n         });   \n     })   \n }\n"
                },
                {
                    "date": 1667231407512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,8 +82,9 @@\n                 console.log(\"error: \", err);\n                 reject(err);\n             }\n             else{\n+                console.log(user)\n                 user=res[0]\n                 resolve(user);\n             }\n         });   \n"
                },
                {
                    "date": 1667231486090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n \n \n Users.getOne = function(email) {\n     console.log(email + \"  Ola\")\n-    let user = ''\n+    let user = new User()\n     return new Promise(function(resolve,reject){\n         sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n"
                },
                {
                    "date": 1667231501467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n \n \n Users.getOne = function(email) {\n     console.log(email + \"  Ola\")\n-    let user = new User()\n+    let user = []\n     return new Promise(function(resolve,reject){\n         sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n"
                },
                {
                    "date": 1667231555604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,11 +69,12 @@\n \n \n \n \n-    \n \n \n+\n+\n Users.getOne = function(email) {\n     console.log(email + \"  Ola\")\n     let user = []\n     return new Promise(function(resolve,reject){\n"
                },
                {
                    "date": 1667231674533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n \n \n Users.getOne = function(email) {\n     console.log(email + \"  Ola\")\n-    let user = []\n+    let user = null\n     return new Promise(function(resolve,reject){\n         sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n"
                },
                {
                    "date": 1667231803014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n             }\n             else{\n                 console.log(user)\n                 user=res[0]\n-                resolve(user);\n+                resolve({user});\n             }\n         });   \n     })   \n }\n"
                },
                {
                    "date": 1667231863877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,8 @@\n                 console.log(\"error: \", err);\n                 reject(err);\n             }\n             else{\n-                console.log(user)\n                 user=res[0]\n                 resolve({user});\n             }\n         });   \n"
                },
                {
                    "date": 1667231908490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,10 +83,12 @@\n                 console.log(\"error: \", err);\n                 reject(err);\n             }\n             else{\n-                user=res[0]\n-                resolve({user});\n+                if(res[0]){\n+                    user=res[0]\n+                }\n+                resolve(user);\n             }\n         });   \n     })   \n }\n"
                },
                {
                    "date": 1667231928286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n \n \n Users.getOne = function(email) {\n     console.log(email + \"  Ola\")\n-    let user = null\n+    let user = {}\n     return new Promise(function(resolve,reject){\n         sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n"
                },
                {
                    "date": 1667231996209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n Users.register = function (newUser) {\n     return new Promise(function(resolve, reject) {\n     Users.getOne(newUser.email)\n     .then(user=>{\n+        console.log(user)\n         if(!user){\n             Users.create(newUser)\n             .then(id =>{\n                 resolve(id)\n"
                },
                {
                    "date": 1667232033713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n     return new Promise(function(resolve, reject) {\n     Users.getOne(newUser.email)\n     .then(user=>{\n         console.log(user)\n-        if(!user){\n+        if(user!=null){\n             Users.create(newUser)\n             .then(id =>{\n                 resolve(id)\n             })\n"
                },
                {
                    "date": 1667232041099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n \n \n Users.getOne = function(email) {\n     console.log(email + \"  Ola\")\n-    let user = {}\n+    let user = null\n     return new Promise(function(resolve,reject){\n         sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n"
                },
                {
                    "date": 1667232063714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n     return new Promise(function(resolve, reject) {\n     Users.getOne(newUser.email)\n     .then(user=>{\n         console.log(user)\n-        if(user!=null){\n+        if(user==null){\n             Users.create(newUser)\n             .then(id =>{\n                 resolve(id)\n             })\n"
                },
                {
                    "date": 1667232112134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n                             console.log(\"error: \", err);\n                             reject(err);\n                         }\n                         else{\n+                            console.log(res)\n                             resolve(res.insertId);\n                         }\n                     });   \n                 }) \n"
                },
                {
                    "date": 1667232125846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n                             reject(err);\n                         }\n                         else{\n                             console.log(res)\n-                            resolve(res.insertId);\n+                            resolve(res.idUser);\n                         }\n                     });   \n                 }) \n         })\n"
                },
                {
                    "date": 1667232331164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,13 +4,11 @@\n const salt = 14;\n var bcrypt = require('bcryptjs')\n \n Users.create = function(u){\n-    console.log(u.email + \"  Ola\")\n     bcrypt.genSalt(salt,function(err,salt){\n         bcrypt.hash(u.password,salt,function(err,hash){\n             let parameters = [u.name,hash,u.email,u.birthdate,u.gender,u.savings]\n-            console.log(parameters);\n             return new Promise(function(resolve, reject) {\n                 sql.query(\"INSERT INTO user ( name, password, email, birthDate, gender, savings) VALUES ( ?, ?, ?, ?, ?, ?)\", parameters, function (err, res) {\n                         if(err) {\n                             console.log(\"error: \", err);\n@@ -29,9 +27,8 @@\n Users.register = function (newUser) {\n     return new Promise(function(resolve, reject) {\n     Users.getOne(newUser.email)\n     .then(user=>{\n-        console.log(user)\n         if(user==null){\n             Users.create(newUser)\n             .then(id =>{\n                 resolve(id)\n@@ -76,9 +73,8 @@\n \n \n \n Users.getOne = function(email) {\n-    console.log(email + \"  Ola\")\n     let user = null\n     return new Promise(function(resolve,reject){\n         sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n             if(err) {\n"
                }
            ],
            "date": 1667226072449,
            "name": "Commit-0",
            "content": "var sql = require('../config/database.js');\nvar Users = module.exports;\n\nUsers.register = function (u) {    \n    console.log(\"here i am\")\n    const saltHash=genPassword(req.body.password);\n    console.log(saltHash);\n    const salt = saltHash.salt;\n    const hash = saltHash.hash;\n    var parameters = [u.name, hash, u.email, u.birthDate, u.gender, u.savings]\n    console.log(parameters);\n    return new Promise(function(resolve, reject) {\n    sql.query(\"INSERT INTO users ( name, password, email , birthDate, gender, savings) VALUES ( ?, ?, ?, ?, ?, ?)\", parameters, function (err, res) {\n            if(err) {\n                console.log(\"error: \", err);\n                reject(err);\n            }\n            else{\n                resolve(res.insertId);\n            }\n        });   \n    })       \n};\n\nUsers.create = function (newUser, callback) {\n    User.findOne({employee: newUser.employee}, (err,user) => {\n        if (!user) {\n            bcrypt.genSalt(salt, function(err, salt) {\n                bcrypt.hash(newUser.password, salt, async function (err, hash) {\n                    newUser.password = hash\n                    try {\n                        newUser = await newUser.save()\n                        callback(null, newUser)\n                    } catch (error) {\n                        callback(error, null)\n                    }\n                })\n            })\n        }\n        else \n            callback(null,false)\n    })\n}\n\n    \n/*User.login = function(u){\n    console.log(u)\n    return new Promise(function(resolve,reject){\n        sql.query(\"Select * from user where email= ?\",u.email ,function(err,res){\n            if(err) {\n                console.log(\"error: \", err);\n                reject(err);\n            }\n            else{\n                bcrypt.compare(u.password, res.password, function (err, isMatch) {\n                    callback(null, isMatch);\n                });\n            }\n        });   \n    })       \n};*/\n\n\nUsers.getOne = function(email) {\n    console.log(\"TT\")\n    return new Promise(function(resolve,reject){\n        sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n            if(err) {\n                console.log(\"error: \", err);\n                reject(err);\n            }\n            else{\n                console.log(res);\n                resolve(res);\n            }\n        });   \n    })   \n}\n\n\n\nUsers.comparePassword = function (candidatePassword, hash, callback) {\n\tbcrypt.compare(candidatePassword, hash, function (err, isMatch) {\n\t\tcallback(null, isMatch);\n\t});\n}\n\n\n"
        }
    ]
}