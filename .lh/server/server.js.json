{
    "sourceFile": "server/server.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1667057802552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1667057847064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,39 @@\n-const express = require('express');\n-const app = express();\n+var express = require('express');\n+var app = express();\n \n+//body parser for post requests\n+var bodyParser = require('body-parser')\n+app.use(bodyParser.json({limit: '50mb'}));         // to support JSON-encoded bodies\n+app.use(bodyParser.urlencoded({\n+    limit : '50mb',\n+    // to support URL-encoded bodies\n+    extended: true,\n+    parameterLimit:50000\n+}));\n+\n+var cors = require('cors')\n+const corsOpts = {\n+    origin: '*',\n+    credentials: true,\n+    methods: ['GET', 'PUT', 'POST', 'DELETE', 'OPTIONS'],\n+    allowedHeaders: ['Accept', 'Authorization', 'Cache-Control', 'Content-Type', 'DNT', 'If-Modified-Since', 'Keep-Alive', 'Origin', 'User-Agent', 'X-Requested-With', 'Content-Length']\n+}\n+app.use(cors(corsOpts))\n+app.options('*', cors(corsOpts))\n+\n+//helmet (sets various HTTP headers to help protect the app)\n+var helmet = require('helmet')\n+app.use(helmet({\n+    //HSTS recommended config\n+    hsts: {\n+        maxAge: 31536000,\n+        includeSubDomains: true,\n+        preload: true\n+    },\n+    contentSecurityPolicy: {\n+        directives: {\n+            defaultSrc: [\"'none'\"]\n+        }\n+    }\n+}))\n+\n"
                }
            ],
            "date": 1667057802552,
            "name": "Commit-0",
            "content": "const express = require('express');\nconst app = express();\n\n"
        }
    ]
}