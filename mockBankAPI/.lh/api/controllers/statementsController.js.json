{
    "sourceFile": "api/controllers/statementsController.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 112,
            "patches": [
                {
                    "date": 1669632156261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1669633041500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n var mongoose = require(\"mongoose\");\r\n var statement = require(\"../models/statement\");\r\n-var Statements = module.exports;\r\n+\r\n var Transaction = require(\"../controllers/transactionsController\");\r\n \r\n var BankList = [\r\n   \"Banco BPI\",\r\n@@ -94,4 +94,6 @@\n       }\r\n     }\r\n   });\r\n };\r\n+\r\n+var Statements = module.exports;\r\n"
                },
                {
                    "date": 1669633145196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n var mongoose = require(\"mongoose\");\r\n var statement = require(\"../models/statement\");\r\n \r\n-var Transaction = require(\"../controllers/transactionsController\");\r\n+var Transactions = require(\"../controllers/transactionsController\");\r\n \r\n var BankList = [\r\n   \"Banco BPI\",\r\n   \"Caixa Geral de Depósitos\",\r\n"
                },
                {
                    "date": 1669633160521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n var mongoose = require(\"mongoose\");\r\n var statement = require(\"../models/statement\");\r\n \r\n-var Transactions = require(\"../controllers/transactionsController\");\r\n+var Transactions = require(\"./transactionsController\");\r\n \r\n var BankList = [\r\n   \"Banco BPI\",\r\n   \"Caixa Geral de Depósitos\",\r\n"
                },
                {
                    "date": 1669633263106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,24 +38,15 @@\n }\r\n \r\n //Get Statement by IBAN\r\n Statements.getStatementByIBAN = function (iban, callback) {\r\n-  try {\r\n-    statement.findOne(\r\n-      {\r\n-        IBAN: iban,\r\n-      },\r\n-      function (err, statement) {\r\n-        if (err) {\r\n-          callback(err, null);\r\n-        } else {\r\n-          callback(null, statement);\r\n-        }\r\n-      }\r\n-    );\r\n-  } catch (err) {\r\n-    console.log(err);\r\n-  }\r\n+  statement.findOne({ IBAN: iban }, function (err, statement) {\r\n+    if (err) {\r\n+      callback(err, null);\r\n+    } else {\r\n+      callback(null, statement);\r\n+    }\r\n+  });\r\n };\r\n \r\n Statements.createStatement = async function (iban, callback) {\r\n   statement.findOne({ IBAN: iban }, function (err, statement) {\r\n"
                },
                {
                    "date": 1669633324733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,19 +36,8 @@\n   };\r\n   return newStatement;\r\n }\r\n \r\n-//Get Statement by IBAN\r\n-Statements.getStatementByIBAN = function (iban, callback) {\r\n-  statement.findOne({ IBAN: iban }, function (err, statement) {\r\n-    if (err) {\r\n-      callback(err, null);\r\n-    } else {\r\n-      callback(null, statement);\r\n-    }\r\n-  });\r\n-};\r\n-\r\n Statements.createStatement = async function (iban, callback) {\r\n   statement.findOne({ IBAN: iban }, function (err, statement) {\r\n     if (err) {\r\n       newStatement = generateStatement(iban);\r\n"
                },
                {
                    "date": 1669633336306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n var mongoose = require(\"mongoose\");\r\n var statement = require(\"../models/statement\");\r\n \r\n var Transactions = require(\"./transactionsController\");\r\n+var Statements = module.exports;\r\n \r\n var BankList = [\r\n   \"Banco BPI\",\r\n   \"Caixa Geral de Depósitos\",\r\n@@ -74,6 +75,4 @@\n       }\r\n     }\r\n   });\r\n };\r\n-\r\n-var Statements = module.exports;\r\n"
                },
                {
                    "date": 1669633349070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n var mongoose = require(\"mongoose\");\r\n var statement = require(\"../models/statement\");\r\n \r\n var Transactions = require(\"./transactionsController\");\r\n-var Statements = module.exports;\r\n \r\n var BankList = [\r\n   \"Banco BPI\",\r\n   \"Caixa Geral de Depósitos\",\r\n@@ -37,8 +36,19 @@\n   };\r\n   return newStatement;\r\n }\r\n \r\n+//Get Statement by IBAN\r\n+Statements.getStatementByIBAN = function (iban, callback) {\r\n+  statement.findOne({ IBAN: iban }, function (err, statement) {\r\n+    if (err) {\r\n+      callback(err, null);\r\n+    } else {\r\n+      callback(null, statement);\r\n+    }\r\n+  });\r\n+};\r\n+\r\n Statements.createStatement = async function (iban, callback) {\r\n   statement.findOne({ IBAN: iban }, function (err, statement) {\r\n     if (err) {\r\n       newStatement = generateStatement(iban);\r\n@@ -75,4 +85,6 @@\n       }\r\n     }\r\n   });\r\n };\r\n+\r\n+var Statements = module.exports;\r\n"
                },
                {
                    "date": 1669633355058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,10 @@\n var statement = require(\"../models/statement\");\r\n \r\n var Transactions = require(\"./transactionsController\");\r\n \r\n+var Statements = module.exports;\r\n+\r\n var BankList = [\r\n   \"Banco BPI\",\r\n   \"Caixa Geral de Depósitos\",\r\n   \"Banco Santander\",\r\n@@ -85,6 +87,4 @@\n       }\r\n     }\r\n   });\r\n };\r\n-\r\n-var Statements = module.exports;\r\n"
                },
                {
                    "date": 1669636462773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,13 +56,16 @@\n       newStatement = generateStatement(iban);\r\n       try {\r\n         newStatement.save();\r\n         callback(null, newStatement);\r\n+        console.log(\"statement created\");\r\n       } catch (err) {\r\n         callback(err, null);\r\n+        console.log(\"statement not created\");\r\n       }\r\n     } else {\r\n       callback(null, statement);\r\n+      console.log(\"statement already exists\");\r\n     }\r\n   });\r\n };\r\n \r\n"
                },
                {
                    "date": 1669636580916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \r\n Statements.createStatement = async function (iban, callback) {\r\n   statement.findOne({ IBAN: iban }, function (err, statement) {\r\n     if (err) {\r\n-      newStatement = generateStatement(iban);\r\n+      var newStatement = generateStatement(iban);\r\n       try {\r\n         newStatement.save();\r\n         callback(null, newStatement);\r\n         console.log(\"statement created\");\r\n"
                },
                {
                    "date": 1669636594664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,8 +57,9 @@\n       try {\r\n         newStatement.save();\r\n         callback(null, newStatement);\r\n         console.log(\"statement created\");\r\n+        console.log(newStatement);\r\n       } catch (err) {\r\n         callback(err, null);\r\n         console.log(\"statement not created\");\r\n       }\r\n"
                },
                {
                    "date": 1669636603500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,8 +53,9 @@\n Statements.createStatement = async function (iban, callback) {\r\n   statement.findOne({ IBAN: iban }, function (err, statement) {\r\n     if (err) {\r\n       var newStatement = generateStatement(iban);\r\n+      console.log(newStatement);\r\n       try {\r\n         newStatement.save();\r\n         callback(null, newStatement);\r\n         console.log(\"statement created\");\r\n"
                },
                {
                    "date": 1669636620978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,8 @@\n         console.log(\"statement not created\");\r\n       }\r\n     } else {\r\n       callback(null, statement);\r\n-      console.log(\"statement already exists\");\r\n     }\r\n   });\r\n };\r\n \r\n"
                },
                {
                    "date": 1669636646791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,9 @@\n     IBAN: iban,\r\n     movimentos: movimentos,\r\n     saldo: saldo,\r\n   };\r\n+  console.log(newStatement);\r\n   return newStatement;\r\n }\r\n \r\n //Get Statement by IBAN\r\n"
                },
                {
                    "date": 1669636666667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n   \"Bankinter\",\r\n ];\r\n \r\n function generateStatement(iban) {\r\n+  console.log(\"Generating statement\");\r\n   var actualBank = BankList[Math.floor(Math.random() * BankList.length)];\r\n   var movimentos = Transactions.createTransactions(10);\r\n   var saldo = 0;\r\n \r\n"
                },
                {
                    "date": 1669636679569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   \"Banco Best\",\r\n   \"Bankinter\",\r\n ];\r\n \r\n-function generateStatement(iban) {\r\n+Statements.function generateStatement(iban) {\r\n   console.log(\"Generating statement\");\r\n   var actualBank = BankList[Math.floor(Math.random() * BankList.length)];\r\n   var movimentos = Transactions.createTransactions(10);\r\n   var saldo = 0;\r\n"
                },
                {
                    "date": 1669636685739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   \"Banco Best\",\r\n   \"Bankinter\",\r\n ];\r\n \r\n-Statements.function generateStatement(iban) {\r\n+function generateStatement(iban) {\r\n   console.log(\"Generating statement\");\r\n   var actualBank = BankList[Math.floor(Math.random() * BankList.length)];\r\n   var movimentos = Transactions.createTransactions(10);\r\n   var saldo = 0;\r\n"
                },
                {
                    "date": 1669636694110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n \r\n Statements.createStatement = async function (iban, callback) {\r\n   statement.findOne({ IBAN: iban }, function (err, statement) {\r\n     if (err) {\r\n-      var newStatement = generateStatement(iban);\r\n+      var newStatement = this.generateStatement(iban);\r\n       console.log(newStatement);\r\n       try {\r\n         newStatement.save();\r\n         callback(null, newStatement);\r\n"
                },
                {
                    "date": 1669636710262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n \r\n Statements.createStatement = async function (iban, callback) {\r\n   statement.findOne({ IBAN: iban }, function (err, statement) {\r\n     if (err) {\r\n-      var newStatement = this.generateStatement(iban);\r\n+      var newStatement = generateStatement(iban);\r\n       console.log(newStatement);\r\n       try {\r\n         newStatement.save();\r\n         callback(null, newStatement);\r\n"
                },
                {
                    "date": 1669636729606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,28 @@\n \r\n Statements.createStatement = async function (iban, callback) {\r\n   statement.findOne({ IBAN: iban }, function (err, statement) {\r\n     if (err) {\r\n-      var newStatement = generateStatement(iban);\r\n+      console.log(\"Generating statement\");\r\n+      var actualBank = BankList[Math.floor(Math.random() * BankList.length)];\r\n+      var movimentos = Transactions.createTransactions(10);\r\n+      var saldo = 0;\r\n+\r\n+      for (var i = 0; i < movimentos.length; i++) {\r\n+        if (movimentos[i].type == \"Crédito\") {\r\n+          saldo += movimentos[i].value;\r\n+        } else {\r\n+          saldo -= movimentos[i].value;\r\n+        }\r\n+      }\r\n+\r\n+      var newStatement = {\r\n+        _id: new mongoose.Types.ObjectId(),\r\n+        banco: actualBank,\r\n+        IBAN: iban,\r\n+        movimentos: movimentos,\r\n+        saldo: saldo,\r\n+      };\r\n       console.log(newStatement);\r\n       try {\r\n         newStatement.save();\r\n         callback(null, newStatement);\r\n"
                },
                {
                    "date": 1669636748127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,8 +52,9 @@\n   });\r\n };\r\n \r\n Statements.createStatement = async function (iban, callback) {\r\n+  console.log(\"iban received: \" + iban);\r\n   statement.findOne({ IBAN: iban }, function (err, statement) {\r\n     if (err) {\r\n       console.log(\"Generating statement\");\r\n       var actualBank = BankList[Math.floor(Math.random() * BankList.length)];\r\n"
                },
                {
                    "date": 1669636779276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,8 +68,11 @@\n           saldo -= movimentos[i].value;\r\n         }\r\n       }\r\n \r\n+      console.log(\"saldo: \" + saldo);\r\n+      console.log(\"movimentos: \" + movimentos);\r\n+      console.log(actualBank);\r\n       var newStatement = {\r\n         _id: new mongoose.Types.ObjectId(),\r\n         banco: actualBank,\r\n         IBAN: iban,\r\n"
                },
                {
                    "date": 1669636830441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,47 +53,27 @@\n };\r\n \r\n Statements.createStatement = async function (iban, callback) {\r\n   console.log(\"iban received: \" + iban);\r\n-  statement.findOne({ IBAN: iban }, function (err, statement) {\r\n+  getStatementByIBAN(iban, function (err, statement) {\r\n     if (err) {\r\n-      console.log(\"Generating statement\");\r\n-      var actualBank = BankList[Math.floor(Math.random() * BankList.length)];\r\n-      var movimentos = Transactions.createTransactions(10);\r\n-      var saldo = 0;\r\n-\r\n-      for (var i = 0; i < movimentos.length; i++) {\r\n-        if (movimentos[i].type == \"Crédito\") {\r\n-          saldo += movimentos[i].value;\r\n-        } else {\r\n-          saldo -= movimentos[i].value;\r\n-        }\r\n+      callback(err, null);\r\n+    } else {\r\n+      if (statement == null) {\r\n+        var newStatement = generateStatement(iban);\r\n+        statement.create(newStatement, function (err, statement) {\r\n+          if (err) {\r\n+            callback(err, null);\r\n+          } else {\r\n+            callback(null, statement);\r\n+          }\r\n+        });\r\n+      } else {\r\n+        callback(null, statement);\r\n       }\r\n+    }\r\n+  }\r\n \r\n-      console.log(\"saldo: \" + saldo);\r\n-      console.log(\"movimentos: \" + movimentos);\r\n-      console.log(actualBank);\r\n-      var newStatement = {\r\n-        _id: new mongoose.Types.ObjectId(),\r\n-        banco: actualBank,\r\n-        IBAN: iban,\r\n-        movimentos: movimentos,\r\n-        saldo: saldo,\r\n-      };\r\n-      console.log(newStatement);\r\n-      try {\r\n-        newStatement.save();\r\n-        callback(null, newStatement);\r\n-        console.log(\"statement created\");\r\n-        console.log(newStatement);\r\n-      } catch (err) {\r\n-        callback(err, null);\r\n-        console.log(\"statement not created\");\r\n-      }\r\n-    } else {\r\n-      callback(null, statement);\r\n-    }\r\n-  });\r\n };\r\n \r\n //get statement with 20% chance of creating 1,2 or 3 new transactions and push them to the statement\r\n Statements.getUpdatedStatement = function (iban, callback) {\r\n"
                },
                {
                    "date": 1669636894469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,28 +52,24 @@\n   });\r\n };\r\n \r\n Statements.createStatement = async function (iban, callback) {\r\n-  console.log(\"iban received: \" + iban);\r\n-  getStatementByIBAN(iban, function (err, statement) {\r\n+  statement.findOne({ IBAN: iban }, function (err, statement) {\r\n     if (err) {\r\n       callback(err, null);\r\n+    } else if (statement) {\r\n+      callback(null, statement);\r\n     } else {\r\n-      if (statement == null) {\r\n-        var newStatement = generateStatement(iban);\r\n-        statement.create(newStatement, function (err, statement) {\r\n-          if (err) {\r\n-            callback(err, null);\r\n-          } else {\r\n-            callback(null, statement);\r\n-          }\r\n-        });\r\n-      } else {\r\n-        callback(null, statement);\r\n-      }\r\n+      var newStatement = generateStatement(iban);\r\n+      statement.create(newStatement, function (err, statement) {\r\n+        if (err) {\r\n+          callback(err, null);\r\n+        } else {\r\n+          callback(null, statement);\r\n+        }\r\n+      });\r\n     }\r\n-  }\r\n-\r\n+  });\r\n };\r\n \r\n //get statement with 20% chance of creating 1,2 or 3 new transactions and push them to the statement\r\n Statements.getUpdatedStatement = function (iban, callback) {\r\n"
                },
                {
                    "date": 1669636965311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,10 @@\n   var actualBank = BankList[Math.floor(Math.random() * BankList.length)];\r\n   var movimentos = Transactions.createTransactions(10);\r\n   var saldo = 0;\r\n \r\n+  console.log(movimentos);\r\n+\r\n   for (var i = 0; i < movimentos.length; i++) {\r\n     if (movimentos[i].type == \"Crédito\") {\r\n       saldo += movimentos[i].value;\r\n     } else {\r\n"
                },
                {
                    "date": 1669636979206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n     IBAN: iban,\r\n     movimentos: movimentos,\r\n     saldo: saldo,\r\n   };\r\n-  console.log(newStatement);\r\n+\r\n   return newStatement;\r\n }\r\n \r\n //Get Statement by IBAN\r\n"
                },
                {
                    "date": 1669638861780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \r\n function generateStatement(iban) {\r\n   console.log(\"Generating statement\");\r\n   var actualBank = BankList[Math.floor(Math.random() * BankList.length)];\r\n-  var movimentos = Transactions.createTransactions(10);\r\n+  var movimentos = Transactions.createTransactions(callback, 10);\r\n   var saldo = 0;\r\n \r\n   console.log(movimentos);\r\n \r\n"
                },
                {
                    "date": 1669638875578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \r\n function generateStatement(iban) {\r\n   console.log(\"Generating statement\");\r\n   var actualBank = BankList[Math.floor(Math.random() * BankList.length)];\r\n-  var movimentos = Transactions.createTransactions(callback, 10);\r\n+  var movimentos = Transactions.createTransactions(10);\r\n   var saldo = 0;\r\n \r\n   console.log(movimentos);\r\n \r\n"
                },
                {
                    "date": 1669641693821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n     }\r\n   });\r\n };\r\n \r\n-Statements.createStatement = async function (iban, callback) {\r\n+Statements.createStatement = function (iban, callback) {\r\n   statement.findOne({ IBAN: iban }, function (err, statement) {\r\n     if (err) {\r\n       callback(err, null);\r\n     } else if (statement) {\r\n"
                },
                {
                    "date": 1669641881791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,10 +17,13 @@\n ];\r\n \r\n function generateStatement(iban) {\r\n   console.log(\"Generating statement\");\r\n+  var transaction\r\n   var actualBank = BankList[Math.floor(Math.random() * BankList.length)];\r\n-  var movimentos = Transactions.createTransactions(10);\r\n+  for (const i; i < 10; i++) {\r\n+    var tmpTransaction = Transactions.newTransaction();\r\n+  }\r\n   var saldo = 0;\r\n \r\n   console.log(movimentos);\r\n \r\n"
                },
                {
                    "date": 1669642007828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,35 +16,56 @@\n   \"Bankinter\",\r\n ];\r\n \r\n function generateStatement(iban) {\r\n-  console.log(\"Generating statement\");\r\n-  var transaction\r\n-  var actualBank = BankList[Math.floor(Math.random() * BankList.length)];\r\n-  for (const i; i < 10; i++) {\r\n-    var tmpTransaction = Transactions.newTransaction();\r\n+  //Gerar 10 transações aleatórias\r\n+  var newTransactions = [];\r\n+  for (var i = 0; i < 10; i++) {\r\n+    newTransactions.push(Transactions.newTransaction());\r\n   }\r\n-  var saldo = 0;\r\n-\r\n-  console.log(movimentos);\r\n-\r\n-  for (var i = 0; i < movimentos.length; i++) {\r\n-    if (movimentos[i].type == \"Crédito\") {\r\n-      saldo += movimentos[i].value;\r\n+  //Guardar os ids das transações no array de movimentos\r\n+  var newMovimentos = [];\r\n+ \r\n+  //Inserir na base de dados os movimentos e guardar os ids\r\n+  newTransactions.forEach(function (transaction) {\r\n+    var tmpTransaction = new Transaction(transaction);\r\n+    tmpTransaction.save(function (err, transaction) {\r\n+      if (err) {\r\n+        console.log(err);\r\n+      } else {\r\n+        newMovimentos.push(transaction._id);\r\n+      }\r\n+    });\r\n+  });\r\n+  //Gerar o saldo\r\n+  var newSaldo = 0;\r\n+  newTransactions.forEach(function (transaction) {\r\n+    if (transaction.category == \"Recebimento\") {\r\n+      newSaldo += transaction.value;\r\n     } else {\r\n-      saldo -= movimentos[i].value;\r\n+      newSaldo -= transaction.value;\r\n     }\r\n   }\r\n-\r\n+  //Gerar o statement\r\n   var newStatement = {\r\n     _id: new mongoose.Types.ObjectId(),\r\n-    banco: actualBank,\r\n+    banco: BankList[Math.floor(Math.random() * BankList.length)],\r\n     IBAN: iban,\r\n-    movimentos: movimentos,\r\n-    saldo: saldo,\r\n+    movimentos: newMovimentos,\r\n+    saldo: newSaldo,\r\n   };\r\n+  \r\n+  //Guardar o statement na base de dados\r\n+  var tmpStatement = new statement(newStatement);\r\n+  tmpStatement.save(function (err, statement) {\r\n+    if (err) {\r\n+      console.log(err);\r\n+    } else {\r\n+      console.log(\"Statement created\");\r\n+    }\r\n+  });\r\n \r\n-  return newStatement;\r\n+\r\n }\r\n \r\n //Get Statement by IBAN\r\n Statements.getStatementByIBAN = function (iban, callback) {\r\n"
                },
                {
                    "date": 1669642017828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     newTransactions.push(Transactions.newTransaction());\r\n   }\r\n   //Guardar os ids das transações no array de movimentos\r\n   var newMovimentos = [];\r\n- \r\n+\r\n   //Inserir na base de dados os movimentos e guardar os ids\r\n   newTransactions.forEach(function (transaction) {\r\n     var tmpTransaction = new Transaction(transaction);\r\n     tmpTransaction.save(function (err, transaction) {\r\n@@ -43,18 +43,18 @@\n       newSaldo += transaction.value;\r\n     } else {\r\n       newSaldo -= transaction.value;\r\n     }\r\n-  }\r\n+  });\r\n   //Gerar o statement\r\n   var newStatement = {\r\n     _id: new mongoose.Types.ObjectId(),\r\n     banco: BankList[Math.floor(Math.random() * BankList.length)],\r\n     IBAN: iban,\r\n     movimentos: newMovimentos,\r\n     saldo: newSaldo,\r\n   };\r\n-  \r\n+\r\n   //Guardar o statement na base de dados\r\n   var tmpStatement = new statement(newStatement);\r\n   tmpStatement.save(function (err, statement) {\r\n     if (err) {\r\n@@ -62,10 +62,8 @@\n     } else {\r\n       console.log(\"Statement created\");\r\n     }\r\n   });\r\n-\r\n-\r\n }\r\n \r\n //Get Statement by IBAN\r\n Statements.getStatementByIBAN = function (iban, callback) {\r\n"
                },
                {
                    "date": 1669642052350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,22 +76,18 @@\n   });\r\n };\r\n \r\n Statements.createStatement = function (iban, callback) {\r\n-  statement.findOne({ IBAN: iban }, function (err, statement) {\r\n+  Statements.getStatementByIBAN(iban, function (err, statement) {\r\n     if (err) {\r\n       callback(err, null);\r\n-    } else if (statement) {\r\n-      callback(null, statement);\r\n     } else {\r\n-      var newStatement = generateStatement(iban);\r\n-      statement.create(newStatement, function (err, statement) {\r\n-        if (err) {\r\n-          callback(err, null);\r\n-        } else {\r\n-          callback(null, statement);\r\n-        }\r\n-      });\r\n+      if (statement == null) {\r\n+        generateStatement(iban);\r\n+        callback(null, statement);\r\n+      } else {\r\n+        callback(null, statement);\r\n+      }\r\n     }\r\n   });\r\n };\r\n \r\n"
                },
                {
                    "date": 1669642353255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,49 +21,22 @@\n   var newTransactions = [];\r\n   for (var i = 0; i < 10; i++) {\r\n     newTransactions.push(Transactions.newTransaction());\r\n   }\r\n-  //Guardar os ids das transações no array de movimentos\r\n-  var newMovimentos = [];\r\n \r\n   //Inserir na base de dados os movimentos e guardar os ids\r\n-  newTransactions.forEach(function (transaction) {\r\n-    var tmpTransaction = new Transaction(transaction);\r\n-    tmpTransaction.save(function (err, transaction) {\r\n+  for (var i = 0; i < newTransactions.length; i++) {\r\n+    Transactions.create(newTransactions[i], function (err, transaction) {\r\n       if (err) {\r\n         console.log(err);\r\n       } else {\r\n-        newMovimentos.push(transaction._id);\r\n+        newTransactions[i] = transaction._id;\r\n       }\r\n     });\r\n-  });\r\n-  //Gerar o saldo\r\n-  var newSaldo = 0;\r\n-  newTransactions.forEach(function (transaction) {\r\n-    if (transaction.category == \"Recebimento\") {\r\n-      newSaldo += transaction.value;\r\n-    } else {\r\n-      newSaldo -= transaction.value;\r\n-    }\r\n-  });\r\n-  //Gerar o statement\r\n-  var newStatement = {\r\n-    _id: new mongoose.Types.ObjectId(),\r\n-    banco: BankList[Math.floor(Math.random() * BankList.length)],\r\n-    IBAN: iban,\r\n-    movimentos: newMovimentos,\r\n-    saldo: newSaldo,\r\n-  };\r\n+  }\r\n+  \r\n+  //Gerar um novo statement\r\n \r\n-  //Guardar o statement na base de dados\r\n-  var tmpStatement = new statement(newStatement);\r\n-  tmpStatement.save(function (err, statement) {\r\n-    if (err) {\r\n-      console.log(err);\r\n-    } else {\r\n-      console.log(\"Statement created\");\r\n-    }\r\n-  });\r\n }\r\n \r\n //Get Statement by IBAN\r\n Statements.getStatementByIBAN = function (iban, callback) {\r\n@@ -75,22 +48,23 @@\n     }\r\n   });\r\n };\r\n \r\n-Statements.createStatement = function (iban, callback) {\r\n-  Statements.getStatementByIBAN(iban, function (err, statement) {\r\n+Statements.createStatement = function (iban, movimentos, callback) {\r\n+  var newStatement = new statement({\r\n+    _id: new mongoose.Types.ObjectId(),\r\n+    banco: BankList[Math.floor(Math.random() * BankList.length)],\r\n+    IBAN: iban,\r\n+    movimentos: movimentos,\r\n+    saldo: 0,\r\n+  });\r\n+  newStatement.save(function (err, statement) {\r\n     if (err) {\r\n       callback(err, null);\r\n     } else {\r\n-      if (statement == null) {\r\n-        generateStatement(iban);\r\n-        callback(null, statement);\r\n-      } else {\r\n-        callback(null, statement);\r\n-      }\r\n+      callback(null, statement);\r\n     }\r\n   });\r\n-};\r\n \r\n //get statement with 20% chance of creating 1,2 or 3 new transactions and push them to the statement\r\n Statements.getUpdatedStatement = function (iban, callback) {\r\n   Statements.getStatementByIBAN(iban, function (err, statement) {\r\n@@ -112,4 +86,5 @@\n       }\r\n     }\r\n   });\r\n };\r\n+\r\n"
                },
                {
                    "date": 1669642384329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,11 +32,17 @@\n         newTransactions[i] = transaction._id;\r\n       }\r\n     });\r\n   }\r\n-  \r\n+\r\n   //Gerar um novo statement\r\n-\r\n+  Statements.createStatement(iban, newTransactions, function (err, statement) {\r\n+    if (err) {\r\n+      console.log(err);\r\n+    } else {\r\n+      console.log(statement);\r\n+    }\r\n+  });\r\n }\r\n \r\n //Get Statement by IBAN\r\n Statements.getStatementByIBAN = function (iban, callback) {\r\n@@ -63,8 +69,9 @@\n     } else {\r\n       callback(null, statement);\r\n     }\r\n   });\r\n+};\r\n \r\n //get statement with 20% chance of creating 1,2 or 3 new transactions and push them to the statement\r\n Statements.getUpdatedStatement = function (iban, callback) {\r\n   Statements.getStatementByIBAN(iban, function (err, statement) {\r\n@@ -86,5 +93,4 @@\n       }\r\n     }\r\n   });\r\n };\r\n-\r\n"
                },
                {
                    "date": 1669642429590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,8 +54,13 @@\n     }\r\n   });\r\n };\r\n \r\n+Statements.initStatement = function (iban, callback) {\r\n+  generateStatement(iban);\r\n+  callback(null, \"Statement created\");\r\n+};\r\n+\r\n Statements.createStatement = function (iban, movimentos, callback) {\r\n   var newStatement = new statement({\r\n     _id: new mongoose.Types.ObjectId(),\r\n     banco: BankList[Math.floor(Math.random() * BankList.length)],\r\n"
                },
                {
                    "date": 1669642437234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,10 +55,19 @@\n   });\r\n };\r\n \r\n Statements.initStatement = function (iban, callback) {\r\n-  generateStatement(iban);\r\n-  callback(null, \"Statement created\");\r\n+  try {\r\n+    Statements.getStatementByIBAN(iban, function (err, statement) {\r\n+      if (err) {\r\n+        callback(err, null);\r\n+      } else {\r\n+        if (statement == null) {\r\n+          generateStatement(iban);\r\n+        }\r\n+      }\r\n+    });\r\n+  }\r\n };\r\n \r\n Statements.createStatement = function (iban, movimentos, callback) {\r\n   var newStatement = new statement({\r\n"
                },
                {
                    "date": 1669642445744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,8 +65,10 @@\n           generateStatement(iban);\r\n         }\r\n       }\r\n     });\r\n+  } catch (err) {\r\n+    callback(err, null);\r\n   }\r\n };\r\n \r\n Statements.createStatement = function (iban, movimentos, callback) {\r\n"
                },
                {
                    "date": 1669642589632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,8 +62,9 @@\n         callback(err, null);\r\n       } else {\r\n         if (statement == null) {\r\n           generateStatement(iban);\r\n+          callback(null, statement);\r\n         }\r\n       }\r\n     });\r\n   } catch (err) {\r\n"
                },
                {
                    "date": 1669643036420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,10 +61,10 @@\n       if (err) {\r\n         callback(err, null);\r\n       } else {\r\n         if (statement == null) {\r\n-          generateStatement(iban);\r\n-          callback(null, statement);\r\n+          var state = generateStatement(iban);\r\n+          callback(null, state);\r\n         }\r\n       }\r\n     });\r\n   } catch (err) {\r\n"
                },
                {
                    "date": 1669643052604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,10 +61,10 @@\n       if (err) {\r\n         callback(err, null);\r\n       } else {\r\n         if (statement == null) {\r\n-          var state = generateStatement(iban);\r\n-          callback(null, state);\r\n+          generateStatement(iban);\r\n+          callback(null, statement);\r\n         }\r\n       }\r\n     });\r\n   } catch (err) {\r\n"
                },
                {
                    "date": 1669643190848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,10 +61,31 @@\n       if (err) {\r\n         callback(err, null);\r\n       } else {\r\n         if (statement == null) {\r\n-          generateStatement(iban);\r\n-          callback(null, statement);\r\n+          var newTransactions = [];\r\n+          for (var i = 0; i < 10; i++) {\r\n+            newTransactions.push(Transactions.newTransaction());\r\n+          }\r\n+        \r\n+          //Inserir na base de dados os movimentos e guardar os ids\r\n+          for (var i = 0; i < newTransactions.length; i++) {\r\n+            Transactions.create(newTransactions[i], function (err, transaction) {\r\n+              if (err) {\r\n+                console.log(err);\r\n+              } else {\r\n+                newTransactions[i] = transaction._id;\r\n+              }\r\n+            });\r\n+          }\r\n+        \r\n+          //Gerar um novo statement\r\n+          Statements.createStatement(iban, newTransactions, function (err, statement) {\r\n+            if (err) {\r\n+              console.log(err);\r\n+            } else {\r\n+              console.log(statement);\r\n+            }\r\n         }\r\n       }\r\n     });\r\n   } catch (err) {\r\n"
                },
                {
                    "date": 1669643348889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,36 +15,8 @@\n   \"Banco Best\",\r\n   \"Bankinter\",\r\n ];\r\n \r\n-function generateStatement(iban) {\r\n-  //Gerar 10 transações aleatórias\r\n-  var newTransactions = [];\r\n-  for (var i = 0; i < 10; i++) {\r\n-    newTransactions.push(Transactions.newTransaction());\r\n-  }\r\n-\r\n-  //Inserir na base de dados os movimentos e guardar os ids\r\n-  for (var i = 0; i < newTransactions.length; i++) {\r\n-    Transactions.create(newTransactions[i], function (err, transaction) {\r\n-      if (err) {\r\n-        console.log(err);\r\n-      } else {\r\n-        newTransactions[i] = transaction._id;\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  //Gerar um novo statement\r\n-  Statements.createStatement(iban, newTransactions, function (err, statement) {\r\n-    if (err) {\r\n-      console.log(err);\r\n-    } else {\r\n-      console.log(statement);\r\n-    }\r\n-  });\r\n-}\r\n-\r\n //Get Statement by IBAN\r\n Statements.getStatementByIBAN = function (iban, callback) {\r\n   statement.findOne({ IBAN: iban }, function (err, statement) {\r\n     if (err) {\r\n@@ -65,27 +37,20 @@\n           var newTransactions = [];\r\n           for (var i = 0; i < 10; i++) {\r\n             newTransactions.push(Transactions.newTransaction());\r\n           }\r\n-        \r\n-          //Inserir na base de dados os movimentos e guardar os ids\r\n           for (var i = 0; i < newTransactions.length; i++) {\r\n-            Transactions.create(newTransactions[i], function (err, transaction) {\r\n-              if (err) {\r\n-                console.log(err);\r\n-              } else {\r\n-                newTransactions[i] = transaction._id;\r\n+            Transactions.create(\r\n+              newTransactions[i],\r\n+              function (err, transaction) {\r\n+                if (err) {\r\n+                  callback(err, null);\r\n+                } else {\r\n+                  newTransactions[i] = transaction._id;\r\n+                }\r\n               }\r\n-            });\r\n+            );\r\n           }\r\n-        \r\n-          //Gerar um novo statement\r\n-          Statements.createStatement(iban, newTransactions, function (err, statement) {\r\n-            if (err) {\r\n-              console.log(err);\r\n-            } else {\r\n-              console.log(statement);\r\n-            }\r\n         }\r\n       }\r\n     });\r\n   } catch (err) {\r\n"
                },
                {
                    "date": 1669643390818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,13 @@\n                   newTransactions[i] = transaction._id;\r\n                 }\r\n               }\r\n             );\r\n+            var finalStatement = Statements.createStatement(\r\n+              iban,\r\n+              newTransactions\r\n+            );\r\n+            callback(null, finalStatement);\r\n           }\r\n         }\r\n       }\r\n     });\r\n"
                },
                {
                    "date": 1669643417380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,8 +54,10 @@\n               newTransactions\r\n             );\r\n             callback(null, finalStatement);\r\n           }\r\n+        } else {\r\n+          callback(null, statement);\r\n         }\r\n       }\r\n     });\r\n   } catch (err) {\r\n"
                },
                {
                    "date": 1669643457934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,10 +43,8 @@\n               newTransactions[i],\r\n               function (err, transaction) {\r\n                 if (err) {\r\n                   callback(err, null);\r\n-                } else {\r\n-                  newTransactions[i] = transaction._id;\r\n                 }\r\n               }\r\n             );\r\n             var finalStatement = Statements.createStatement(\r\n"
                },
                {
                    "date": 1669643468786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,10 @@\n               newTransactions[i],\r\n               function (err, transaction) {\r\n                 if (err) {\r\n                   callback(err, null);\r\n+                } else {\r\n+                  newTransactions[i] = transaction._id;\r\n                 }\r\n               }\r\n             );\r\n             var finalStatement = Statements.createStatement(\r\n"
                },
                {
                    "date": 1669643582106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,25 @@\n             var finalStatement = Statements.createStatement(\r\n               iban,\r\n               newTransactions\r\n             );\r\n-            callback(null, finalStatement);\r\n+\r\n+            //lookup para obter todos os campos dos movimentos + calcular o saldo final\r\n+            statement\r\n+              .populate(\"movimentos\")\r\n+              .execPopulate(function (err, statement) {\r\n+                if (err) {\r\n+                  callback(err, null);\r\n+                } else {\r\n+                  var saldo = 0;\r\n+                  for (var i = 0; i < statement.movimentos.length; i++) {\r\n+                    saldo += statement.movimentos[i].valor;\r\n+                  }\r\n+                  statement.saldo = saldo;\r\n+                  statement.save();\r\n+                  callback(null, statement);\r\n+                }\r\n+              });\r\n           }\r\n         } else {\r\n           callback(null, statement);\r\n         }\r\n"
                },
                {
                    "date": 1669643705709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,24 +53,47 @@\n               iban,\r\n               newTransactions\r\n             );\r\n \r\n-            //lookup para obter todos os campos dos movimentos + calcular o saldo final\r\n-            statement\r\n-              .populate(\"movimentos\")\r\n-              .execPopulate(function (err, statement) {\r\n-                if (err) {\r\n-                  callback(err, null);\r\n-                } else {\r\n-                  var saldo = 0;\r\n-                  for (var i = 0; i < statement.movimentos.length; i++) {\r\n-                    saldo += statement.movimentos[i].valor;\r\n+            Statement.aggregate([\r\n+              {\r\n+                $lookup: {\r\n+                  from: \"transactions\",\r\n+                  localField: \"movimentos\",\r\n+                  foreignField: \"_id\",\r\n+                  as: \"movimentos\",\r\n+                },\r\n+              },\r\n+              {\r\n+                $unwind: \"$movimentos\",\r\n+              },\r\n+              {\r\n+                $match: {\r\n+                  IBAN: iban,\r\n+                },\r\n+              },\r\n+              {\r\n+                $group: {\r\n+                  _id: \"$IBAN\",\r\n+                  saldo: {\r\n+                    $sum: \"$movimentos.value\",\r\n+                  },\r\n+                },\r\n+              },\r\n+            ]).exec(function (err, result) {\r\n+              if (err) {\r\n+                callback(err, null);\r\n+              } else {\r\n+                finalStatement.saldo = result[0].saldo;\r\n+                Statements.create(finalStatement, function (err, statement) {\r\n+                  if (err) {\r\n+                    callback(err, null);\r\n+                  } else {\r\n+                    callback(null, statement);\r\n                   }\r\n-                  statement.saldo = saldo;\r\n-                  statement.save();\r\n-                  callback(null, statement);\r\n-                }\r\n-              });\r\n+                });\r\n+              }\r\n+            });\r\n           }\r\n         } else {\r\n           callback(null, statement);\r\n         }\r\n"
                },
                {
                    "date": 1669643790730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,47 +53,18 @@\n               iban,\r\n               newTransactions\r\n             );\r\n \r\n-            Statement.aggregate([\r\n-              {\r\n-                $lookup: {\r\n-                  from: \"transactions\",\r\n-                  localField: \"movimentos\",\r\n-                  foreignField: \"_id\",\r\n-                  as: \"movimentos\",\r\n-                },\r\n-              },\r\n-              {\r\n-                $unwind: \"$movimentos\",\r\n-              },\r\n-              {\r\n-                $match: {\r\n-                  IBAN: iban,\r\n-                },\r\n-              },\r\n-              {\r\n-                $group: {\r\n-                  _id: \"$IBAN\",\r\n-                  saldo: {\r\n-                    $sum: \"$movimentos.value\",\r\n-                  },\r\n-                },\r\n-              },\r\n-            ]).exec(function (err, result) {\r\n+            //get the statement object, with the movimentos array filled with the transaction objects instead of the transaction ids\r\n+            statement.populate(\"movimentos\", function (err, statement) {\r\n               if (err) {\r\n                 callback(err, null);\r\n               } else {\r\n-                finalStatement.saldo = result[0].saldo;\r\n-                Statements.create(finalStatement, function (err, statement) {\r\n-                  if (err) {\r\n-                    callback(err, null);\r\n-                  } else {\r\n-                    callback(null, statement);\r\n-                  }\r\n-                });\r\n+                callback(null, statement);\r\n               }\r\n             });\r\n+\r\n+            callback(null, finalStatement);\r\n           }\r\n         } else {\r\n           callback(null, statement);\r\n         }\r\n"
                },
                {
                    "date": 1669643808836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,13 +54,13 @@\n               newTransactions\r\n             );\r\n \r\n             //get the statement object, with the movimentos array filled with the transaction objects instead of the transaction ids\r\n-            statement.populate(\"movimentos\", function (err, statement) {\r\n+            statement.populate(\"movimentos\", function (err, finalStatement) {\r\n               if (err) {\r\n                 callback(err, null);\r\n               } else {\r\n-                callback(null, statement);\r\n+                callback(null, finalStatement);\r\n               }\r\n             });\r\n \r\n             callback(null, finalStatement);\r\n"
                },
                {
                    "date": 1669643822310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,15 +54,18 @@\n               newTransactions\r\n             );\r\n \r\n             //get the statement object, with the movimentos array filled with the transaction objects instead of the transaction ids\r\n-            statement.populate(\"movimentos\", function (err, finalStatement) {\r\n-              if (err) {\r\n-                callback(err, null);\r\n-              } else {\r\n-                callback(null, finalStatement);\r\n+            finalStatement.populate(\r\n+              \"movimentos\",\r\n+              function (err, finalStatement) {\r\n+                if (err) {\r\n+                  callback(err, null);\r\n+                } else {\r\n+                  callback(null, finalStatement);\r\n+                }\r\n               }\r\n-            });\r\n+            );\r\n \r\n             callback(null, finalStatement);\r\n           }\r\n         } else {\r\n"
                },
                {
                    "date": 1669643835084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,18 +54,8 @@\n               newTransactions\r\n             );\r\n \r\n             //get the statement object, with the movimentos array filled with the transaction objects instead of the transaction ids\r\n-            finalStatement.populate(\r\n-              \"movimentos\",\r\n-              function (err, finalStatement) {\r\n-                if (err) {\r\n-                  callback(err, null);\r\n-                } else {\r\n-                  callback(null, finalStatement);\r\n-                }\r\n-              }\r\n-            );\r\n \r\n             callback(null, finalStatement);\r\n           }\r\n         } else {\r\n"
                },
                {
                    "date": 1669644207475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n var mongoose = require(\"mongoose\");\r\n var statement = require(\"../models/statement\");\r\n-\r\n+var MongoQuery = require(\"../config/query.js\");\r\n var Transactions = require(\"./transactionsController\");\r\n \r\n var Statements = module.exports;\r\n \r\n@@ -26,8 +26,18 @@\n     }\r\n   });\r\n };\r\n \r\n+//get the statements with the movimentos array filled with the transaction objects instead of the transaction ids\r\n+Statements.getFullStatement = function (iban, callback) {\r\n+  statement\r\n+    .findOne\r\n+    // { IBAN: iban }\r\n+    ()\r\n+    \r\n+\r\n+\r\n+\r\n Statements.initStatement = function (iban, callback) {\r\n   try {\r\n     Statements.getStatementByIBAN(iban, function (err, statement) {\r\n       if (err) {\r\n"
                },
                {
                    "date": 1669644282475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,15 +29,29 @@\n \r\n //get the statements with the movimentos array filled with the transaction objects instead of the transaction ids\r\n Statements.getFullStatement = function (iban, callback) {\r\n   statement\r\n-    .findOne\r\n-    // { IBAN: iban }\r\n-    ()\r\n-    \r\n+    .aggregate([\r\n+      {\r\n+        $lookup: {\r\n+          from: \"transactions\",\r\n+          localField: \"movimentos\",\r\n+          foreignField: \"_id\",\r\n+          as: \"movimentos\",\r\n+        },\r\n+      },\r\n+      { $unwind: \"$movimentos\" },\r\n+      { $match: { IBAN: iban } },\r\n+    ])\r\n+    .exec(function (err, statement) {\r\n+      if (err) {\r\n+        callback(err, null);\r\n+      } else {\r\n+        callback(null, statement);\r\n+      }\r\n+    });\r\n+};\r\n \r\n-\r\n-\r\n Statements.initStatement = function (iban, callback) {\r\n   try {\r\n     Statements.getStatementByIBAN(iban, function (err, statement) {\r\n       if (err) {\r\n"
                },
                {
                    "date": 1669644307668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,8 +77,15 @@\n               iban,\r\n               newTransactions\r\n             );\r\n \r\n+            Statements.getFullStatement(iban, function (err, statement) {\r\n+              if (err) {\r\n+                callback(err, null);\r\n+              } else {\r\n+                callback(null, statement);\r\n+              }\r\n+            });\r\n             //get the statement object, with the movimentos array filled with the transaction objects instead of the transaction ids\r\n \r\n             callback(null, finalStatement);\r\n           }\r\n"
                },
                {
                    "date": 1669644328098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n               }\r\n             });\r\n             //get the statement object, with the movimentos array filled with the transaction objects instead of the transaction ids\r\n \r\n-            callback(null, finalStatement);\r\n+            callback(null, statement);\r\n           }\r\n         } else {\r\n           callback(null, statement);\r\n         }\r\n"
                },
                {
                    "date": 1669644408208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,18 +77,15 @@\n               iban,\r\n               newTransactions\r\n             );\r\n \r\n-            Statements.getFullStatement(iban, function (err, statement) {\r\n+            Statements.getFullStatement(iban, function (iban, statement) {\r\n               if (err) {\r\n                 callback(err, null);\r\n               } else {\r\n                 callback(null, statement);\r\n               }\r\n             });\r\n-            //get the statement object, with the movimentos array filled with the transaction objects instead of the transaction ids\r\n-\r\n-            callback(null, statement);\r\n           }\r\n         } else {\r\n           callback(null, statement);\r\n         }\r\n"
                },
                {
                    "date": 1669644419099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,8 +81,10 @@\n             Statements.getFullStatement(iban, function (iban, statement) {\r\n               if (err) {\r\n                 callback(err, null);\r\n               } else {\r\n+                console.log(\"fullStatement\");\r\n+                console.log(statement);\r\n                 callback(null, statement);\r\n               }\r\n             });\r\n           }\r\n"
                },
                {
                    "date": 1669644436833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,17 +77,9 @@\n               iban,\r\n               newTransactions\r\n             );\r\n \r\n-            Statements.getFullStatement(iban, function (iban, statement) {\r\n-              if (err) {\r\n-                callback(err, null);\r\n-              } else {\r\n-                console.log(\"fullStatement\");\r\n-                console.log(statement);\r\n-                callback(null, statement);\r\n-              }\r\n-            });\r\n+            callback(null, finalStatement);\r\n           }\r\n         } else {\r\n           callback(null, statement);\r\n         }\r\n"
                },
                {
                    "date": 1669644456044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,10 +67,8 @@\n               newTransactions[i],\r\n               function (err, transaction) {\r\n                 if (err) {\r\n                   callback(err, null);\r\n-                } else {\r\n-                  newTransactions[i] = transaction._id;\r\n                 }\r\n               }\r\n             );\r\n             var finalStatement = Statements.createStatement(\r\n"
                },
                {
                    "date": 1669644478798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,8 +67,10 @@\n               newTransactions[i],\r\n               function (err, transaction) {\r\n                 if (err) {\r\n                   callback(err, null);\r\n+                } else {\r\n+                  newTransactions[i] = transaction;\r\n                 }\r\n               }\r\n             );\r\n             var finalStatement = Statements.createStatement(\r\n"
                },
                {
                    "date": 1669644495927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n               function (err, transaction) {\r\n                 if (err) {\r\n                   callback(err, null);\r\n                 } else {\r\n-                  newTransactions[i] = transaction;\r\n+                  newTransactions[i] = transaction._id;\r\n                 }\r\n               }\r\n             );\r\n             var finalStatement = Statements.createStatement(\r\n"
                },
                {
                    "date": 1669644566032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,30 +28,12 @@\n };\r\n \r\n //get the statements with the movimentos array filled with the transaction objects instead of the transaction ids\r\n Statements.getFullStatement = function (iban, callback) {\r\n-  statement\r\n-    .aggregate([\r\n-      {\r\n-        $lookup: {\r\n-          from: \"transactions\",\r\n-          localField: \"movimentos\",\r\n-          foreignField: \"_id\",\r\n-          as: \"movimentos\",\r\n-        },\r\n-      },\r\n-      { $unwind: \"$movimentos\" },\r\n-      { $match: { IBAN: iban } },\r\n-    ])\r\n-    .exec(function (err, statement) {\r\n-      if (err) {\r\n-        callback(err, null);\r\n-      } else {\r\n-        callback(null, statement);\r\n-      }\r\n-    });\r\n-};\r\n \r\n+\r\n+\r\n+\r\n Statements.initStatement = function (iban, callback) {\r\n   try {\r\n     Statements.getStatementByIBAN(iban, function (err, statement) {\r\n       if (err) {\r\n@@ -77,10 +59,20 @@\n               iban,\r\n               newTransactions\r\n             );\r\n \r\n-            callback(null, finalStatement);\r\n+            //return the statement with the transactions objects instead of the ids\r\n+            Statements.getFullStatement(iban, function (err, statement) {\r\n+              if (err) {\r\n+                callback(err, null);\r\n+              } else {\r\n+                callback(null, statement);\r\n+              }\r\n+            });\r\n           }\r\n+\r\n+            //callback(null, finalStatement);\r\n+          }\r\n         } else {\r\n           callback(null, statement);\r\n         }\r\n       }\r\n"
                },
                {
                    "date": 1669644573320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,8 @@\n               } else {\r\n                 callback(null, statement);\r\n               }\r\n             });\r\n-          }\r\n \r\n             //callback(null, finalStatement);\r\n           }\r\n         } else {\r\n"
                },
                {
                    "date": 1669644578634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,8 @@\n                 callback(err, null);\r\n               } else {\r\n                 callback(null, statement);\r\n               }\r\n-            });\r\n \r\n             //callback(null, finalStatement);\r\n           }\r\n         } else {\r\n"
                },
                {
                    "date": 1669644588308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,8 +66,9 @@\n                 callback(err, null);\r\n               } else {\r\n                 callback(null, statement);\r\n               }\r\n+            });\r\n \r\n             //callback(null, finalStatement);\r\n           }\r\n         } else {\r\n"
                },
                {
                    "date": 1669644596384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,8 +67,9 @@\n               } else {\r\n                 callback(null, statement);\r\n               }\r\n             });\r\n+          }\r\n \r\n             //callback(null, finalStatement);\r\n           }\r\n         } else {\r\n"
                },
                {
                    "date": 1669644605594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,8 +68,17 @@\n                 callback(null, statement);\r\n               }\r\n             });\r\n           }\r\n+        } else {\r\n+          callback(null, statement);\r\n+        }\r\n+      }\r\n+    });\r\n+  } catch (err) {\r\n+    callback(err, null);\r\n+  }\r\n+};\r\n \r\n             //callback(null, finalStatement);\r\n           }\r\n         } else {\r\n"
                },
                {
                    "date": 1669644674783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,26 +59,16 @@\n               iban,\r\n               newTransactions\r\n             );\r\n \r\n-            //return the statement with the transactions objects instead of the ids\r\n+            //aggregate the transactions, getting the movimentos array filled with the transaction objects instead of the transaction ids\r\n             Statements.getFullStatement(iban, function (err, statement) {\r\n               if (err) {\r\n                 callback(err, null);\r\n               } else {\r\n                 callback(null, statement);\r\n               }\r\n             });\r\n-          }\r\n-        } else {\r\n-          callback(null, statement);\r\n-        }\r\n-      }\r\n-    });\r\n-  } catch (err) {\r\n-    callback(err, null);\r\n-  }\r\n-};\r\n \r\n             //callback(null, finalStatement);\r\n           }\r\n         } else {\r\n"
                },
                {
                    "date": 1669644685169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n                 callback(null, statement);\r\n               }\r\n             });\r\n \r\n-            //callback(null, finalStatement);\r\n+            callback(null, finalStatement);\r\n           }\r\n         } else {\r\n           callback(null, statement);\r\n         }\r\n"
                },
                {
                    "date": 1669644692394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n                 callback(null, statement);\r\n               }\r\n             });\r\n \r\n-            callback(null, finalStatement);\r\n+           \r\n           }\r\n         } else {\r\n           callback(null, statement);\r\n         }\r\n"
                },
                {
                    "date": 1669644733346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,8 +54,9 @@\n                   newTransactions[i] = transaction._id;\r\n                 }\r\n               }\r\n             );\r\n+          }\r\n             var finalStatement = Statements.createStatement(\r\n               iban,\r\n               newTransactions\r\n             );\r\n@@ -78,8 +79,9 @@\n     });\r\n   } catch (err) {\r\n     callback(err, null);\r\n   }\r\n+  \r\n };\r\n \r\n Statements.createStatement = function (iban, movimentos, callback) {\r\n   var newStatement = new statement({\r\n"
                },
                {
                    "date": 1669644748018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,9 @@\n \r\n \r\n \r\n \r\n+\r\n Statements.initStatement = function (iban, callback) {\r\n   try {\r\n     Statements.getStatementByIBAN(iban, function (err, statement) {\r\n       if (err) {\r\n@@ -54,24 +55,14 @@\n                   newTransactions[i] = transaction._id;\r\n                 }\r\n               }\r\n             );\r\n-          }\r\n             var finalStatement = Statements.createStatement(\r\n               iban,\r\n               newTransactions\r\n             );\r\n \r\n-            //aggregate the transactions, getting the movimentos array filled with the transaction objects instead of the transaction ids\r\n-            Statements.getFullStatement(iban, function (err, statement) {\r\n-              if (err) {\r\n-                callback(err, null);\r\n-              } else {\r\n-                callback(null, statement);\r\n-              }\r\n-            });\r\n-\r\n-           \r\n+            callback(null, finalStatement);\r\n           }\r\n         } else {\r\n           callback(null, statement);\r\n         }\r\n@@ -79,9 +70,8 @@\n     });\r\n   } catch (err) {\r\n     callback(err, null);\r\n   }\r\n-  \r\n };\r\n \r\n Statements.createStatement = function (iban, movimentos, callback) {\r\n   var newStatement = new statement({\r\n"
                },
                {
                    "date": 1669644815424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,28 +51,28 @@\n               function (err, transaction) {\r\n                 if (err) {\r\n                   callback(err, null);\r\n                 } else {\r\n-                  newTransactions[i] = transaction._id;\r\n+                  newTransactions[i] = transaction;\r\n                 }\r\n               }\r\n             );\r\n-            var finalStatement = Statements.createStatement(\r\n-              iban,\r\n-              newTransactions\r\n-            );\r\n-\r\n-            callback(null, finalStatement);\r\n           }\r\n-        } else {\r\n-          callback(null, statement);\r\n-        }\r\n-      }\r\n-    });\r\n-  } catch (err) {\r\n-    callback(err, null);\r\n-  }\r\n-};\r\n+          //calculate the balance, if the transaction is a debit, subtract the value, if it is a credit, add the value\r\n+          var balance = 0;\r\n+          for (var i = 0; i < newTransactions.length; i++) {\r\n+            if (newTransactions[i].type == \"Débito\") {\r\n+              balance -= newTransactions[i].value;\r\n+            } else {\r\n+              balance += newTransactions[i].value;\r\n+            }\r\n+          }\r\n+          var newStatement = new statement({\r\n+            _id: new mongoose.Types.ObjectId(),\r\n+            banco: BankList[Math.floor(Math.random() * BankList.length)],\r\n+            IBAN: iban,\r\n+            movimentos: newTransactions,\r\n+            saldo: 0,\r\n \r\n Statements.createStatement = function (iban, movimentos, callback) {\r\n   var newStatement = new statement({\r\n     _id: new mongoose.Types.ObjectId(),\r\n"
                },
                {
                    "date": 1669644837082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,26 @@\n             _id: new mongoose.Types.ObjectId(),\r\n             banco: BankList[Math.floor(Math.random() * BankList.length)],\r\n             IBAN: iban,\r\n             movimentos: newTransactions,\r\n-            saldo: 0,\r\n+            saldo: balance,\r\n+          });\r\n+          newStatement.save(function (err, statement) {\r\n+            if (err) {\r\n+              callback(err, null);\r\n+            } else {\r\n+              callback(null, statement);\r\n+            }\r\n+          });\r\n+        } else {\r\n+          callback(null, statement);\r\n+        }\r\n+      }\r\n+    });\r\n+  } catch (err) {\r\n+    callback(err, null);\r\n+  }\r\n+};\r\n \r\n Statements.createStatement = function (iban, movimentos, callback) {\r\n   var newStatement = new statement({\r\n     _id: new mongoose.Types.ObjectId(),\r\n"
                },
                {
                    "date": 1669644848934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,14 +27,9 @@\n   });\r\n };\r\n \r\n //get the statements with the movimentos array filled with the transaction objects instead of the transaction ids\r\n-Statements.getFullStatement = function (iban, callback) {\r\n \r\n-\r\n-\r\n-\r\n-\r\n Statements.initStatement = function (iban, callback) {\r\n   try {\r\n     Statements.getStatementByIBAN(iban, function (err, statement) {\r\n       if (err) {\r\n@@ -89,25 +84,8 @@\n     callback(err, null);\r\n   }\r\n };\r\n \r\n-Statements.createStatement = function (iban, movimentos, callback) {\r\n-  var newStatement = new statement({\r\n-    _id: new mongoose.Types.ObjectId(),\r\n-    banco: BankList[Math.floor(Math.random() * BankList.length)],\r\n-    IBAN: iban,\r\n-    movimentos: movimentos,\r\n-    saldo: 0,\r\n-  });\r\n-  newStatement.save(function (err, statement) {\r\n-    if (err) {\r\n-      callback(err, null);\r\n-    } else {\r\n-      callback(null, statement);\r\n-    }\r\n-  });\r\n-};\r\n-\r\n //get statement with 20% chance of creating 1,2 or 3 new transactions and push them to the statement\r\n Statements.getUpdatedStatement = function (iban, callback) {\r\n   Statements.getStatementByIBAN(iban, function (err, statement) {\r\n     if (err) {\r\n"
                },
                {
                    "date": 1669644936952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,30 @@\n   });\r\n };\r\n \r\n //get the statements with the movimentos array filled with the transaction objects instead of the transaction ids\r\n+Statements.getFullStatement = function (iban, callback) {\r\n+  statement\r\n+    .aggregate([\r\n+      {\r\n+        $lookup: {\r\n+          from: \"transactions\",\r\n+          localField: \"movimentos\",\r\n+          foreignField: \"_id\",\r\n+          as: \"movimentos\",\r\n+        },\r\n+      },\r\n+      { $unwind: \"$movimentos\" },\r\n+      { $match: { IBAN: iban } },\r\n+    ])\r\n+    .exec(function (err, statement) {\r\n+      if (err) {\r\n+        callback(err, null);\r\n+      } else {\r\n+        callback(null, statement);\r\n+      }\r\n+    });\r\n+};\r\n \r\n Statements.initStatement = function (iban, callback) {\r\n   try {\r\n     Statements.getStatementByIBAN(iban, function (err, statement) {\r\n@@ -46,36 +68,19 @@\n               function (err, transaction) {\r\n                 if (err) {\r\n                   callback(err, null);\r\n                 } else {\r\n-                  newTransactions[i] = transaction;\r\n+                  newTransactions[i] = transaction._id;\r\n                 }\r\n               }\r\n             );\r\n+            var finalStatement = Statements.createStatement(\r\n+              iban,\r\n+              newTransactions\r\n+            );\r\n+\r\n+            callback(null, finalStatement);\r\n           }\r\n-          //calculate the balance, if the transaction is a debit, subtract the value, if it is a credit, add the value\r\n-          var balance = 0;\r\n-          for (var i = 0; i < newTransactions.length; i++) {\r\n-            if (newTransactions[i].type == \"Débito\") {\r\n-              balance -= newTransactions[i].value;\r\n-            } else {\r\n-              balance += newTransactions[i].value;\r\n-            }\r\n-          }\r\n-          var newStatement = new statement({\r\n-            _id: new mongoose.Types.ObjectId(),\r\n-            banco: BankList[Math.floor(Math.random() * BankList.length)],\r\n-            IBAN: iban,\r\n-            movimentos: newTransactions,\r\n-            saldo: balance,\r\n-          });\r\n-          newStatement.save(function (err, statement) {\r\n-            if (err) {\r\n-              callback(err, null);\r\n-            } else {\r\n-              callback(null, statement);\r\n-            }\r\n-          });\r\n         } else {\r\n           callback(null, statement);\r\n         }\r\n       }\r\n@@ -84,8 +89,25 @@\n     callback(err, null);\r\n   }\r\n };\r\n \r\n+Statements.createStatement = function (iban, movimentos, callback) {\r\n+  var newStatement = new statement({\r\n+    _id: new mongoose.Types.ObjectId(),\r\n+    banco: BankList[Math.floor(Math.random() * BankList.length)],\r\n+    IBAN: iban,\r\n+    movimentos: movimentos,\r\n+    saldo: 0,\r\n+  });\r\n+  newStatement.save(function (err, statement) {\r\n+    if (err) {\r\n+      callback(err, null);\r\n+    } else {\r\n+      callback(null, statement);\r\n+    }\r\n+  });\r\n+};\r\n+\r\n //get statement with 20% chance of creating 1,2 or 3 new transactions and push them to the statement\r\n Statements.getUpdatedStatement = function (iban, callback) {\r\n   Statements.getStatementByIBAN(iban, function (err, statement) {\r\n     if (err) {\r\n"
                },
                {
                    "date": 1669644947290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,32 +26,8 @@\n     }\r\n   });\r\n };\r\n \r\n-//get the statements with the movimentos array filled with the transaction objects instead of the transaction ids\r\n-Statements.getFullStatement = function (iban, callback) {\r\n-  statement\r\n-    .aggregate([\r\n-      {\r\n-        $lookup: {\r\n-          from: \"transactions\",\r\n-          localField: \"movimentos\",\r\n-          foreignField: \"_id\",\r\n-          as: \"movimentos\",\r\n-        },\r\n-      },\r\n-      { $unwind: \"$movimentos\" },\r\n-      { $match: { IBAN: iban } },\r\n-    ])\r\n-    .exec(function (err, statement) {\r\n-      if (err) {\r\n-        callback(err, null);\r\n-      } else {\r\n-        callback(null, statement);\r\n-      }\r\n-    });\r\n-};\r\n-\r\n Statements.initStatement = function (iban, callback) {\r\n   try {\r\n     Statements.getStatementByIBAN(iban, function (err, statement) {\r\n       if (err) {\r\n"
                },
                {
                    "date": 1669645694458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,15 +48,15 @@\n                   newTransactions[i] = transaction._id;\r\n                 }\r\n               }\r\n             );\r\n-            var finalStatement = Statements.createStatement(\r\n-              iban,\r\n-              newTransactions\r\n-            );\r\n+          }\r\n+          var finalStatement = Statements.createStatement(\r\n+            iban,\r\n+            newTransactions\r\n+          );\r\n \r\n-            callback(null, finalStatement);\r\n-          }\r\n+          callback(null, finalStatement);\r\n         } else {\r\n           callback(null, statement);\r\n         }\r\n       }\r\n"
                },
                {
                    "date": 1669645737076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,8 +63,9 @@\n     });\r\n   } catch (err) {\r\n     callback(err, null);\r\n   }\r\n+  console.log(\"StatementCreatedAndSone\");\r\n };\r\n \r\n Statements.createStatement = function (iban, movimentos, callback) {\r\n   var newStatement = new statement({\r\n"
                },
                {
                    "date": 1669645762077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,25 +66,8 @@\n   }\r\n   console.log(\"StatementCreatedAndSone\");\r\n };\r\n \r\n-Statements.createStatement = function (iban, movimentos, callback) {\r\n-  var newStatement = new statement({\r\n-    _id: new mongoose.Types.ObjectId(),\r\n-    banco: BankList[Math.floor(Math.random() * BankList.length)],\r\n-    IBAN: iban,\r\n-    movimentos: movimentos,\r\n-    saldo: 0,\r\n-  });\r\n-  newStatement.save(function (err, statement) {\r\n-    if (err) {\r\n-      callback(err, null);\r\n-    } else {\r\n-      callback(null, statement);\r\n-    }\r\n-  });\r\n-};\r\n-\r\n //get statement with 20% chance of creating 1,2 or 3 new transactions and push them to the statement\r\n Statements.getUpdatedStatement = function (iban, callback) {\r\n   Statements.getStatementByIBAN(iban, function (err, statement) {\r\n     if (err) {\r\n"
                },
                {
                    "date": 1669645789006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,8 +45,9 @@\n                 if (err) {\r\n                   callback(err, null);\r\n                 } else {\r\n                   newTransactions[i] = transaction._id;\r\n+                  callback(null, transaction);\r\n                 }\r\n               }\r\n             );\r\n           }\r\n"
                },
                {
                    "date": 1669646209916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,49 +26,39 @@\n     }\r\n   });\r\n };\r\n \r\n+\r\n Statements.initStatement = function (iban, callback) {\r\n-  try {\r\n-    Statements.getStatementByIBAN(iban, function (err, statement) {\r\n+  var newStatement = new statement({\r\n+    _id: new mongoose.Types.ObjectId(),\r\n+    banco: BankList[Math.floor(Math.random() * BankList.length)],\r\n+    IBAN: iban,\r\n+    movimentos: [],\r\n+    saldo: 0,\r\n+  });\r\n+\r\n+  //Generate 10 random transactions and add them to the statement\r\n+  for (var i = 0; i < 10; i++) {\r\n+    var transaction = Transactions.newTransaction(newStatement._id);\r\n+    newStatement.movimentos.push(transaction._id);\r\n+    if (transaction.type == \"Débito\") {\r\n+      newStatement.saldo -= transaction.value;\r\n+    }\r\n+    if (transaction.type == \"Crédito\") {\r\n+      newStatement.saldo += transaction.value;\r\n+    }\r\n+    newStatement.saldo += transaction.value;\r\n+    Transactions.create(transaction, function (err, transaction) {\r\n       if (err) {\r\n-        callback(err, null);\r\n-      } else {\r\n-        if (statement == null) {\r\n-          var newTransactions = [];\r\n-          for (var i = 0; i < 10; i++) {\r\n-            newTransactions.push(Transactions.newTransaction());\r\n-          }\r\n-          for (var i = 0; i < newTransactions.length; i++) {\r\n-            Transactions.create(\r\n-              newTransactions[i],\r\n-              function (err, transaction) {\r\n-                if (err) {\r\n-                  callback(err, null);\r\n-                } else {\r\n-                  newTransactions[i] = transaction._id;\r\n-                  callback(null, transaction);\r\n-                }\r\n-              }\r\n-            );\r\n-          }\r\n-          var finalStatement = Statements.createStatement(\r\n-            iban,\r\n-            newTransactions\r\n-          );\r\n-\r\n-          callback(null, finalStatement);\r\n-        } else {\r\n-          callback(null, statement);\r\n-        }\r\n+        console.log(err);\r\n       }\r\n     });\r\n-  } catch (err) {\r\n-    callback(err, null);\r\n   }\r\n-  console.log(\"StatementCreatedAndSone\");\r\n-};\r\n+  //calculate the balance, if the the transaction is a debit, subtract the value from the balance, if it is a credit, add the value to the balance\r\n+    \r\n \r\n+\r\n //get statement with 20% chance of creating 1,2 or 3 new transactions and push them to the statement\r\n Statements.getUpdatedStatement = function (iban, callback) {\r\n   Statements.getStatementByIBAN(iban, function (err, statement) {\r\n     if (err) {\r\n"
                },
                {
                    "date": 1669646246082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,18 @@\n         console.log(err);\r\n       }\r\n     });\r\n   }\r\n-  //calculate the balance, if the the transaction is a debit, subtract the value from the balance, if it is a credit, add the value to the balance\r\n+  //save the statement\r\n+  newStatement.save(function (err, statement) {\r\n+    if (err) {\r\n+      console.log(err);\r\n+      callback(err, null);\r\n+    } else {\r\n+      console.log(\"Statement created\");\r\n+      callback(null, statement);\r\n+    }\r\n+  });\r\n     \r\n \r\n \r\n //get statement with 20% chance of creating 1,2 or 3 new transactions and push them to the statement\r\n"
                },
                {
                    "date": 1669646252731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n       }\r\n     });\r\n   }\r\n   //save the statement\r\n-  newStatement.save(function (err, statement) {\r\n+  newStatement.save(function (err, newStatement) {\r\n     if (err) {\r\n       console.log(err);\r\n       callback(err, null);\r\n     } else {\r\n"
                },
                {
                    "date": 1669646273087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,13 +47,18 @@\n     if (transaction.type == \"Crédito\") {\r\n       newStatement.saldo += transaction.value;\r\n     }\r\n     newStatement.saldo += transaction.value;\r\n-    Transactions.create(transaction, function (err, transaction) {\r\n-      if (err) {\r\n-        console.log(err);\r\n-      }\r\n-    });\r\n+    try {\r\n+      Transactions.create(transaction, function (err, transaction) {\r\n+        if (err) {\r\n+          console.log(err);\r\n+        }\r\n+      });\r\n+    }\r\n+    catch (err) {\r\n+      console.log(err);\r\n+    }\r\n   }\r\n   //save the statement\r\n   newStatement.save(function (err, newStatement) {\r\n     if (err) {\r\n"
                },
                {
                    "date": 1669646285474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,8 @@\n     }\r\n   });\r\n };\r\n \r\n-\r\n Statements.initStatement = function (iban, callback) {\r\n   var newStatement = new statement({\r\n     _id: new mongoose.Types.ObjectId(),\r\n     banco: BankList[Math.floor(Math.random() * BankList.length)],\r\n@@ -53,25 +52,28 @@\n         if (err) {\r\n           console.log(err);\r\n         }\r\n       });\r\n-    }\r\n-    catch (err) {\r\n+    } catch (err) {\r\n       console.log(err);\r\n     }\r\n   }\r\n-  //save the statement\r\n-  newStatement.save(function (err, newStatement) {\r\n-    if (err) {\r\n-      console.log(err);\r\n-      callback(err, null);\r\n-    } else {\r\n-      console.log(\"Statement created\");\r\n-      callback(null, statement);\r\n-    }\r\n-  });\r\n-    \r\n \r\n+  try {\r\n+    //save the statement\r\n+    newStatement.save(function (err, newStatement) {\r\n+      if (err) {\r\n+        console.log(err);\r\n+        callback(err, null);\r\n+      } else {\r\n+        console.log(\"Statement created\");\r\n+        callback(null, statement);\r\n+      }\r\n+    });\r\n+  } catch (err) {\r\n+    console.log(err);\r\n+  }\r\n+};\r\n \r\n //get statement with 20% chance of creating 1,2 or 3 new transactions and push them to the statement\r\n Statements.getUpdatedStatement = function (iban, callback) {\r\n   Statements.getStatementByIBAN(iban, function (err, statement) {\r\n"
                },
                {
                    "date": 1669646313608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,42 +34,45 @@\n     IBAN: iban,\r\n     movimentos: [],\r\n     saldo: 0,\r\n   });\r\n-\r\n-  //Generate 10 random transactions and add them to the statement\r\n-  for (var i = 0; i < 10; i++) {\r\n-    var transaction = Transactions.newTransaction(newStatement._id);\r\n-    newStatement.movimentos.push(transaction._id);\r\n-    if (transaction.type == \"Débito\") {\r\n-      newStatement.saldo -= transaction.value;\r\n-    }\r\n-    if (transaction.type == \"Crédito\") {\r\n+  try {\r\n+    //Generate 10 random transactions and add them to the statement\r\n+    for (var i = 0; i < 10; i++) {\r\n+      var transaction = Transactions.newTransaction(newStatement._id);\r\n+      newStatement.movimentos.push(transaction._id);\r\n+      if (transaction.type == \"Débito\") {\r\n+        newStatement.saldo -= transaction.value;\r\n+      }\r\n+      if (transaction.type == \"Crédito\") {\r\n+        newStatement.saldo += transaction.value;\r\n+      }\r\n       newStatement.saldo += transaction.value;\r\n+      try {\r\n+        Transactions.create(transaction, function (err, transaction) {\r\n+          if (err) {\r\n+            console.log(err);\r\n+          }\r\n+        });\r\n+      } catch (err) {\r\n+        console.log(err);\r\n+      }\r\n     }\r\n-    newStatement.saldo += transaction.value;\r\n+\r\n     try {\r\n-      Transactions.create(transaction, function (err, transaction) {\r\n+      //save the statement\r\n+      newStatement.save(function (err, newStatement) {\r\n         if (err) {\r\n           console.log(err);\r\n+          callback(err, null);\r\n+        } else {\r\n+          console.log(\"Statement created\");\r\n+          callback(null, statement);\r\n         }\r\n       });\r\n     } catch (err) {\r\n       console.log(err);\r\n     }\r\n-  }\r\n-\r\n-  try {\r\n-    //save the statement\r\n-    newStatement.save(function (err, newStatement) {\r\n-      if (err) {\r\n-        console.log(err);\r\n-        callback(err, null);\r\n-      } else {\r\n-        console.log(\"Statement created\");\r\n-        callback(null, statement);\r\n-      }\r\n-    });\r\n   } catch (err) {\r\n     console.log(err);\r\n   }\r\n };\r\n"
                },
                {
                    "date": 1669646647988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,36 @@\n   \"Banco Best\",\r\n   \"Bankinter\",\r\n ];\r\n \r\n+//Get the Statement, with 20% probability of creating 1,2,3 or 4 new transactions, when retrieving the statement, it should also return the transactions object\r\n+Statements.getStatement = function (iban, callback) {\r\n+  var query = MongoQuery.queryStatement(iban);\r\n+  statement\r\n+    .findOne\r\n+    // query\r\n+    ()\r\n+    .populate(\"movimentos\")\r\n+    .exec(function (err, statement) {\r\n+      if (err) {\r\n+        callback(err);\r\n+      } else {\r\n+        if (statement == null) {\r\n+          callback(null, null);\r\n+        } else {\r\n+          var random = Math.floor(Math.random() * 5);\r\n+          if (random == 0) {\r\n+            var numTrans = Math.floor(Math.random() * 4) + 1;\r\n+            for (var i = 0; i < numTrans; i++) {\r\n+              Transactions.newTransaction(statement._id);\r\n+            }\r\n+          }\r\n+          callback(null, statement);\r\n+        }\r\n+      }\r\n+    });\r\n+};\r\n+\r\n //Get Statement by IBAN\r\n Statements.getStatementByIBAN = function (iban, callback) {\r\n   statement.findOne({ IBAN: iban }, function (err, statement) {\r\n     if (err) {\r\n@@ -71,31 +99,9 @@\n       });\r\n     } catch (err) {\r\n       console.log(err);\r\n     }\r\n+    callback(null, newStatement);\r\n   } catch (err) {\r\n     console.log(err);\r\n   }\r\n };\r\n-\r\n-//get statement with 20% chance of creating 1,2 or 3 new transactions and push them to the statement\r\n-Statements.getUpdatedStatement = function (iban, callback) {\r\n-  Statements.getStatementByIBAN(iban, function (err, statement) {\r\n-    if (err) {\r\n-      callback(err, null);\r\n-    } else {\r\n-      var probability = Math.random();\r\n-      if (probability < 0.2) {\r\n-        var newTransactions = [];\r\n-        var n = Math.floor(Math.random() * 3) + 1;\r\n-        for (var i = 0; i < n; i++) {\r\n-          newTransactions.push(Transactions.newTransaction());\r\n-        }\r\n-        statement.movimentos.push(newTransactions);\r\n-        statement.save();\r\n-        callback(null, statement);\r\n-      } else {\r\n-        callback(null, statement);\r\n-      }\r\n-    }\r\n-  });\r\n-};\r\n"
                },
                {
                    "date": 1669646712972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,29 +17,26 @@\n ];\r\n \r\n //Get the Statement, with 20% probability of creating 1,2,3 or 4 new transactions, when retrieving the statement, it should also return the transactions object\r\n Statements.getStatement = function (iban, callback) {\r\n-  var query = MongoQuery.queryStatement(iban);\r\n   statement\r\n-    .findOne\r\n-    // query\r\n-    ()\r\n+    .findOne({ IBAN: iban })\r\n     .populate(\"movimentos\")\r\n     .exec(function (err, statement) {\r\n       if (err) {\r\n         callback(err);\r\n       } else {\r\n-        if (statement == null) {\r\n-          callback(null, null);\r\n-        } else {\r\n-          var random = Math.floor(Math.random() * 5);\r\n-          if (random == 0) {\r\n-            var numTrans = Math.floor(Math.random() * 4) + 1;\r\n-            for (var i = 0; i < numTrans; i++) {\r\n+        if (statement) {\r\n+          var random = Math.random();\r\n+          if (random < 0.2) {\r\n+            var numTransactions = Math.floor(Math.random() * 4) + 1;\r\n+            for (var i = 0; i < numTransactions; i++) {\r\n               Transactions.newTransaction(statement._id);\r\n             }\r\n           }\r\n           callback(null, statement);\r\n+        } else {\r\n+          callback(null, null);\r\n         }\r\n       }\r\n     });\r\n };\r\n"
                },
                {
                    "date": 1669647305633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n         callback(err);\r\n       } else {\r\n         if (statement) {\r\n           var random = Math.random();\r\n-          if (random < 0.2) {\r\n+          if (random < 0.9) {\r\n             var numTransactions = Math.floor(Math.random() * 4) + 1;\r\n             for (var i = 0; i < numTransactions; i++) {\r\n               Transactions.newTransaction(statement._id);\r\n             }\r\n"
                },
                {
                    "date": 1669647359777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n           var random = Math.random();\r\n           if (random < 0.9) {\r\n             var numTransactions = Math.floor(Math.random() * 4) + 1;\r\n             for (var i = 0; i < numTransactions; i++) {\r\n-              Transactions.newTransaction(statement._id);\r\n+              Transactions.create(statement._id);\r\n             }\r\n           }\r\n           callback(null, statement);\r\n         } else {\r\n"
                },
                {
                    "date": 1669647375265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n           var random = Math.random();\r\n           if (random < 0.9) {\r\n             var numTransactions = Math.floor(Math.random() * 4) + 1;\r\n             for (var i = 0; i < numTransactions; i++) {\r\n-              Transactions.create(statement._id);\r\n+              Transactions.newTransaction(statement._id);\r\n             }\r\n           }\r\n           callback(null, statement);\r\n         } else {\r\n"
                },
                {
                    "date": 1669647452949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n         callback(err);\r\n       } else {\r\n         if (statement) {\r\n           var random = Math.random();\r\n+          console.log(random);\r\n           if (random < 0.9) {\r\n             var numTransactions = Math.floor(Math.random() * 4) + 1;\r\n             for (var i = 0; i < numTransactions; i++) {\r\n               Transactions.newTransaction(statement._id);\r\n"
                },
                {
                    "date": 1669647571726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,18 @@\n           console.log(random);\r\n           if (random < 0.9) {\r\n             var numTransactions = Math.floor(Math.random() * 4) + 1;\r\n             for (var i = 0; i < numTransactions; i++) {\r\n-              Transactions.newTransaction(statement._id);\r\n+              var trans =  Transactions.newTransaction(statement._id);\r\n+              try {\r\n+                Transactions.create(trans, function (err, transaction) {\r\n+                  if (err) {\r\n+                    console.log(err);\r\n+                  } else {\r\n+                    console.log(\"Transaction created\");\r\n+                  }\r\n+                });\r\n+              }\r\n             }\r\n           }\r\n           callback(null, statement);\r\n         } else {\r\n"
                },
                {
                    "date": 1669647804805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,25 +25,8 @@\n       if (err) {\r\n         callback(err);\r\n       } else {\r\n         if (statement) {\r\n-          var random = Math.random();\r\n-          console.log(random);\r\n-          if (random < 0.9) {\r\n-            var numTransactions = Math.floor(Math.random() * 4) + 1;\r\n-            for (var i = 0; i < numTransactions; i++) {\r\n-              var trans =  Transactions.newTransaction(statement._id);\r\n-              try {\r\n-                Transactions.create(trans, function (err, transaction) {\r\n-                  if (err) {\r\n-                    console.log(err);\r\n-                  } else {\r\n-                    console.log(\"Transaction created\");\r\n-                  }\r\n-                });\r\n-              }\r\n-            }\r\n-          }\r\n           callback(null, statement);\r\n         } else {\r\n           callback(null, null);\r\n         }\r\n"
                },
                {
                    "date": 1669649284562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,42 @@\n       }\r\n     });\r\n };\r\n \r\n+//create 1,2,3 or 4 new transactions, and update the statement\r\n+Statements.updateStatement = function (iban, callback) {\r\n+  var newTransactions = [];\r\n+  var newTransactionsCount = Math.floor(Math.random() * 4) + 1;\r\n+  for (var i = 0; i < newTransactionsCount; i++) {\r\n+    newTransactions.push(Transactions.newTransaction(iban));\r\n+    Transactions.create(newTransactions[i], function (err, transaction) {\r\n+      if (err) {\r\n+        callback(err);\r\n+      }\r\n+    });\r\n+    Statements.findOneAndUpdate(\r\n+      { IBAN: iban },\r\n+      { $push: { movimentos: newTransactions[i]._id } },\r\n+      function (err, statement) {\r\n+        if (err) {\r\n+          callback(err);\r\n+        }\r\n+      }\r\n+    );\r\n+    Statements.getStatement(iban, function (err, statement) {\r\n+      if (err) {\r\n+        callback(err);\r\n+      }\r\n+      else {\r\n+        callback(null, statement);\r\n+      }\r\n+    });\r\n+    \r\n+  }\r\n+  \r\n+\r\n+\r\n+\r\n //Get Statement by IBAN\r\n Statements.getStatementByIBAN = function (iban, callback) {\r\n   statement.findOne({ IBAN: iban }, function (err, statement) {\r\n     if (err) {\r\n"
                },
                {
                    "date": 1669649306187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,22 +53,18 @@\n           callback(err);\r\n         }\r\n       }\r\n     );\r\n-    Statements.getStatement(iban, function (err, statement) {\r\n-      if (err) {\r\n-        callback(err);\r\n-      }\r\n-      else {\r\n-        callback(null, statement);\r\n-      }\r\n-    });\r\n-    \r\n   }\r\n-  \r\n+  Statements.getStatement(iban, function (err, statement) {\r\n+    if (err) {\r\n+      callback(err);\r\n+    } else {\r\n+      callback(null, statement);\r\n+    }\r\n+  });\r\n+};\r\n \r\n-\r\n-\r\n //Get Statement by IBAN\r\n Statements.getStatementByIBAN = function (iban, callback) {\r\n   statement.findOne({ IBAN: iban }, function (err, statement) {\r\n     if (err) {\r\n"
                },
                {
                    "date": 1669649384698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n       if (err) {\r\n         callback(err);\r\n       }\r\n     });\r\n-    Statements.findOneAndUpdate(\r\n+    Statement.findOneAndUpdate(\r\n       { IBAN: iban },\r\n       { $push: { movimentos: newTransactions[i]._id } },\r\n       function (err, statement) {\r\n         if (err) {\r\n"
                },
                {
                    "date": 1669649400635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n var mongoose = require(\"mongoose\");\r\n-var statement = require(\"../models/statement\");\r\n+var Statement = require(\"../models/statement\");\r\n var MongoQuery = require(\"../config/query.js\");\r\n var Transactions = require(\"./transactionsController\");\r\n \r\n var Statements = module.exports;\r\n@@ -17,10 +17,9 @@\n ];\r\n \r\n //Get the Statement, with 20% probability of creating 1,2,3 or 4 new transactions, when retrieving the statement, it should also return the transactions object\r\n Statements.getStatement = function (iban, callback) {\r\n-  statement\r\n-    .findOne({ IBAN: iban })\r\n+  Statement.findOne({ IBAN: iban })\r\n     .populate(\"movimentos\")\r\n     .exec(function (err, statement) {\r\n       if (err) {\r\n         callback(err);\r\n"
                },
                {
                    "date": 1669649420716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n       }\r\n     });\r\n };\r\n \r\n-//create 1,2,3 or 4 new transactions, and update the statement\r\n+//create 1,2,3 or 4 new transactions, and update the Statement\r\n Statements.updateStatement = function (iban, callback) {\r\n   var newTransactions = [];\r\n   var newTransactionsCount = Math.floor(Math.random() * 4) + 1;\r\n   for (var i = 0; i < newTransactionsCount; i++) {\r\n@@ -46,45 +46,45 @@\n     });\r\n     Statement.findOneAndUpdate(\r\n       { IBAN: iban },\r\n       { $push: { movimentos: newTransactions[i]._id } },\r\n-      function (err, statement) {\r\n+      function (err, Statement) {\r\n         if (err) {\r\n           callback(err);\r\n         }\r\n       }\r\n     );\r\n   }\r\n-  Statements.getStatement(iban, function (err, statement) {\r\n+  Statements.getStatement(iban, function (err, Statement) {\r\n     if (err) {\r\n       callback(err);\r\n     } else {\r\n-      callback(null, statement);\r\n+      callback(null, Statement);\r\n     }\r\n   });\r\n };\r\n \r\n //Get Statement by IBAN\r\n Statements.getStatementByIBAN = function (iban, callback) {\r\n-  statement.findOne({ IBAN: iban }, function (err, statement) {\r\n+  Statement.findOne({ IBAN: iban }, function (err, Statement) {\r\n     if (err) {\r\n       callback(err, null);\r\n     } else {\r\n-      callback(null, statement);\r\n+      callback(null, Statement);\r\n     }\r\n   });\r\n };\r\n \r\n Statements.initStatement = function (iban, callback) {\r\n-  var newStatement = new statement({\r\n+  var newStatement = new Statement({\r\n     _id: new mongoose.Types.ObjectId(),\r\n     banco: BankList[Math.floor(Math.random() * BankList.length)],\r\n     IBAN: iban,\r\n     movimentos: [],\r\n     saldo: 0,\r\n   });\r\n   try {\r\n-    //Generate 10 random transactions and add them to the statement\r\n+    //Generate 10 random transactions and add them to the Statement\r\n     for (var i = 0; i < 10; i++) {\r\n       var transaction = Transactions.newTransaction(newStatement._id);\r\n       newStatement.movimentos.push(transaction._id);\r\n       if (transaction.type == \"Débito\") {\r\n@@ -105,16 +105,16 @@\n       }\r\n     }\r\n \r\n     try {\r\n-      //save the statement\r\n+      //save the Statement\r\n       newStatement.save(function (err, newStatement) {\r\n         if (err) {\r\n           console.log(err);\r\n           callback(err, null);\r\n         } else {\r\n           console.log(\"Statement created\");\r\n-          callback(null, statement);\r\n+          callback(null, Statement);\r\n         }\r\n       });\r\n     } catch (err) {\r\n       console.log(err);\r\n"
                },
                {
                    "date": 1670078902447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,19 +35,27 @@\n \r\n //create 1,2,3 or 4 new transactions, and update the Statement\r\n Statements.updateStatement = function (iban, callback) {\r\n   var newTransactions = [];\r\n+  var newBalance = 0;\r\n   var newTransactionsCount = Math.floor(Math.random() * 4) + 1;\r\n   for (var i = 0; i < newTransactionsCount; i++) {\r\n-    newTransactions.push(Transactions.newTransaction(iban));\r\n+    var tmpTransaction = Transactions.newTransaction(iban);\r\n+    if (tmpTransaction.type == \"Débito\") {\r\n+      newBalance -= tmpTransaction.value;\r\n+    } else {\r\n+      newBalance += tmpTransaction.value;\r\n+    }\r\n+    newTransactions.push(tmpTransaction);\r\n     Transactions.create(newTransactions[i], function (err, transaction) {\r\n       if (err) {\r\n         callback(err);\r\n       }\r\n     });\r\n     Statement.findOneAndUpdate(\r\n       { IBAN: iban },\r\n       { $push: { movimentos: newTransactions[i]._id } },\r\n+      { $inc: { saldo: newBalance } },\r\n       function (err, Statement) {\r\n         if (err) {\r\n           callback(err);\r\n         }\r\n"
                },
                {
                    "date": 1670079053482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,8 @@\n     });\r\n     Statement.findOneAndUpdate(\r\n       { IBAN: iban },\r\n       { $push: { movimentos: newTransactions[i]._id } },\r\n-      { $inc: { saldo: newBalance } },\r\n       function (err, Statement) {\r\n         if (err) {\r\n           callback(err);\r\n         }\r\n"
                },
                {
                    "date": 1670079149045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,17 @@\n         }\r\n       }\r\n     );\r\n   }\r\n+  Statement.findOneAndUpdate(\r\n+    { IBAN: iban },\r\n+    { $inc: { saldo: newBalance } },\r\n+    function (err, Statement) {\r\n+      if (err) {\r\n+        callback(err);\r\n+      }\r\n+    }\r\n+  );\r\n   Statements.getStatement(iban, function (err, Statement) {\r\n     if (err) {\r\n       callback(err);\r\n     } else {\r\n"
                },
                {
                    "date": 1670079227181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,17 +60,9 @@\n         }\r\n       }\r\n     );\r\n   }\r\n-  Statement.findOneAndUpdate(\r\n-    { IBAN: iban },\r\n-    { $inc: { saldo: newBalance } },\r\n-    function (err, Statement) {\r\n-      if (err) {\r\n-        callback(err);\r\n-      }\r\n-    }\r\n-  );\r\n+  console.log(newBalance);\r\n   Statements.getStatement(iban, function (err, Statement) {\r\n     if (err) {\r\n       callback(err);\r\n     } else {\r\n"
                },
                {
                    "date": 1670079254497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,21 @@\n       }\r\n     );\r\n   }\r\n   console.log(newBalance);\r\n+\r\n+  //update the Statement balance\r\n+  Statement.findOneAndUpdate(\r\n+    { IBAN: iban },\r\n+    { $inc: { saldo: newBalance } },\r\n+    function (err, Statement) {\r\n+      if (err) {\r\n+        console.log(err);\r\n+        callback(err);\r\n+      }\r\n+    }\r\n+  );\r\n+\r\n   Statements.getStatement(iban, function (err, Statement) {\r\n     if (err) {\r\n       callback(err);\r\n     } else {\r\n"
                },
                {
                    "date": 1670079306572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n var mongoose = require(\"mongoose\");\r\n var Statement = require(\"../models/statement\");\r\n var MongoQuery = require(\"../config/query.js\");\r\n var Transactions = require(\"./transactionsController\");\r\n-\r\n+mongoose.set(\"useFindAndModify\", false);\r\n var Statements = module.exports;\r\n \r\n var BankList = [\r\n   \"Banco BPI\",\r\n"
                },
                {
                    "date": 1670079459791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,12 +107,12 @@\n     //Generate 10 random transactions and add them to the Statement\r\n     for (var i = 0; i < 10; i++) {\r\n       var transaction = Transactions.newTransaction(newStatement._id);\r\n       newStatement.movimentos.push(transaction._id);\r\n-      if (transaction.type == \"Débito\") {\r\n+      if (transaction.type == \"Debito\") {\r\n         newStatement.saldo -= transaction.value;\r\n       }\r\n-      if (transaction.type == \"Crédito\") {\r\n+      if (transaction.type == \"Credito\") {\r\n         newStatement.saldo += transaction.value;\r\n       }\r\n       newStatement.saldo += transaction.value;\r\n       try {\r\n"
                },
                {
                    "date": 1670079468050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n   var newBalance = 0;\r\n   var newTransactionsCount = Math.floor(Math.random() * 4) + 1;\r\n   for (var i = 0; i < newTransactionsCount; i++) {\r\n     var tmpTransaction = Transactions.newTransaction(iban);\r\n-    if (tmpTransaction.type == \"Débito\") {\r\n+    if (tmpTransaction.type == \"Debito\") {\r\n       newBalance -= tmpTransaction.value;\r\n     } else {\r\n       newBalance += tmpTransaction.value;\r\n     }\r\n"
                },
                {
                    "date": 1670079488896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,10 +109,9 @@\n       var transaction = Transactions.newTransaction(newStatement._id);\r\n       newStatement.movimentos.push(transaction._id);\r\n       if (transaction.type == \"Debito\") {\r\n         newStatement.saldo -= transaction.value;\r\n-      }\r\n-      if (transaction.type == \"Credito\") {\r\n+      } else if (transaction.type == \"Credito\") {\r\n         newStatement.saldo += transaction.value;\r\n       }\r\n       newStatement.saldo += transaction.value;\r\n       try {\r\n"
                },
                {
                    "date": 1670079571565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,9 +112,9 @@\n         newStatement.saldo -= transaction.value;\r\n       } else if (transaction.type == \"Credito\") {\r\n         newStatement.saldo += transaction.value;\r\n       }\r\n-      newStatement.saldo += transaction.value;\r\n+\r\n       try {\r\n         Transactions.create(transaction, function (err, transaction) {\r\n           if (err) {\r\n             console.log(err);\r\n"
                }
            ],
            "date": 1669632156261,
            "name": "Commit-0",
            "content": "var mongoose = require(\"mongoose\");\r\nvar statement = require(\"../models/statement\");\r\nvar Statements = module.exports;\r\nvar Transaction = require(\"../controllers/transactionsController\");\r\n\r\nvar BankList = [\r\n  \"Banco BPI\",\r\n  \"Caixa Geral de Depósitos\",\r\n  \"Banco Santander\",\r\n  \"Crédito Agrícola\",\r\n  \"Millennium BCP\",\r\n  \"Activo Bank\",\r\n  \"Banco Best\",\r\n  \"Bankinter\",\r\n];\r\n\r\nfunction generateStatement(iban) {\r\n  var actualBank = BankList[Math.floor(Math.random() * BankList.length)];\r\n  var movimentos = Transactions.createTransactions(10);\r\n  var saldo = 0;\r\n\r\n  for (var i = 0; i < movimentos.length; i++) {\r\n    if (movimentos[i].type == \"Crédito\") {\r\n      saldo += movimentos[i].value;\r\n    } else {\r\n      saldo -= movimentos[i].value;\r\n    }\r\n  }\r\n\r\n  var newStatement = {\r\n    _id: new mongoose.Types.ObjectId(),\r\n    banco: actualBank,\r\n    IBAN: iban,\r\n    movimentos: movimentos,\r\n    saldo: saldo,\r\n  };\r\n  return newStatement;\r\n}\r\n\r\n//Get Statement by IBAN\r\nStatements.getStatementByIBAN = function (iban, callback) {\r\n  try {\r\n    statement.findOne(\r\n      {\r\n        IBAN: iban,\r\n      },\r\n      function (err, statement) {\r\n        if (err) {\r\n          callback(err, null);\r\n        } else {\r\n          callback(null, statement);\r\n        }\r\n      }\r\n    );\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nStatements.createStatement = async function (iban, callback) {\r\n  statement.findOne({ IBAN: iban }, function (err, statement) {\r\n    if (err) {\r\n      newStatement = generateStatement(iban);\r\n      try {\r\n        newStatement.save();\r\n        callback(null, newStatement);\r\n      } catch (err) {\r\n        callback(err, null);\r\n      }\r\n    } else {\r\n      callback(null, statement);\r\n    }\r\n  });\r\n};\r\n\r\n//get statement with 20% chance of creating 1,2 or 3 new transactions and push them to the statement\r\nStatements.getUpdatedStatement = function (iban, callback) {\r\n  Statements.getStatementByIBAN(iban, function (err, statement) {\r\n    if (err) {\r\n      callback(err, null);\r\n    } else {\r\n      var probability = Math.random();\r\n      if (probability < 0.2) {\r\n        var newTransactions = [];\r\n        var n = Math.floor(Math.random() * 3) + 1;\r\n        for (var i = 0; i < n; i++) {\r\n          newTransactions.push(Transactions.newTransaction());\r\n        }\r\n        statement.movimentos.push(newTransactions);\r\n        statement.save();\r\n        callback(null, statement);\r\n      } else {\r\n        callback(null, statement);\r\n      }\r\n    }\r\n  });\r\n};\r\n"
        }
    ]
}