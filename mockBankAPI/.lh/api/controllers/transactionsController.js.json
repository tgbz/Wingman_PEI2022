{
    "sourceFile": "api/controllers/transactionsController.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 68,
            "patches": [
                {
                    "date": 1669637017288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1669637051859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,18 +67,18 @@\n     descricao = \"Pagamento de \" + categoria;\r\n     valor = Math.floor(Math.random() * 800);\r\n   }\r\n \r\n-  var moeda = moeda[Math.floor(Math.random() * moeda.length)];\r\n+  var moe = moeda[Math.floor(Math.random() * moeda.length)];\r\n \r\n   var transaction = {\r\n     _id: new mongoose.Types.ObjectId(),\r\n     date: data,\r\n     issuer: emissor,\r\n     description: descricao,\r\n     value: valor,\r\n     category: categoria,\r\n-    currency: moeda,\r\n+    currency: moe,\r\n   };\r\n   console.log(transaction);\r\n   return transaction;\r\n }\r\n"
                },
                {
                    "date": 1669637150083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,11 +83,12 @@\n   return transaction;\r\n }\r\n \r\n Transactions.createTransactions = async function (n) {\r\n-  var transaction = newTransaction();\r\n+  var trans = newTransaction();\r\n   try {\r\n-    await transaction.save();\r\n+    trans = await transaction.save();\r\n+    callback(null, trans);\r\n     console.log(\"Transaction created\");\r\n   } catch (err) {\r\n     console.log(err);\r\n   }\r\n"
                },
                {
                    "date": 1669637177976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,14 +82,15 @@\n   console.log(transaction);\r\n   return transaction;\r\n }\r\n \r\n-Transactions.createTransactions = async function (n) {\r\n-  var trans = newTransaction();\r\n-  try {\r\n-    trans = await transaction.save();\r\n-    callback(null, trans);\r\n-    console.log(\"Transaction created\");\r\n-  } catch (err) {\r\n-    console.log(err);\r\n-  }\r\n+//Create a single transaction\r\n+Transactions.createTransaction = function (callback) {\r\n+  var newTransaction = new transaction(newTransaction());\r\n+  newTransaction.save(function (err) {\r\n+    if (err) {\r\n+      callback(err, null);\r\n+    } else {\r\n+      callback(null, newTransaction);\r\n+    }\r\n+  });\r\n };\r\n"
                },
                {
                    "date": 1669637223156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,14 +83,16 @@\n   return transaction;\r\n }\r\n \r\n //Create a single transaction\r\n-Transactions.createTransaction = function (callback) {\r\n+Transactions.createTransaction = function (callback, n) {\r\n+  for (int i = 0; i < n; i++) {\r\n   var newTransaction = new transaction(newTransaction());\r\n   newTransaction.save(function (err) {\r\n     if (err) {\r\n       callback(err, null);\r\n     } else {\r\n       callback(null, newTransaction);\r\n     }\r\n   });\r\n+}\r\n };\r\n"
                },
                {
                    "date": 1669637229031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,15 +84,15 @@\n }\r\n \r\n //Create a single transaction\r\n Transactions.createTransaction = function (callback, n) {\r\n-  for (int i = 0; i < n; i++) {\r\n-  var newTransaction = new transaction(newTransaction());\r\n-  newTransaction.save(function (err) {\r\n-    if (err) {\r\n-      callback(err, null);\r\n-    } else {\r\n-      callback(null, newTransaction);\r\n-    }\r\n-  });\r\n-}\r\n+  for (const i = 0; i < n; i++) {\r\n+    var newTransaction = new transaction(newTransaction());\r\n+    newTransaction.save(function (err) {\r\n+      if (err) {\r\n+        callback(err, null);\r\n+      } else {\r\n+        callback(null, newTransaction);\r\n+      }\r\n+    });\r\n+  }\r\n };\r\n"
                },
                {
                    "date": 1669637237297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n   return transaction;\r\n }\r\n \r\n //Create a single transaction\r\n-Transactions.createTransaction = function (callback, n) {\r\n+Transactions.createTransactions = function (callback, n) {\r\n   for (const i = 0; i < n; i++) {\r\n     var newTransaction = new transaction(newTransaction());\r\n     newTransaction.save(function (err) {\r\n       if (err) {\r\n"
                },
                {
                    "date": 1669637391339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,47 +43,17 @@\n \r\n var moeda = [\"EUR\", \"USD\"];\r\n \r\n //Gerar uma transação aleatória\r\n-function newTransaction() {\r\n-  //random date and time between now and tomorrow\r\n-  var data = new Date(\r\n-    new Date().getTime() + Math.random() * 24 * 60 * 60 * 1000\r\n-  );\r\n+function newTransaction () {\r\n+  var tip = tipos[Math.floor(Math.random() * tipos.length)];\r\n+  if (tip == \"Débito\") {\r\n+    var emissor = emissoresDébito[Math.floor(Math.random() * emissoresDébito.length)];\r\n+  } else if (tip == \"Crédito\") {\r\n+    var emissor = emissoresCrédito[Math.floor(Math.random() * emissoresCrédito.length)];\r\n+  }\r\n   var categoria = categorias[Math.floor(Math.random() * categorias.length)];\r\n-  var emissor;\r\n-  if (categoria == \"Salário\") {\r\n-    emissor = \"Empregador\";\r\n-    tipo = \"Crédito\";\r\n-  } else {\r\n-    emissor =\r\n-      emissoresDébito[Math.floor(Math.random() * emissoresDébito.length)];\r\n-    tipo = tipos[Math.floor(Math.random() * tipos.length)];\r\n-  }\r\n-  var valor = 0;\r\n-  if (tipo == \"Crédito\") {\r\n-    descricao = \"Recebimento de \" + categoria;\r\n-    valor = Math.floor(Math.random() * 1000);\r\n-  } else {\r\n-    descricao = \"Pagamento de \" + categoria;\r\n-    valor = Math.floor(Math.random() * 800);\r\n-  }\r\n \r\n-  var moe = moeda[Math.floor(Math.random() * moeda.length)];\r\n-\r\n-  var transaction = {\r\n-    _id: new mongoose.Types.ObjectId(),\r\n-    date: data,\r\n-    issuer: emissor,\r\n-    description: descricao,\r\n-    value: valor,\r\n-    category: categoria,\r\n-    currency: moe,\r\n-  };\r\n-  console.log(transaction);\r\n-  return transaction;\r\n-}\r\n-\r\n //Create a single transaction\r\n Transactions.createTransactions = function (callback, n) {\r\n   for (const i = 0; i < n; i++) {\r\n     var newTransaction = new transaction(newTransaction());\r\n"
                },
                {
                    "date": 1669637424167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,17 +43,48 @@\n \r\n var moeda = [\"EUR\", \"USD\"];\r\n \r\n //Gerar uma transação aleatória\r\n-function newTransaction () {\r\n-  var tip = tipos[Math.floor(Math.random() * tipos.length)];\r\n-  if (tip == \"Débito\") {\r\n-    var emissor = emissoresDébito[Math.floor(Math.random() * emissoresDébito.length)];\r\n-  } else if (tip == \"Crédito\") {\r\n-    var emissor = emissoresCrédito[Math.floor(Math.random() * emissoresCrédito.length)];\r\n+function newTransaction() {\r\n+  //random date and time between now and tomorrow\r\n+  var data = new Date(\r\n+    new Date().getTime() + Math.random() * 24 * 60 * 60 * 1000\r\n+  );\r\n+  var categoria = categorias[Math.floor(Math.random() * categorias.length)];\r\n+  var emissor;\r\n+  var tipo = \"\";\r\n+  if (categoria == \"Salário\") {\r\n+    emissor = \"Empregador\";\r\n+    tipo = \"Crédito\";\r\n+  } else {\r\n+    emissor =\r\n+      emissoresDébito[Math.floor(Math.random() * emissoresDébito.length)];\r\n+    tipo = tipos[Math.floor(Math.random() * tipos.length)];\r\n   }\r\n-  var categoria = categorias[Math.floor(Math.random() * categorias.length)];\r\n+  var valor = 0;\r\n+  if (tipo == \"Crédito\") {\r\n+    descricao = \"Recebimento de \" + categoria;\r\n+    valor = Math.floor(Math.random() * 1000);\r\n+  } else {\r\n+    descricao = \"Pagamento de \" + categoria;\r\n+    valor = Math.floor(Math.random() * 800);\r\n+  }\r\n \r\n+  var moe = moeda[Math.floor(Math.random() * moeda.length)];\r\n+\r\n+  var transaction = {\r\n+    _id: new mongoose.Types.ObjectId(),\r\n+    date: data,\r\n+    issuer: emissor,\r\n+    description: descricao,\r\n+    value: valor,\r\n+    category: categoria,\r\n+    currency: moe,\r\n+  };\r\n+  console.log(transaction);\r\n+  return transaction;\r\n+}\r\n+\r\n //Create a single transaction\r\n Transactions.createTransactions = function (callback, n) {\r\n   for (const i = 0; i < n; i++) {\r\n     var newTransaction = new transaction(newTransaction());\r\n"
                },
                {
                    "date": 1669637474344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n     tipo = \"Crédito\";\r\n   } else {\r\n     emissor =\r\n       emissoresDébito[Math.floor(Math.random() * emissoresDébito.length)];\r\n-    tipo = tipos[Math.floor(Math.random() * tipos.length)];\r\n+    tipo = \"Débito\";\r\n   }\r\n   var valor = 0;\r\n   if (tipo == \"Crédito\") {\r\n     descricao = \"Recebimento de \" + categoria;\r\n"
                },
                {
                    "date": 1669637538924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,8 +54,11 @@\n   var tipo = \"\";\r\n   if (categoria == \"Salário\") {\r\n     emissor = \"Empregador\";\r\n     tipo = \"Crédito\";\r\n+  } else if (categoria == \"Outros\") {\r\n+    emissor = \"Outros\";\r\n+    tipo = \"Crédito\";\r\n   } else {\r\n     emissor =\r\n       emissoresDébito[Math.floor(Math.random() * emissoresDébito.length)];\r\n     tipo = \"Débito\";\r\n"
                },
                {
                    "date": 1669637567447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,37 +44,8 @@\n var moeda = [\"EUR\", \"USD\"];\r\n \r\n //Gerar uma transação aleatória\r\n function newTransaction() {\r\n-  //random date and time between now and tomorrow\r\n-  var data = new Date(\r\n-    new Date().getTime() + Math.random() * 24 * 60 * 60 * 1000\r\n-  );\r\n-  var categoria = categorias[Math.floor(Math.random() * categorias.length)];\r\n-  var emissor;\r\n-  var tipo = \"\";\r\n-  if (categoria == \"Salário\") {\r\n-    emissor = \"Empregador\";\r\n-    tipo = \"Crédito\";\r\n-  } else if (categoria == \"Outros\") {\r\n-    emissor = \"Outros\";\r\n-    tipo = \"Crédito\";\r\n-  } else {\r\n-    emissor =\r\n-      emissoresDébito[Math.floor(Math.random() * emissoresDébito.length)];\r\n-    tipo = \"Débito\";\r\n-  }\r\n-  var valor = 0;\r\n-  if (tipo == \"Crédito\") {\r\n-    descricao = \"Recebimento de \" + categoria;\r\n-    valor = Math.floor(Math.random() * 1000);\r\n-  } else {\r\n-    descricao = \"Pagamento de \" + categoria;\r\n-    valor = Math.floor(Math.random() * 800);\r\n-  }\r\n-\r\n-  var moe = moeda[Math.floor(Math.random() * moeda.length)];\r\n-\r\n   var transaction = {\r\n     _id: new mongoose.Types.ObjectId(),\r\n     date: data,\r\n     issuer: emissor,\r\n"
                },
                {
                    "date": 1669638597164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,8 @@\n var transaction = require(\"../models/transaction\");\r\n var Transactions = module.exports;\r\n \r\n var categorias = [\r\n-  \"Salário\",\r\n   \"Alimentação\",\r\n   \"Transportes\",\r\n   \"Lazer\",\r\n   \"Saúde\",\r\n@@ -29,9 +28,9 @@\n   \"Levantamento ATM\",\r\n ];\r\n \r\n var emissoresCrédito = [\r\n-  \"Salário\",\r\n+  \"Empregador\",\r\n   \"Prémio\",\r\n   \"Reembolso\",\r\n   \"Transferência de João\",\r\n   \"Transferência de Maria\",\r\n@@ -44,8 +43,35 @@\n var moeda = [\"EUR\", \"USD\"];\r\n \r\n //Gerar uma transação aleatória\r\n function newTransaction() {\r\n+  //Random date and time between now and yesterday\r\n+  var tmpCategoria;\r\n+  var tmpEmissor = \"\";\r\n+  var tmpMoeda = moeda[Math.floor(Math.random() * moeda.length)];\r\n+  var date = new Date();\r\n+  var yesterday = new Date();\r\n+  yesterday.setDate(yesterday.getDate() - 1);\r\n+  var randomDate = new Date(\r\n+    yesterday.getTime() + Math.random() * (date.getTime() - yesterday.getTime())\r\n+  );\r\n+\r\n+  var tmpTipo = tipos[Math.floor(Math.random() * tipos.length)];\r\n+\r\n+  if (tmpTipo == \"Débito\") {\r\n+    //tmp categoria excepto salário\r\n+    tmpCategoria = categorias[Math.floor(Math.random() * categorias.length)];\r\n+    while (tmpCategoria == \"Salário\") {\r\n+      tmpCategoria = categorias[Math.floor(Math.random() * categorias.length)];\r\n+    }\r\n+    tmpEmissor = emissoresDébito[Math.floor(Math.random() * emissoresDébito.length)];\r\n+  } else {\r\n+    tmpCategoria = categorias[Math.floor(Math.random() * categorias.length)];\r\n+    if (tmpCategoria == \"Salário\") {\r\n+      tmpEmissor = emissoresCrédito[0];\r\n+\r\n+  }\r\n+\r\n   var transaction = {\r\n     _id: new mongoose.Types.ObjectId(),\r\n     date: data,\r\n     issuer: emissor,\r\n"
                },
                {
                    "date": 1669638711842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,8 +46,9 @@\n function newTransaction() {\r\n   //Random date and time between now and yesterday\r\n   var tmpCategoria;\r\n   var tmpEmissor = \"\";\r\n+  var tmpDescricao = \"\";\r\n   var tmpMoeda = moeda[Math.floor(Math.random() * moeda.length)];\r\n   var date = new Date();\r\n   var yesterday = new Date();\r\n   yesterday.setDate(yesterday.getDate() - 1);\r\n@@ -55,27 +56,24 @@\n     yesterday.getTime() + Math.random() * (date.getTime() - yesterday.getTime())\r\n   );\r\n \r\n   var tmpTipo = tipos[Math.floor(Math.random() * tipos.length)];\r\n-\r\n   if (tmpTipo == \"Débito\") {\r\n-    //tmp categoria excepto salário\r\n     tmpCategoria = categorias[Math.floor(Math.random() * categorias.length)];\r\n-    while (tmpCategoria == \"Salário\") {\r\n-      tmpCategoria = categorias[Math.floor(Math.random() * categorias.length)];\r\n-    }\r\n-    tmpEmissor = emissoresDébito[Math.floor(Math.random() * emissoresDébito.length)];\r\n+    tmpEmissor =\r\n+      emissoresDébito[Math.floor(Math.random() * emissoresDébito.length)];\r\n+    tmpDescricao = tmpEmissor + \" - \" + tmpCategoria;\r\n   } else {\r\n-    tmpCategoria = categorias[Math.floor(Math.random() * categorias.length)];\r\n-    if (tmpCategoria == \"Salário\") {\r\n-      tmpEmissor = emissoresCrédito[0];\r\n-\r\n+    tmpCategoria = \"Recebimento\";\r\n+    tmpEmissor =\r\n+      emissoresCrédito[Math.floor(Math.random() * emissoresCrédito.length)];\r\n+    tmpDescricao = \"Recebimento de \" + tmpEmissor;\r\n   }\r\n \r\n   var transaction = {\r\n     _id: new mongoose.Types.ObjectId(),\r\n-    date: data,\r\n-    issuer: emissor,\r\n+    date: randomDate,\r\n+    issuer: tmpEmissor,\r\n     description: descricao,\r\n     value: valor,\r\n     category: categoria,\r\n     currency: moe,\r\n"
                },
                {
                    "date": 1669638731356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,10 +74,10 @@\n     date: randomDate,\r\n     issuer: tmpEmissor,\r\n     description: descricao,\r\n     value: valor,\r\n-    category: categoria,\r\n-    currency: moe,\r\n+    category: tmpCategoria,\r\n+    currency: tmpMoeda,\r\n   };\r\n   console.log(transaction);\r\n   return transaction;\r\n }\r\n"
                },
                {
                    "date": 1669638763105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,9 @@\n   //Random date and time between now and yesterday\r\n   var tmpCategoria;\r\n   var tmpEmissor = \"\";\r\n   var tmpDescricao = \"\";\r\n+  var tmpValor = 0;\r\n   var tmpMoeda = moeda[Math.floor(Math.random() * moeda.length)];\r\n   var date = new Date();\r\n   var yesterday = new Date();\r\n   yesterday.setDate(yesterday.getDate() - 1);\r\n@@ -57,13 +58,15 @@\n   );\r\n \r\n   var tmpTipo = tipos[Math.floor(Math.random() * tipos.length)];\r\n   if (tmpTipo == \"Débito\") {\r\n+    tmpValor = Math.floor(Math.random() * 500) + 1;\r\n     tmpCategoria = categorias[Math.floor(Math.random() * categorias.length)];\r\n     tmpEmissor =\r\n       emissoresDébito[Math.floor(Math.random() * emissoresDébito.length)];\r\n     tmpDescricao = tmpEmissor + \" - \" + tmpCategoria;\r\n   } else {\r\n+    tmpValor = Math.floor(Math.random() * 1000);\r\n     tmpCategoria = \"Recebimento\";\r\n     tmpEmissor =\r\n       emissoresCrédito[Math.floor(Math.random() * emissoresCrédito.length)];\r\n     tmpDescricao = \"Recebimento de \" + tmpEmissor;\r\n@@ -72,9 +75,9 @@\n   var transaction = {\r\n     _id: new mongoose.Types.ObjectId(),\r\n     date: randomDate,\r\n     issuer: tmpEmissor,\r\n-    description: descricao,\r\n+    description: tmpDescricao,\r\n     value: valor,\r\n     category: tmpCategoria,\r\n     currency: tmpMoeda,\r\n   };\r\n"
                },
                {
                    "date": 1669638773957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n     _id: new mongoose.Types.ObjectId(),\r\n     date: randomDate,\r\n     issuer: tmpEmissor,\r\n     description: tmpDescricao,\r\n-    value: valor,\r\n+    value: tmpValor,\r\n     category: tmpCategoria,\r\n     currency: tmpMoeda,\r\n   };\r\n   console.log(transaction);\r\n"
                },
                {
                    "date": 1669638809102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,8 +86,9 @@\n }\r\n \r\n //Create a single transaction\r\n Transactions.createTransactions = function (callback, n) {\r\n+  console.log(\"Creating\" + n + \"transactions\");\r\n   for (const i = 0; i < n; i++) {\r\n     var newTransaction = new transaction(newTransaction());\r\n     newTransaction.save(function (err) {\r\n       if (err) {\r\n"
                },
                {
                    "date": 1669638879307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n   return transaction;\r\n }\r\n \r\n //Create a single transaction\r\n-Transactions.createTransactions = function (callback, n) {\r\n+Transactions.createTransactions = function (n) {\r\n   console.log(\"Creating\" + n + \"transactions\");\r\n   for (const i = 0; i < n; i++) {\r\n     var newTransaction = new transaction(newTransaction());\r\n     newTransaction.save(function (err) {\r\n"
                },
                {
                    "date": 1669638909184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n \r\n var moeda = [\"EUR\", \"USD\"];\r\n \r\n //Gerar uma transação aleatória\r\n-function newTransaction() {\r\n+newTransaction = function () {\r\n   //Random date and time between now and yesterday\r\n   var tmpCategoria;\r\n   var tmpEmissor = \"\";\r\n   var tmpDescricao = \"\";\r\n@@ -82,9 +82,9 @@\n     currency: tmpMoeda,\r\n   };\r\n   console.log(transaction);\r\n   return transaction;\r\n-}\r\n+};\r\n \r\n //Create a single transaction\r\n Transactions.createTransactions = function (n) {\r\n   console.log(\"Creating\" + n + \"transactions\");\r\n"
                },
                {
                    "date": 1669638922097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n \r\n var moeda = [\"EUR\", \"USD\"];\r\n \r\n //Gerar uma transação aleatória\r\n-newTransaction = function () {\r\n+var newTransaction = function () {\r\n   //Random date and time between now and yesterday\r\n   var tmpCategoria;\r\n   var tmpEmissor = \"\";\r\n   var tmpDescricao = \"\";\r\n"
                },
                {
                    "date": 1669638935073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n \r\n var moeda = [\"EUR\", \"USD\"];\r\n \r\n //Gerar uma transação aleatória\r\n-var newTransaction = function () {\r\n+function newTransaction() {\r\n   //Random date and time between now and yesterday\r\n   var tmpCategoria;\r\n   var tmpEmissor = \"\";\r\n   var tmpDescricao = \"\";\r\n@@ -82,9 +82,9 @@\n     currency: tmpMoeda,\r\n   };\r\n   console.log(transaction);\r\n   return transaction;\r\n-};\r\n+}\r\n \r\n //Create a single transaction\r\n Transactions.createTransactions = function (n) {\r\n   console.log(\"Creating\" + n + \"transactions\");\r\n"
                },
                {
                    "date": 1669638944917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n //Create a single transaction\r\n Transactions.createTransactions = function (n) {\r\n   console.log(\"Creating\" + n + \"transactions\");\r\n   for (const i = 0; i < n; i++) {\r\n-    var newTransaction = new transaction(newTransaction());\r\n+    var newTransaction = newTransaction();\r\n     newTransaction.save(function (err) {\r\n       if (err) {\r\n         callback(err, null);\r\n       } else {\r\n"
                },
                {
                    "date": 1669638954622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n //Create a single transaction\r\n Transactions.createTransactions = function (n) {\r\n   console.log(\"Creating\" + n + \"transactions\");\r\n   for (const i = 0; i < n; i++) {\r\n-    var newTransaction = newTransaction();\r\n+    var newTransaction = this.newTransaction();\r\n     newTransaction.save(function (err) {\r\n       if (err) {\r\n         callback(err, null);\r\n       } else {\r\n"
                },
                {
                    "date": 1669638960357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n //Create a single transaction\r\n Transactions.createTransactions = function (n) {\r\n   console.log(\"Creating\" + n + \"transactions\");\r\n   for (const i = 0; i < n; i++) {\r\n-    var newTransaction = this.newTransaction();\r\n+    var newTransaction = newTransaction();\r\n     newTransaction.save(function (err) {\r\n       if (err) {\r\n         callback(err, null);\r\n       } else {\r\n"
                },
                {
                    "date": 1669639002108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,55 +42,53 @@\n \r\n var moeda = [\"EUR\", \"USD\"];\r\n \r\n //Gerar uma transação aleatória\r\n-function newTransaction() {\r\n-  //Random date and time between now and yesterday\r\n-  var tmpCategoria;\r\n-  var tmpEmissor = \"\";\r\n-  var tmpDescricao = \"\";\r\n-  var tmpValor = 0;\r\n-  var tmpMoeda = moeda[Math.floor(Math.random() * moeda.length)];\r\n-  var date = new Date();\r\n-  var yesterday = new Date();\r\n-  yesterday.setDate(yesterday.getDate() - 1);\r\n-  var randomDate = new Date(\r\n-    yesterday.getTime() + Math.random() * (date.getTime() - yesterday.getTime())\r\n-  );\r\n+function newTransaction() {}\r\n \r\n-  var tmpTipo = tipos[Math.floor(Math.random() * tipos.length)];\r\n-  if (tmpTipo == \"Débito\") {\r\n-    tmpValor = Math.floor(Math.random() * 500) + 1;\r\n-    tmpCategoria = categorias[Math.floor(Math.random() * categorias.length)];\r\n-    tmpEmissor =\r\n-      emissoresDébito[Math.floor(Math.random() * emissoresDébito.length)];\r\n-    tmpDescricao = tmpEmissor + \" - \" + tmpCategoria;\r\n-  } else {\r\n-    tmpValor = Math.floor(Math.random() * 1000);\r\n-    tmpCategoria = \"Recebimento\";\r\n-    tmpEmissor =\r\n-      emissoresCrédito[Math.floor(Math.random() * emissoresCrédito.length)];\r\n-    tmpDescricao = \"Recebimento de \" + tmpEmissor;\r\n-  }\r\n-\r\n-  var transaction = {\r\n-    _id: new mongoose.Types.ObjectId(),\r\n-    date: randomDate,\r\n-    issuer: tmpEmissor,\r\n-    description: tmpDescricao,\r\n-    value: tmpValor,\r\n-    category: tmpCategoria,\r\n-    currency: tmpMoeda,\r\n-  };\r\n-  console.log(transaction);\r\n-  return transaction;\r\n-}\r\n-\r\n //Create a single transaction\r\n Transactions.createTransactions = function (n) {\r\n   console.log(\"Creating\" + n + \"transactions\");\r\n   for (const i = 0; i < n; i++) {\r\n-    var newTransaction = newTransaction();\r\n+    //Random date and time between now and yesterday\r\n+    var tmpCategoria;\r\n+    var tmpEmissor = \"\";\r\n+    var tmpDescricao = \"\";\r\n+    var tmpValor = 0;\r\n+    var tmpMoeda = moeda[Math.floor(Math.random() * moeda.length)];\r\n+    var date = new Date();\r\n+    var yesterday = new Date();\r\n+    yesterday.setDate(yesterday.getDate() - 1);\r\n+    var randomDate = new Date(\r\n+      yesterday.getTime() +\r\n+        Math.random() * (date.getTime() - yesterday.getTime())\r\n+    );\r\n+\r\n+    var tmpTipo = tipos[Math.floor(Math.random() * tipos.length)];\r\n+    if (tmpTipo == \"Débito\") {\r\n+      tmpValor = Math.floor(Math.random() * 500) + 1;\r\n+      tmpCategoria = categorias[Math.floor(Math.random() * categorias.length)];\r\n+      tmpEmissor =\r\n+        emissoresDébito[Math.floor(Math.random() * emissoresDébito.length)];\r\n+      tmpDescricao = tmpEmissor + \" - \" + tmpCategoria;\r\n+    } else {\r\n+      tmpValor = Math.floor(Math.random() * 1000);\r\n+      tmpCategoria = \"Recebimento\";\r\n+      tmpEmissor =\r\n+        emissoresCrédito[Math.floor(Math.random() * emissoresCrédito.length)];\r\n+      tmpDescricao = \"Recebimento de \" + tmpEmissor;\r\n+    }\r\n+\r\n+    var transaction = {\r\n+      _id: new mongoose.Types.ObjectId(),\r\n+      date: randomDate,\r\n+      issuer: tmpEmissor,\r\n+      description: tmpDescricao,\r\n+      value: tmpValor,\r\n+      category: tmpCategoria,\r\n+      currency: tmpMoeda,\r\n+    };\r\n+    console.log(transaction);\r\n     newTransaction.save(function (err) {\r\n       if (err) {\r\n         callback(err, null);\r\n       } else {\r\n"
                },
                {
                    "date": 1669639012492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n       category: tmpCategoria,\r\n       currency: tmpMoeda,\r\n     };\r\n     console.log(transaction);\r\n-    newTransaction.save(function (err) {\r\n+    transaction.save(function (err) {\r\n       if (err) {\r\n         callback(err, null);\r\n       } else {\r\n         callback(null, newTransaction);\r\n"
                },
                {
                    "date": 1669639063789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,54 +42,56 @@\n \r\n var moeda = [\"EUR\", \"USD\"];\r\n \r\n //Gerar uma transação aleatória\r\n-function newTransaction() {}\r\n+function newTransaction() {\r\n+  //Random date and time between now and yesterday\r\n+  var tmpCategoria;\r\n+  var tmpEmissor = \"\";\r\n+  var tmpDescricao = \"\";\r\n+  var tmpValor = 0;\r\n+  var tmpMoeda = moeda[Math.floor(Math.random() * moeda.length)];\r\n+  var date = new Date();\r\n+  var yesterday = new Date();\r\n+  yesterday.setDate(yesterday.getDate() - 1);\r\n+  var randomDate = new Date(\r\n+    yesterday.getTime() + Math.random() * (date.getTime() - yesterday.getTime())\r\n+  );\r\n \r\n+  var tmpTipo = tipos[Math.floor(Math.random() * tipos.length)];\r\n+  if (tmpTipo == \"Débito\") {\r\n+    tmpValor = Math.floor(Math.random() * 500) + 1;\r\n+    tmpCategoria = categorias[Math.floor(Math.random() * categorias.length)];\r\n+    tmpEmissor =\r\n+      emissoresDébito[Math.floor(Math.random() * emissoresDébito.length)];\r\n+    tmpDescricao = tmpEmissor + \" - \" + tmpCategoria;\r\n+  } else {\r\n+    tmpValor = Math.floor(Math.random() * 1000);\r\n+    tmpCategoria = \"Recebimento\";\r\n+    tmpEmissor =\r\n+      emissoresCrédito[Math.floor(Math.random() * emissoresCrédito.length)];\r\n+    tmpDescricao = \"Recebimento de \" + tmpEmissor;\r\n+  }\r\n+\r\n+  var transaction = {\r\n+    _id: new mongoose.Types.ObjectId(),\r\n+    date: randomDate,\r\n+    issuer: tmpEmissor,\r\n+    description: tmpDescricao,\r\n+    value: tmpValor,\r\n+    category: tmpCategoria,\r\n+    currency: tmpMoeda,\r\n+  };\r\n+  console.log(transaction);\r\n+  return transaction;\r\n+}\r\n+\r\n //Create a single transaction\r\n-Transactions.createTransactions = function (n) {\r\n-  console.log(\"Creating\" + n + \"transactions\");\r\n+Transactions.createTransactions = function (callback, n) {\r\n+  console.log;\r\n   for (const i = 0; i < n; i++) {\r\n-    //Random date and time between now and yesterday\r\n-    var tmpCategoria;\r\n-    var tmpEmissor = \"\";\r\n-    var tmpDescricao = \"\";\r\n-    var tmpValor = 0;\r\n-    var tmpMoeda = moeda[Math.floor(Math.random() * moeda.length)];\r\n-    var date = new Date();\r\n-    var yesterday = new Date();\r\n-    yesterday.setDate(yesterday.getDate() - 1);\r\n-    var randomDate = new Date(\r\n-      yesterday.getTime() +\r\n-        Math.random() * (date.getTime() - yesterday.getTime())\r\n-    );\r\n-\r\n-    var tmpTipo = tipos[Math.floor(Math.random() * tipos.length)];\r\n-    if (tmpTipo == \"Débito\") {\r\n-      tmpValor = Math.floor(Math.random() * 500) + 1;\r\n-      tmpCategoria = categorias[Math.floor(Math.random() * categorias.length)];\r\n-      tmpEmissor =\r\n-        emissoresDébito[Math.floor(Math.random() * emissoresDébito.length)];\r\n-      tmpDescricao = tmpEmissor + \" - \" + tmpCategoria;\r\n-    } else {\r\n-      tmpValor = Math.floor(Math.random() * 1000);\r\n-      tmpCategoria = \"Recebimento\";\r\n-      tmpEmissor =\r\n-        emissoresCrédito[Math.floor(Math.random() * emissoresCrédito.length)];\r\n-      tmpDescricao = \"Recebimento de \" + tmpEmissor;\r\n-    }\r\n-\r\n-    var transaction = {\r\n-      _id: new mongoose.Types.ObjectId(),\r\n-      date: randomDate,\r\n-      issuer: tmpEmissor,\r\n-      description: tmpDescricao,\r\n-      value: tmpValor,\r\n-      category: tmpCategoria,\r\n-      currency: tmpMoeda,\r\n-    };\r\n-    console.log(transaction);\r\n-    transaction.save(function (err) {\r\n+    var newTransaction = new transaction(newTransaction());\r\n+    newTransaction.save(function (err) {\r\n       if (err) {\r\n         callback(err, null);\r\n       } else {\r\n         callback(null, newTransaction);\r\n"
                },
                {
                    "date": 1669639087117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,12 +86,11 @@\n }\r\n \r\n //Create a single transaction\r\n Transactions.createTransactions = function (callback, n) {\r\n-  console.log;\r\n   for (const i = 0; i < n; i++) {\r\n-    var newTransaction = new transaction(newTransaction());\r\n-    newTransaction.save(function (err) {\r\n+    var newTransaction = newTransaction();\r\n+    nt.save(function (err) {\r\n       if (err) {\r\n         callback(err, null);\r\n       } else {\r\n         callback(null, newTransaction);\r\n"
                },
                {
                    "date": 1669639117995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n   return transaction;\r\n }\r\n \r\n //Create a single transaction\r\n-Transactions.createTransactions = function (callback, n) {\r\n+Transactions.createTransactions = function (n, callback) {\r\n   for (const i = 0; i < n; i++) {\r\n     var newTransaction = newTransaction();\r\n     nt.save(function (err) {\r\n       if (err) {\r\n"
                },
                {
                    "date": 1669639152405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,16 +85,13 @@\n   return transaction;\r\n }\r\n \r\n //Create a single transaction\r\n-Transactions.createTransactions = function (n, callback) {\r\n-  for (const i = 0; i < n; i++) {\r\n-    var newTransaction = newTransaction();\r\n-    nt.save(function (err) {\r\n-      if (err) {\r\n-        callback(err, null);\r\n-      } else {\r\n-        callback(null, newTransaction);\r\n-      }\r\n-    });\r\n-  }\r\n+Transactions.create = function (transaction, callback) {\r\n+  transaction.save(function (err, transaction) {\r\n+    if (err) {\r\n+      callback(err, null);\r\n+    } else {\r\n+      callback(null, transaction);\r\n+    }\r\n+  });\r\n };\r\n"
                },
                {
                    "date": 1669639199369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,8 +84,25 @@\n   console.log(transaction);\r\n   return transaction;\r\n }\r\n \r\n+\r\n+Transactions.createTransactions = function (n) {\r\n+  var transactions = [];\r\n+  for (var i = 0; i < n; i++) {\r\n+    Transactions.createTransaction(function (err, transaction) {\r\n+      if (err) {\r\n+        console.log(err);\r\n+      } else {\r\n+        transactions.push(transaction);\r\n+      }\r\n+    });\r\n+    \r\n+  }\r\n+\r\n+\r\n+\r\n+\r\n //Create a single transaction\r\n Transactions.create = function (transaction, callback) {\r\n   transaction.save(function (err, transaction) {\r\n     if (err) {\r\n"
                },
                {
                    "date": 1669639207958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,8 @@\n   console.log(transaction);\r\n   return transaction;\r\n }\r\n \r\n-\r\n Transactions.createTransactions = function (n) {\r\n   var transactions = [];\r\n   for (var i = 0; i < n; i++) {\r\n     Transactions.createTransaction(function (err, transaction) {\r\n@@ -95,14 +94,12 @@\n       } else {\r\n         transactions.push(transaction);\r\n       }\r\n     });\r\n-    \r\n   }\r\n+  return transactions;\r\n+};\r\n \r\n-\r\n-\r\n-\r\n //Create a single transaction\r\n Transactions.create = function (transaction, callback) {\r\n   transaction.save(function (err, transaction) {\r\n     if (err) {\r\n"
                },
                {
                    "date": 1669639219754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,17 +87,16 @@\n \r\n Transactions.createTransactions = function (n) {\r\n   var transactions = [];\r\n   for (var i = 0; i < n; i++) {\r\n-    Transactions.createTransaction(function (err, transaction) {\r\n+    Transactions.create(function (err, transaction) {\r\n       if (err) {\r\n         console.log(err);\r\n       } else {\r\n         transactions.push(transaction);\r\n       }\r\n     });\r\n   }\r\n-  return transactions;\r\n };\r\n \r\n //Create a single transaction\r\n Transactions.create = function (transaction, callback) {\r\n"
                },
                {
                    "date": 1669639286361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,13 +98,12 @@\n   }\r\n };\r\n \r\n //Create a single transaction\r\n-Transactions.create = function (transaction, callback) {\r\n-  transaction.save(function (err, transaction) {\r\n-    if (err) {\r\n-      callback(err, null);\r\n-    } else {\r\n-      callback(null, transaction);\r\n-    }\r\n-  });\r\n+Transactions.create = async function (transaction, callback) {\r\n+  try {\r\n+    transaction = await transaction.save();\r\n+    callback(null, transaction);\r\n+  } catch (err) {\r\n+    callback(err, null);\r\n+  }\r\n };\r\n"
                },
                {
                    "date": 1669639316811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,8 +94,9 @@\n       } else {\r\n         transactions.push(transaction);\r\n       }\r\n     });\r\n+    console.log(transactions);\r\n   }\r\n };\r\n \r\n //Create a single transaction\r\n"
                },
                {
                    "date": 1669639328950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,10 +94,10 @@\n       } else {\r\n         transactions.push(transaction);\r\n       }\r\n     });\r\n-    console.log(transactions);\r\n   }\r\n+  console.log(transactions);\r\n };\r\n \r\n //Create a single transaction\r\n Transactions.create = async function (transaction, callback) {\r\n"
                },
                {
                    "date": 1669639358390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,10 @@\n \r\n Transactions.createTransactions = function (n) {\r\n   var transactions = [];\r\n   for (var i = 0; i < n; i++) {\r\n-    Transactions.create(function (err, transaction) {\r\n+    let tmpTransaction = newTransaction();\r\n+    Transactions.create(function (err, tmpTransaction) {\r\n       if (err) {\r\n         console.log(err);\r\n       } else {\r\n         transactions.push(transaction);\r\n"
                },
                {
                    "date": 1669639451342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,8 +103,9 @@\n //Create a single transaction\r\n Transactions.create = async function (transaction, callback) {\r\n   try {\r\n     transaction = await transaction.save();\r\n+    console.log(\"Transaction created\");\r\n     callback(null, transaction);\r\n   } catch (err) {\r\n     callback(err, null);\r\n   }\r\n"
                },
                {
                    "date": 1669639474626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,7 +106,8 @@\n     transaction = await transaction.save();\r\n     console.log(\"Transaction created\");\r\n     callback(null, transaction);\r\n   } catch (err) {\r\n+    console.log(err);\r\n     callback(err, null);\r\n   }\r\n };\r\n"
                },
                {
                    "date": 1669639669927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n var mongoose = require(\"mongoose\");\r\n-var transaction = require(\"../models/transaction\");\r\n+var Transaction = require(\"../models/transaction\");\r\n var Transactions = module.exports;\r\n \r\n var categorias = [\r\n   \"Alimentação\",\r\n@@ -102,9 +102,10 @@\n \r\n //Create a single transaction\r\n Transactions.create = async function (transaction, callback) {\r\n   try {\r\n-    transaction = await transaction.save();\r\n+    var trans = new transaction(transaction);\r\n+\r\n     console.log(\"Transaction created\");\r\n     callback(null, transaction);\r\n   } catch (err) {\r\n     console.log(err);\r\n"
                },
                {
                    "date": 1669639704128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,10 +102,10 @@\n \r\n //Create a single transaction\r\n Transactions.create = async function (transaction, callback) {\r\n   try {\r\n-    var trans = new transaction(transaction);\r\n-\r\n+    var trans = new Transaction(transaction);\r\n+    trans = await trans.save();\r\n     console.log(\"Transaction created\");\r\n     callback(null, transaction);\r\n   } catch (err) {\r\n     console.log(err);\r\n"
                },
                {
                    "date": 1669639776404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,10 +87,10 @@\n \r\n Transactions.createTransactions = function (n) {\r\n   var transactions = [];\r\n   for (var i = 0; i < n; i++) {\r\n-    let tmpTransaction = newTransaction();\r\n-    Transactions.create(function (err, tmpTransaction) {\r\n+    var transaction = newTransaction();\r\n+    Transactions.create(function (err, transaction) {\r\n       if (err) {\r\n         console.log(err);\r\n       } else {\r\n         transactions.push(transaction);\r\n"
                },
                {
                    "date": 1669639822523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,18 +87,19 @@\n \r\n Transactions.createTransactions = function (n) {\r\n   var transactions = [];\r\n   for (var i = 0; i < n; i++) {\r\n-    var transaction = newTransaction();\r\n-    Transactions.create(function (err, transaction) {\r\n-      if (err) {\r\n-        console.log(err);\r\n-      } else {\r\n-        transactions.push(transaction);\r\n-      }\r\n-    });\r\n+    var tmpTransaction = newTransaction();\r\n+    transactions.push(tmpTransaction);\r\n   }\r\n-  console.log(transactions);\r\n+\r\n+  Transaction.insertMany(transactions, function (err, docs) {\r\n+    if (err) {\r\n+      console.log(err);\r\n+    } else {\r\n+      console.log(\"Transactions inserted to DB: \" + docs);\r\n+    }\r\n+  });\r\n };\r\n \r\n //Create a single transaction\r\n Transactions.create = async function (transaction, callback) {\r\n"
                },
                {
                    "date": 1669640324283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,24 +84,8 @@\n   console.log(transaction);\r\n   return transaction;\r\n }\r\n \r\n-Transactions.createTransactions = function (n) {\r\n-  var transactions = [];\r\n-  for (var i = 0; i < n; i++) {\r\n-    var tmpTransaction = newTransaction();\r\n-    transactions.push(tmpTransaction);\r\n-  }\r\n-\r\n-  Transaction.insertMany(transactions, function (err, docs) {\r\n-    if (err) {\r\n-      console.log(err);\r\n-    } else {\r\n-      console.log(\"Transactions inserted to DB: \" + docs);\r\n-    }\r\n-  });\r\n-};\r\n-\r\n //Create a single transaction\r\n Transactions.create = async function (transaction, callback) {\r\n   try {\r\n     var trans = new Transaction(transaction);\r\n"
                },
                {
                    "date": 1669642096501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n \r\n var moeda = [\"EUR\", \"USD\"];\r\n \r\n //Gerar uma transação aleatória\r\n-function newTransaction() {\r\n+Transacions.newTransaction = function () {\r\n   //Random date and time between now and yesterday\r\n   var tmpCategoria;\r\n   var tmpEmissor = \"\";\r\n   var tmpDescricao = \"\";\r\n@@ -82,9 +82,9 @@\n     currency: tmpMoeda,\r\n   };\r\n   console.log(transaction);\r\n   return transaction;\r\n-}\r\n+};\r\n \r\n //Create a single transaction\r\n Transactions.create = async function (transaction, callback) {\r\n   try {\r\n"
                },
                {
                    "date": 1669642106113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n \r\n var moeda = [\"EUR\", \"USD\"];\r\n \r\n //Gerar uma transação aleatória\r\n-Transacions.newTransaction = function () {\r\n+Transactions.newTransaction = function () {\r\n   //Random date and time between now and yesterday\r\n   var tmpCategoria;\r\n   var tmpEmissor = \"\";\r\n   var tmpDescricao = \"\";\r\n"
                },
                {
                    "date": 1669642162560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,17 +71,17 @@\n       emissoresCrédito[Math.floor(Math.random() * emissoresCrédito.length)];\r\n     tmpDescricao = \"Recebimento de \" + tmpEmissor;\r\n   }\r\n \r\n-  var transaction = {\r\n+  var transaction = New Transaction({\r\n     _id: new mongoose.Types.ObjectId(),\r\n     date: randomDate,\r\n     issuer: tmpEmissor,\r\n     description: tmpDescricao,\r\n     value: tmpValor,\r\n     category: tmpCategoria,\r\n     currency: tmpMoeda,\r\n-  };\r\n+  });\r\n   console.log(transaction);\r\n   return transaction;\r\n };\r\n \r\n"
                },
                {
                    "date": 1669642172928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n       emissoresCrédito[Math.floor(Math.random() * emissoresCrédito.length)];\r\n     tmpDescricao = \"Recebimento de \" + tmpEmissor;\r\n   }\r\n \r\n-  var transaction = New Transaction({\r\n+  var transaction = new Transaction({\r\n     _id: new mongoose.Types.ObjectId(),\r\n     date: randomDate,\r\n     issuer: tmpEmissor,\r\n     description: tmpDescricao,\r\n"
                },
                {
                    "date": 1669645965810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n \r\n var moeda = [\"EUR\", \"USD\"];\r\n \r\n //Gerar uma transação aleatória\r\n-Transactions.newTransaction = function () {\r\n+Transactions.newTransaction = function (statementID) {\r\n   //Random date and time between now and yesterday\r\n   var tmpCategoria;\r\n   var tmpEmissor = \"\";\r\n   var tmpDescricao = \"\";\r\n"
                },
                {
                    "date": 1669645976879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,8 +79,9 @@\n     description: tmpDescricao,\r\n     value: tmpValor,\r\n     category: tmpCategoria,\r\n     currency: tmpMoeda,\r\n+    statement: statementID,\r\n   });\r\n   console.log(transaction);\r\n   return transaction;\r\n };\r\n"
                },
                {
                    "date": 1669646163685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,8 +73,9 @@\n   }\r\n \r\n   var transaction = new Transaction({\r\n     _id: new mongoose.Types.ObjectId(),\r\n+    tipo: tmpTipo,\r\n     date: randomDate,\r\n     issuer: tmpEmissor,\r\n     description: tmpDescricao,\r\n     value: tmpValor,\r\n"
                },
                {
                    "date": 1669646187311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n   }\r\n \r\n   var transaction = new Transaction({\r\n     _id: new mongoose.Types.ObjectId(),\r\n-    tipo: tmpTipo,\r\n+    type: tmpTipo,\r\n     date: randomDate,\r\n     issuer: tmpEmissor,\r\n     description: tmpDescricao,\r\n     value: tmpValor,\r\n"
                },
                {
                    "date": 1669646357946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n   );\r\n \r\n   var tmpTipo = tipos[Math.floor(Math.random() * tipos.length)];\r\n   if (tmpTipo == \"Débito\") {\r\n-    tmpValor = Math.floor(Math.random() * 500) + 1;\r\n+    tmpValor = Math.floor(Math.random() * 900) + 1;\r\n     tmpCategoria = categorias[Math.floor(Math.random() * categorias.length)];\r\n     tmpEmissor =\r\n       emissoresDébito[Math.floor(Math.random() * emissoresDébito.length)];\r\n     tmpDescricao = tmpEmissor + \" - \" + tmpCategoria;\r\n"
                },
                {
                    "date": 1669646508151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n var Transaction = require(\"../models/transaction\");\r\n var Transactions = module.exports;\r\n \r\n var categorias = [\r\n-  \"Alimentação\",\r\n+  \"Compras\",\r\n   \"Transportes\",\r\n   \"Lazer\",\r\n   \"Saúde\",\r\n   \"Educação\",\r\n"
                },
                {
                    "date": 1670077267009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,15 +2,230 @@\n var Transaction = require(\"../models/transaction\");\r\n var Transactions = module.exports;\r\n \r\n var categorias = [\r\n-  \"Compras\",\r\n-  \"Transportes\",\r\n-  \"Lazer\",\r\n+  \"Casa\",\r\n+  \"Mobilidade\",\r\n+  \"Desporto\",\r\n+  \"Impostos e Taxas\",\r\n+  \"Cultura e Hobbies\",\r\n+  \"Restaurantes e Cafés\",\r\n   \"Saúde\",\r\n+  \"Viagens\",\r\n   \"Educação\",\r\n-  \"Outros\",\r\n+  \"Sem Categoria\",\r\n+  \"Supermercados e Lojas\",\r\n+  \"Crédito e Comissões\",\r\n+  \"Seguros\",\r\n+  \"Entretenimento\",\r\n+  \"Investimentos\",\r\n ];\r\n+\r\n+var emissoresDebitoCasa = [\r\n+  \"EDP\",\r\n+  \"Vodafone\",\r\n+  \"MEO\",\r\n+  \"NOS\",\r\n+  \"Gás Natural\",\r\n+  \"Gold Energy\",\r\n+  \"Endesa\",\r\n+  \"Iberdrola\",\r\n+];\r\n+var emissoresDebitoMobilidade = [\r\n+  \"Uber\",\r\n+  \"STCP\",\r\n+  \"Metro Porto\",\r\n+  \"Metro Lisboa\",\r\n+  \"Rede Expressos\",\r\n+  \"CP\",\r\n+  \"Táxis Lisboa\",\r\n+];\r\n+var emissoresDébitoImpostosETaxas = [\r\n+  \"Finanças\",\r\n+  \"Segurança Social\",\r\n+  \"IRS\",\r\n+  \"IMI\",\r\n+];\r\n+var emissoresDébitoSeguros = [\r\n+  \"Seguro Social\",\r\n+  \"Seguro de Acidentes de Trabalho\",\r\n+  \"Seguro de Acidentes Pessoais\",\r\n+  \"Seguro de Saúde\",\r\n+  \"Seguro de Vida\",\r\n+  \"Seguro de Incapacidade Temporária\",\r\n+  \"Seguro de Incapacidade Permanente\",\r\n+  \"Seguro de Acidentes de Trabalho\",\r\n+  \"Seguro de Acidentes Pessoais\",\r\n+  \"Seguro de Saúde\",\r\n+  \"Seguro de Vida\",\r\n+  \"Seguro de Incapacidade Temporária\",\r\n+  \"Seguro de Incapacidade Permanente\",\r\n+  \"Seguro de Acidentes de Trabalho\",\r\n+  \"Seguro de Acidentes Pessoais\",\r\n+  \"Seguro de Saúde\",\r\n+  \"Seguro de Vida\",\r\n+  \"Seguro de Incapacidade Temporária\",\r\n+  \"Seguro de Incapacidade Permanente\",\r\n+  \"Seguro de Acidentes de Trabalho\",\r\n+  \"Seguro de Acidentes Pessoais\",\r\n+  \"Seguro de Saúde\",\r\n+  \"Seguro de Vida\",\r\n+  \"Seguro de Incapacidade Temporária\",\r\n+  \"Seguro de Incapacidade Permanente\",\r\n+  \"Seguro de Acidentes de Trabalho\",\r\n+  \"Seguro de Acidentes Pessoais\",\r\n+  \"Seguro de Saúde\",\r\n+  \"Seguro de Vida\",\r\n+  \"Seguro de Incapacidade Temporária\",\r\n+  \"Seguro de Incapacidade Permanente\",\r\n+  \"Seguro de Acidentes de Trabalho\",\r\n+  \"Seguro de Acidentes Pessoais\",\r\n+  \"Seguro de Saúde\",\r\n+  \"Seguro de Vida\",\r\n+  \"Seguro de Incapacidade Temporária\",\r\n+  \"Seguro de Incapacidade Permanente\",\r\n+  \"Seguro de Acidentes de Trabalho\",\r\n+  \"Seguro de Acidentes Pessoais\",\r\n+  \"Seguro de Saúde\",\r\n+  \"Seguro de Vida\",\r\n+  \"Seguro de Incapacidade Temporária\",\r\n+  \"Seguro de Incapacidade Permanente\",\r\n+  \"Seguro de Acidentes de Trabalho\",\r\n+  \"Seguro de Acidentes Pessoais\",\r\n+  \"Seguro de Saúde\",\r\n+  \"Seguro de Vida\",\r\n+  \"Seguro de Incapacidade Temporária\",\r\n+  \"Seguro de Incapacidade\",\r\n+];\r\n+\r\n+var emissoresDébitoCulturaEHobbies = [\r\n+  \"TNSJ\",\r\n+  \"Teatro Circo\",\r\n+  \"Nos Cinemas\",\r\n+  \"Rivoli\",\r\n+  \"Teatro Sá da Bandeira\",\r\n+  \"Politeama\",\r\n+  \"Museu Nacional\",\r\n+  \"Museu de Arte Contemporânea\",\r\n+  \"Museu do Fado\",\r\n+];\r\n+var emissoresDébitoRestaurantesECafés = [\r\n+  \"Tasca do Esteves\",\r\n+  \"McDonalds\",\r\n+  \"Burguer King\",\r\n+  \"Chimarrão\",\r\n+  \"Taco Bell\",\r\n+  \"Café do Luís\",\r\n+  \"Baroque\",\r\n+  \"Starbucks\",\r\n+  \"Costa Café\",\r\n+  \"Carpe Diem\",\r\n+  \"KFC\",\r\n+  \"Wok to Walk\",\r\n+  \"Poke House\",\r\n+  \"Italian Republic\",\r\n+  \"Pizza Hut\",\r\n+  \"H3\",\r\n+  \"Telepizza\",\r\n+  \"Dominos Pizza\",\r\n+];\r\n+var emissoresDébitoSaúde = [\r\n+  \"Hospital S.João\",\r\n+  \"Trofa Saúde\",\r\n+  \"Lusíadas\",\r\n+  \"Hospital da Luz\",\r\n+  \"Clínica do Esteves\",\r\n+  \"USF Braga Norte\",\r\n+];\r\n+var emissoresDébitoViagens = [\r\n+  \"Ryanair\",\r\n+  \"EasyJet\",\r\n+  \"Wiz Air\",\r\n+  \"Iberia\",\r\n+  \"Lufthansa\",\r\n+  \"Air France\",\r\n+  \"Air Emirates\",\r\n+  \"TAP Portugal\",\r\n+  \"Sata Internacional\",\r\n+  \"British Airways\",\r\n+  \"Delta Airlines\",\r\n+];\r\n+var emissoresDébitoEducação = [\r\n+  \"Universidade do Minho\",\r\n+  \"Universidade do Porto\",\r\n+  \"Porto Editora\",\r\n+  \"Areal Editores\",\r\n+  \"Texto Editores\",\r\n+  \"Livraria Lello\",\r\n+  \"Livraria Almedina\",\r\n+  \"Bertrand\",\r\n+  \"Fnac Portugal\",\r\n+  \"Universidade Nova de Lisboa\",\r\n+  \"Instituo Superior Técnico\",\r\n+];\r\n+var emissoresDébitoSupermercadosELojas = [\r\n+  \"Pingo Doce\",\r\n+  \"Continente\",\r\n+  \"Mercearia do Esteves\",\r\n+  \"Lidl\",\r\n+  \"E.leclerc\",\r\n+  \"Jumbo\",\r\n+  \"Auchan\",\r\n+  \"Mercadona\",\r\n+  \"Aldi\",\r\n+  \"Minipreço\",\r\n+  \"Mercearia da Tasquinha\",\r\n+];\r\n+var emissoresDébitoCréditoEComissões = [\r\n+  \"Cetelem\",\r\n+  \"BPI\",\r\n+  \"CGD\",\r\n+  \"Cofidis\",\r\n+  \"Wizink\",\r\n+];\r\n+var emissoresDébitoEntretenimento = [\r\n+  \"Netflix\",\r\n+  \"Spotify\",\r\n+  \"Apple Music\",\r\n+  \"Youtube Premium\",\r\n+  \"Google\",\r\n+  \"Apple\",\r\n+  \"Podcasts do Esteves\",\r\n+];\r\n+var emissoresDébitoDesporto = [\r\n+  \"Clube de Ténis\",\r\n+  \"Bpadel\",\r\n+  \"Clube de Hipismo\",\r\n+  \"Clube do Rio\",\r\n+  \"Clube de Golfe\",\r\n+  \"Aluguer campo futebol\",\r\n+  \"Ginásio Fitness\",\r\n+];\r\n+var emissoresDébitoInvestimentos = [\r\n+  \"XTB\",\r\n+  \"Binance\",\r\n+  \"MEXC\",\r\n+  \"Forex\",\r\n+  \"Rendas\",\r\n+  \"Etoro\",\r\n+];\r\n+\r\n+var emissoresCréditoFamilia = [\"Herança\"];\r\n+var emissoresCréditoSemCategoria = [\r\n+  \"Transferência Bancária de João\",\r\n+  \"Transferência Bancária de Joana\",\r\n+  \"Transferência MBWAY de Miguel\",\r\n+  \"Transferência bancária de Alberto\",\r\n+  \"Reembolso\",\r\n+];\r\n+var emissoresCréditoInvestimentos = [\r\n+  \"Criptomoedas\",\r\n+  \"Forex\",\r\n+  \"PPRs\",\r\n+  \"Dividendos\",\r\n+  \"Rendas\",\r\n+];\r\n+\r\n var tipos = [\"Débito\", \"Crédito\"];\r\n \r\n var emissoresDébito = [\r\n   \"Pingo Doce\",\r\n"
                },
                {
                    "date": 1670077282869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,12 @@\n var mongoose = require(\"mongoose\");\r\n var Transaction = require(\"../models/transaction\");\r\n var Transactions = module.exports;\r\n \r\n+var tipos = [\"Débito\", \"Crédito\"];\r\n+\r\n+var moeda = [\"EUR\", \"USD\"];\r\n+\r\n var categorias = [\r\n   \"Casa\",\r\n   \"Mobilidade\",\r\n   \"Desporto\",\r\n@@ -224,40 +228,8 @@\n   \"Dividendos\",\r\n   \"Rendas\",\r\n ];\r\n \r\n-var tipos = [\"Débito\", \"Crédito\"];\r\n-\r\n-var emissoresDébito = [\r\n-  \"Pingo Doce\",\r\n-  \"Continente\",\r\n-  \"Worten\",\r\n-  \"Cinemas\",\r\n-  \"PSP\",\r\n-  \"Finanças\",\r\n-  \"McDonalds\",\r\n-  \"Burger King\",\r\n-  \"PizzaHut\",\r\n-  \"FitnessUp\",\r\n-  \"Fnac\",\r\n-  \"Universidade do Minho\",\r\n-  \"Levantamento ATM\",\r\n-];\r\n-\r\n-var emissoresCrédito = [\r\n-  \"Empregador\",\r\n-  \"Prémio\",\r\n-  \"Reembolso\",\r\n-  \"Transferência de João\",\r\n-  \"Transferência de Maria\",\r\n-  \"Transferência de José\",\r\n-  \"Transferência de Ana\",\r\n-  \"Transferência de Pedro\",\r\n-  \"Transferência de Sofia\",\r\n-];\r\n-\r\n-var moeda = [\"EUR\", \"USD\"];\r\n-\r\n //Gerar uma transação aleatória\r\n Transactions.newTransaction = function (statementID) {\r\n   //Random date and time between now and yesterday\r\n   var tmpCategoria;\r\n"
                },
                {
                    "date": 1670077494518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -231,9 +231,9 @@\n \r\n //Gerar uma transação aleatória\r\n Transactions.newTransaction = function (statementID) {\r\n   //Random date and time between now and yesterday\r\n-  var tmpCategoria;\r\n+  var tmpCategoria = \"\";\r\n   var tmpEmissor = \"\";\r\n   var tmpDescricao = \"\";\r\n   var tmpValor = 0;\r\n   var tmpMoeda = moeda[Math.floor(Math.random() * moeda.length)];\r\n@@ -245,22 +245,104 @@\n   );\r\n \r\n   var tmpTipo = tipos[Math.floor(Math.random() * tipos.length)];\r\n   if (tmpTipo == \"Débito\") {\r\n-    tmpValor = Math.floor(Math.random() * 900) + 1;\r\n-    tmpCategoria = categorias[Math.floor(Math.random() * categorias.length)];\r\n-    tmpEmissor =\r\n-      emissoresDébito[Math.floor(Math.random() * emissoresDébito.length)];\r\n-    tmpDescricao = tmpEmissor + \" - \" + tmpCategoria;\r\n+    tmpCategoria =\r\n+      categoriasDébito[Math.floor(Math.random() * categoriasDébito.length)];\r\n+    switch (tmpCategoria) {\r\n+      case \"Cultura e Hobbies\":\r\n+        tmpEmissor =\r\n+          emissoresDébitoCulturaEHobbies[\r\n+            Math.floor(Math.random() * emissoresDébitoCulturaEHobbies.length)\r\n+          ];\r\n+        break;\r\n+      case \"Restaurantes e Cafés\":\r\n+        tmpEmissor =\r\n+          emissoresDébitoRestaurantesECafés[\r\n+            Math.floor(Math.random() * emissoresDébitoRestaurantesECafés.length)\r\n+          ];\r\n+        break;\r\n+      case \"Saúde\":\r\n+        tmpEmissor =\r\n+          emissoresDébitoSaúde[\r\n+            Math.floor(Math.random() * emissoresDébitoSaúde.length)\r\n+          ];\r\n+        break;\r\n+      case \"Viagens\":\r\n+        tmpEmissor =\r\n+          emissoresDébitoViagens[\r\n+            Math.floor(Math.random() * emissoresDébitoViagens.length)\r\n+          ];\r\n+        break;\r\n+      case \"Educação\":\r\n+        tmpEmissor =\r\n+          emissoresDébitoEducação[\r\n+            Math.floor(Math.random() * emissoresDébitoEducação.length)\r\n+          ];\r\n+        break;\r\n+      case \"Supermercados e Lojas\":\r\n+        tmpEmissor =\r\n+          emissoresDébitoSupermercadosELojas[\r\n+            Math.floor(\r\n+              Math.random() * emissoresDébitoSupermercadosELojas.length\r\n+            )\r\n+          ];\r\n+        break;\r\n+      case \"Crédito e Comissões\":\r\n+        tmpEmissor =\r\n+          emissoresDébitoCréditoEComissões[\r\n+            Math.floor(Math.random() * emissoresDébitoCréditoEComissões.length)\r\n+          ];\r\n+        break;\r\n+      case \"Entretenimento\":\r\n+        tmpEmissor =\r\n+          emissoresDébitoEntretenimento[\r\n+            Math.floor(Math.random() * emissoresDébitoEntretenimento.length)\r\n+          ];\r\n+        break;\r\n+      case \"Desporto\":\r\n+        tmpEmissor =\r\n+          emissoresDébitoDesporto[\r\n+            Math.floor(Math.random() * emissoresDébitoDesporto.length)\r\n+          ];\r\n+        break;\r\n+      case \"Investimentos\":\r\n+        tmpEmissor =\r\n+          emissoresDébitoInvestimentos[\r\n+            Math.floor(Math.random() * emissoresDébitoInvestimentos.length)\r\n+          ];\r\n+        break;\r\n+    }\r\n+    tmpValor = Math.floor(Math.random() * 1000) + 1;\r\n   } else {\r\n-    tmpValor = Math.floor(Math.random() * 1000);\r\n-    tmpCategoria = \"Recebimento\";\r\n-    tmpEmissor =\r\n-      emissoresCrédito[Math.floor(Math.random() * emissoresCrédito.length)];\r\n-    tmpDescricao = \"Recebimento de \" + tmpEmissor;\r\n+    tmpCategoria =\r\n+      categoriasCrédito[Math.floor(Math.random() * categoriasCrédito.length)];\r\n+    switch (tmpCategoria) {\r\n+      case \"Família\":\r\n+        tmpEmissor =\r\n+          emissoresCréditoFamilia[\r\n+            Math.floor(Math.random() * emissoresCréditoFamilia.length)\r\n+          ];\r\n+        break;\r\n+      case \"Sem Categoria\":\r\n+        tmpEmissor =\r\n+          emissoresCréditoSemCategoria[\r\n+            Math.floor(Math.random() * emissoresCréditoSemCategoria.length)\r\n+          ];\r\n+        break;\r\n+      case \"Investimentos\":\r\n+        tmpEmissor =\r\n+          emissoresCréditoInvestimentos[\r\n+            Math.floor(Math.random() * emissoresCréditoInvestimentos.length)\r\n+          ];\r\n+        break;\r\n+    }\r\n+    tmpValor = Math.floor(Math.random() * 1000) + 1;\r\n   }\r\n \r\n-  var transaction = new Transaction({\r\n+  tmpDescricao = tmpEmissor + \" - \" + tmpCategoria;\r\n+\r\n+  var tmpTransaction = {\r\n     _id: new mongoose.Types.ObjectId(),\r\n     type: tmpTipo,\r\n     date: randomDate,\r\n     issuer: tmpEmissor,\r\n@@ -268,10 +350,9 @@\n     value: tmpValor,\r\n     category: tmpCategoria,\r\n     currency: tmpMoeda,\r\n     statement: statementID,\r\n-  });\r\n-  console.log(transaction);\r\n+  };\r\n   return transaction;\r\n };\r\n \r\n //Create a single transaction\r\n"
                },
                {
                    "date": 1670077520217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -340,9 +340,9 @@\n   }\r\n \r\n   tmpDescricao = tmpEmissor + \" - \" + tmpCategoria;\r\n \r\n-  var tmpTransaction = {\r\n+  var transaction = new Transaction({\r\n     _id: new mongoose.Types.ObjectId(),\r\n     type: tmpTipo,\r\n     date: randomDate,\r\n     issuer: tmpEmissor,\r\n@@ -350,9 +350,9 @@\n     value: tmpValor,\r\n     category: tmpCategoria,\r\n     currency: tmpMoeda,\r\n     statement: statementID,\r\n-  };\r\n+  });\r\n   return transaction;\r\n };\r\n \r\n //Create a single transaction\r\n"
                },
                {
                    "date": 1670077597432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -310,8 +310,13 @@\n           emissoresDébitoInvestimentos[\r\n             Math.floor(Math.random() * emissoresDébitoInvestimentos.length)\r\n           ];\r\n         break;\r\n+      case \"Sem Categoria\":\r\n+        tmpEmissor =\r\n+          emissoresDébitoSemCategoria[\r\n+            Math.floor(Math.random() * emissoresDébitoSemCategoria.length)\r\n+          ];\r\n     }\r\n     tmpValor = Math.floor(Math.random() * 1000) + 1;\r\n   } else {\r\n     tmpCategoria =\r\n"
                },
                {
                    "date": 1670077712480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -315,8 +315,33 @@\n         tmpEmissor =\r\n           emissoresDébitoSemCategoria[\r\n             Math.floor(Math.random() * emissoresDébitoSemCategoria.length)\r\n           ];\r\n+        break;\r\n+      case \"Família\":\r\n+        tmpEmissor =\r\n+          emissoresDébitoFamília[\r\n+            Math.floor(Math.random() * emissoresDébitoFamília.length)\r\n+          ];\r\n+        break;\r\n+      case \"Seguros\":\r\n+        tmpEmissor =\r\n+          emissoresDébitoSeguros[\r\n+            Math.floor(Math.random() * emissoresDébitoSeguros.length)\r\n+          ];\r\n+        break;\r\n+      case \"Impostos e Taxas\":\r\n+        tmpEmissor =\r\n+          emissoresDébitoImpostosETaxas[\r\n+            Math.floor(Math.random() * emissoresDébitoImpostosETaxas.length)\r\n+          ];\r\n+        break;\r\n+      case \"Casa\":\r\n+        tmpEmissor =\r\n+          emissoresDébitoCasa[\r\n+            Math.floor(Math.random() * emissoresDébitoCasa.length)\r\n+          ];\r\n+        break;\r\n     }\r\n     tmpValor = Math.floor(Math.random() * 1000) + 1;\r\n   } else {\r\n     tmpCategoria =\r\n"
                },
                {
                    "date": 1670077791084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n var mongoose = require(\"mongoose\");\r\n var Transaction = require(\"../models/transaction\");\r\n var Transactions = module.exports;\r\n \r\n-var tipos = [\"Débito\", \"Crédito\"];\r\n+var tipos = [\"Debito\", \"Credito\"];\r\n \r\n var moeda = [\"EUR\", \"USD\"];\r\n \r\n var categorias = [\r\n@@ -17,9 +17,9 @@\n   \"Viagens\",\r\n   \"Educação\",\r\n   \"Sem Categoria\",\r\n   \"Supermercados e Lojas\",\r\n-  \"Crédito e Comissões\",\r\n+  \"Credito e Comissões\",\r\n   \"Seguros\",\r\n   \"Entretenimento\",\r\n   \"Investimentos\",\r\n ];\r\n@@ -42,15 +42,15 @@\n   \"Rede Expressos\",\r\n   \"CP\",\r\n   \"Táxis Lisboa\",\r\n ];\r\n-var emissoresDébitoImpostosETaxas = [\r\n+var emissoresDebitoImpostosETaxas = [\r\n   \"Finanças\",\r\n   \"Segurança Social\",\r\n   \"IRS\",\r\n   \"IMI\",\r\n ];\r\n-var emissoresDébitoSeguros = [\r\n+var emissoresDebitoSeguros = [\r\n   \"Seguro Social\",\r\n   \"Seguro de Acidentes de Trabalho\",\r\n   \"Seguro de Acidentes Pessoais\",\r\n   \"Seguro de Saúde\",\r\n@@ -100,9 +100,9 @@\n   \"Seguro de Incapacidade Temporária\",\r\n   \"Seguro de Incapacidade\",\r\n ];\r\n \r\n-var emissoresDébitoCulturaEHobbies = [\r\n+var emissoresDebitoCulturaEHobbies = [\r\n   \"TNSJ\",\r\n   \"Teatro Circo\",\r\n   \"Nos Cinemas\",\r\n   \"Rivoli\",\r\n@@ -111,9 +111,9 @@\n   \"Museu Nacional\",\r\n   \"Museu de Arte Contemporânea\",\r\n   \"Museu do Fado\",\r\n ];\r\n-var emissoresDébitoRestaurantesECafés = [\r\n+var emissoresDebitoRestaurantesECafés = [\r\n   \"Tasca do Esteves\",\r\n   \"McDonalds\",\r\n   \"Burguer King\",\r\n   \"Chimarrão\",\r\n@@ -131,17 +131,17 @@\n   \"H3\",\r\n   \"Telepizza\",\r\n   \"Dominos Pizza\",\r\n ];\r\n-var emissoresDébitoSaúde = [\r\n+var emissoresDebitoSaúde = [\r\n   \"Hospital S.João\",\r\n   \"Trofa Saúde\",\r\n   \"Lusíadas\",\r\n   \"Hospital da Luz\",\r\n   \"Clínica do Esteves\",\r\n   \"USF Braga Norte\",\r\n ];\r\n-var emissoresDébitoViagens = [\r\n+var emissoresDebitoViagens = [\r\n   \"Ryanair\",\r\n   \"EasyJet\",\r\n   \"Wiz Air\",\r\n   \"Iberia\",\r\n@@ -152,9 +152,9 @@\n   \"Sata Internacional\",\r\n   \"British Airways\",\r\n   \"Delta Airlines\",\r\n ];\r\n-var emissoresDébitoEducação = [\r\n+var emissoresDebitoEducação = [\r\n   \"Universidade do Minho\",\r\n   \"Universidade do Porto\",\r\n   \"Porto Editora\",\r\n   \"Areal Editores\",\r\n@@ -165,9 +165,9 @@\n   \"Fnac Portugal\",\r\n   \"Universidade Nova de Lisboa\",\r\n   \"Instituo Superior Técnico\",\r\n ];\r\n-var emissoresDébitoSupermercadosELojas = [\r\n+var emissoresDebitoSupermercadosELojas = [\r\n   \"Pingo Doce\",\r\n   \"Continente\",\r\n   \"Mercearia do Esteves\",\r\n   \"Lidl\",\r\n@@ -178,51 +178,51 @@\n   \"Aldi\",\r\n   \"Minipreço\",\r\n   \"Mercearia da Tasquinha\",\r\n ];\r\n-var emissoresDébitoCréditoEComissões = [\r\n+var emissoresDebitoCreditoEComissões = [\r\n   \"Cetelem\",\r\n   \"BPI\",\r\n   \"CGD\",\r\n   \"Cofidis\",\r\n   \"Wizink\",\r\n ];\r\n-var emissoresDébitoEntretenimento = [\r\n+var emissoresDebitoEntretenimento = [\r\n   \"Netflix\",\r\n   \"Spotify\",\r\n   \"Apple Music\",\r\n   \"Youtube Premium\",\r\n   \"Google\",\r\n   \"Apple\",\r\n   \"Podcasts do Esteves\",\r\n ];\r\n-var emissoresDébitoDesporto = [\r\n+var emissoresDebitoDesporto = [\r\n   \"Clube de Ténis\",\r\n   \"Bpadel\",\r\n   \"Clube de Hipismo\",\r\n   \"Clube do Rio\",\r\n   \"Clube de Golfe\",\r\n   \"Aluguer campo futebol\",\r\n   \"Ginásio Fitness\",\r\n ];\r\n-var emissoresDébitoInvestimentos = [\r\n+var emissoresDebitoInvestimentos = [\r\n   \"XTB\",\r\n   \"Binance\",\r\n   \"MEXC\",\r\n   \"Forex\",\r\n   \"Rendas\",\r\n   \"Etoro\",\r\n ];\r\n \r\n-var emissoresCréditoFamilia = [\"Herança\"];\r\n-var emissoresCréditoSemCategoria = [\r\n+var emissoresCreditoFamilia = [\"Herança\"];\r\n+var emissoresCreditoSemCategoria = [\r\n   \"Transferência Bancária de João\",\r\n   \"Transferência Bancária de Joana\",\r\n   \"Transferência MBWAY de Miguel\",\r\n   \"Transferência bancária de Alberto\",\r\n   \"Reembolso\",\r\n ];\r\n-var emissoresCréditoInvestimentos = [\r\n+var emissoresCreditoInvestimentos = [\r\n   \"Criptomoedas\",\r\n   \"Forex\",\r\n   \"PPRs\",\r\n   \"Dividendos\",\r\n@@ -244,126 +244,132 @@\n     yesterday.getTime() + Math.random() * (date.getTime() - yesterday.getTime())\r\n   );\r\n \r\n   var tmpTipo = tipos[Math.floor(Math.random() * tipos.length)];\r\n-  if (tmpTipo == \"Débito\") {\r\n+  if (tmpTipo == \"Debito\") {\r\n     tmpCategoria =\r\n-      categoriasDébito[Math.floor(Math.random() * categoriasDébito.length)];\r\n+      categoriasDebito[Math.floor(Math.random() * categoriasDebito.length)];\r\n     switch (tmpCategoria) {\r\n       case \"Cultura e Hobbies\":\r\n         tmpEmissor =\r\n-          emissoresDébitoCulturaEHobbies[\r\n-            Math.floor(Math.random() * emissoresDébitoCulturaEHobbies.length)\r\n+          emissoresDebitoCulturaEHobbies[\r\n+            Math.floor(Math.random() * emissoresDebitoCulturaEHobbies.length)\r\n           ];\r\n         break;\r\n       case \"Restaurantes e Cafés\":\r\n         tmpEmissor =\r\n-          emissoresDébitoRestaurantesECafés[\r\n-            Math.floor(Math.random() * emissoresDébitoRestaurantesECafés.length)\r\n+          emissoresDebitoRestaurantesECafés[\r\n+            Math.floor(Math.random() * emissoresDebitoRestaurantesECafés.length)\r\n           ];\r\n         break;\r\n       case \"Saúde\":\r\n         tmpEmissor =\r\n-          emissoresDébitoSaúde[\r\n-            Math.floor(Math.random() * emissoresDébitoSaúde.length)\r\n+          emissoresDebitoSaúde[\r\n+            Math.floor(Math.random() * emissoresDebitoSaúde.length)\r\n           ];\r\n         break;\r\n       case \"Viagens\":\r\n         tmpEmissor =\r\n-          emissoresDébitoViagens[\r\n-            Math.floor(Math.random() * emissoresDébitoViagens.length)\r\n+          emissoresDebitoViagens[\r\n+            Math.floor(Math.random() * emissoresDebitoViagens.length)\r\n           ];\r\n         break;\r\n       case \"Educação\":\r\n         tmpEmissor =\r\n-          emissoresDébitoEducação[\r\n-            Math.floor(Math.random() * emissoresDébitoEducação.length)\r\n+          emissoresDebitoEducação[\r\n+            Math.floor(Math.random() * emissoresDebitoEducação.length)\r\n           ];\r\n         break;\r\n       case \"Supermercados e Lojas\":\r\n         tmpEmissor =\r\n-          emissoresDébitoSupermercadosELojas[\r\n+          emissoresDebitoSupermercadosELojas[\r\n             Math.floor(\r\n-              Math.random() * emissoresDébitoSupermercadosELojas.length\r\n+              Math.random() * emissoresDebitoSupermercadosELojas.length\r\n             )\r\n           ];\r\n         break;\r\n-      case \"Crédito e Comissões\":\r\n+      case \"Credito e Comissões\":\r\n         tmpEmissor =\r\n-          emissoresDébitoCréditoEComissões[\r\n-            Math.floor(Math.random() * emissoresDébitoCréditoEComissões.length)\r\n+          emissoresDebitoCreditoEComissões[\r\n+            Math.floor(Math.random() * emissoresDebitoCreditoEComissões.length)\r\n           ];\r\n         break;\r\n       case \"Entretenimento\":\r\n         tmpEmissor =\r\n-          emissoresDébitoEntretenimento[\r\n-            Math.floor(Math.random() * emissoresDébitoEntretenimento.length)\r\n+          emissoresDebitoEntretenimento[\r\n+            Math.floor(Math.random() * emissoresDebitoEntretenimento.length)\r\n           ];\r\n         break;\r\n       case \"Desporto\":\r\n         tmpEmissor =\r\n-          emissoresDébitoDesporto[\r\n-            Math.floor(Math.random() * emissoresDébitoDesporto.length)\r\n+          emissoresDebitoDesporto[\r\n+            Math.floor(Math.random() * emissoresDebitoDesporto.length)\r\n           ];\r\n         break;\r\n       case \"Investimentos\":\r\n         tmpEmissor =\r\n-          emissoresDébitoInvestimentos[\r\n-            Math.floor(Math.random() * emissoresDébitoInvestimentos.length)\r\n+          emissoresDebitoInvestimentos[\r\n+            Math.floor(Math.random() * emissoresDebitoInvestimentos.length)\r\n           ];\r\n         break;\r\n       case \"Sem Categoria\":\r\n         tmpEmissor =\r\n-          emissoresDébitoSemCategoria[\r\n-            Math.floor(Math.random() * emissoresDébitoSemCategoria.length)\r\n+          emissoresDebitoSemCategoria[\r\n+            Math.floor(Math.random() * emissoresDebitoSemCategoria.length)\r\n           ];\r\n         break;\r\n       case \"Família\":\r\n         tmpEmissor =\r\n-          emissoresDébitoFamília[\r\n-            Math.floor(Math.random() * emissoresDébitoFamília.length)\r\n+          emissoresDebitoFamília[\r\n+            Math.floor(Math.random() * emissoresDebitoFamília.length)\r\n           ];\r\n         break;\r\n       case \"Seguros\":\r\n         tmpEmissor =\r\n-          emissoresDébitoSeguros[\r\n-            Math.floor(Math.random() * emissoresDébitoSeguros.length)\r\n+          emissoresDebitoSeguros[\r\n+            Math.floor(Math.random() * emissoresDebitoSeguros.length)\r\n           ];\r\n         break;\r\n       case \"Impostos e Taxas\":\r\n         tmpEmissor =\r\n-          emissoresDébitoImpostosETaxas[\r\n-            Math.floor(Math.random() * emissoresDébitoImpostosETaxas.length)\r\n+          emissoresDebitoImpostosETaxas[\r\n+            Math.floor(Math.random() * emissoresDebitoImpostosETaxas.length)\r\n           ];\r\n         break;\r\n       case \"Casa\":\r\n         tmpEmissor =\r\n-          emissoresDébitoCasa[\r\n-            Math.floor(Math.random() * emissoresDébitoCasa.length)\r\n+          emissoresDebitoCasa[\r\n+            Math.floor(Math.random() * emissoresDebitoCasa.length)\r\n           ];\r\n         break;\r\n+      case \"Mobilidade\":\r\n+        tmpEmissor =\r\n+          emissoresDebitoMobilidade[\r\n+            Math.floor(Math.random() * emissoresDebitoMobilidade.length)\r\n+          ];\r\n+        break;\r\n     }\r\n     tmpValor = Math.floor(Math.random() * 1000) + 1;\r\n   } else {\r\n     tmpCategoria =\r\n-      categoriasCrédito[Math.floor(Math.random() * categoriasCrédito.length)];\r\n+      categoriasCredito[Math.floor(Math.random() * categoriasCredito.length)];\r\n     switch (tmpCategoria) {\r\n       case \"Família\":\r\n         tmpEmissor =\r\n-          emissoresCréditoFamilia[\r\n-            Math.floor(Math.random() * emissoresCréditoFamilia.length)\r\n+          emissoresCreditoFamilia[\r\n+            Math.floor(Math.random() * emissoresCreditoFamilia.length)\r\n           ];\r\n         break;\r\n       case \"Sem Categoria\":\r\n         tmpEmissor =\r\n-          emissoresCréditoSemCategoria[\r\n-            Math.floor(Math.random() * emissoresCréditoSemCategoria.length)\r\n+          emissoresCreditoSemCategoria[\r\n+            Math.floor(Math.random() * emissoresCreditoSemCategoria.length)\r\n           ];\r\n         break;\r\n       case \"Investimentos\":\r\n         tmpEmissor =\r\n-          emissoresCréditoInvestimentos[\r\n-            Math.floor(Math.random() * emissoresCréditoInvestimentos.length)\r\n+          emissoresCreditoInvestimentos[\r\n+            Math.floor(Math.random() * emissoresCreditoInvestimentos.length)\r\n           ];\r\n         break;\r\n     }\r\n     tmpValor = Math.floor(Math.random() * 1000) + 1;\r\n"
                },
                {
                    "date": 1670077967607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n var tipos = [\"Debito\", \"Credito\"];\r\n \r\n var moeda = [\"EUR\", \"USD\"];\r\n \r\n-var categorias = [\r\n+var categoriasCredito = [\r\n   \"Casa\",\r\n   \"Mobilidade\",\r\n   \"Desporto\",\r\n   \"Impostos e Taxas\",\r\n@@ -23,8 +23,10 @@\n   \"Entretenimento\",\r\n   \"Investimentos\",\r\n ];\r\n \r\n+var categoriasDebito = [\"Familia\", \"Investimentos\", \"Sem Categoria\"];\r\n+\r\n var emissoresDebitoCasa = [\r\n   \"EDP\",\r\n   \"Vodafone\",\r\n   \"MEO\",\r\n"
                },
                {
                    "date": 1670078149036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,15 @@\n ];\r\n \r\n var categoriasDebito = [\"Familia\", \"Investimentos\", \"Sem Categoria\"];\r\n \r\n+var emissoresDebitoSemCategoria = [\r\n+  \"Pagamento\",\r\n+  \"Transferencia\",\r\n+  \"Levantamento ATM\",\r\n+];\r\n+var emissoresCreditoSemCategoria = [\"Transferencia\", \"Depósito ATM\"];\r\n+\r\n var emissoresDebitoCasa = [\r\n   \"EDP\",\r\n   \"Vodafone\",\r\n   \"MEO\",\r\n"
                },
                {
                    "date": 1670078170519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -325,14 +325,8 @@\n           emissoresDebitoSemCategoria[\r\n             Math.floor(Math.random() * emissoresDebitoSemCategoria.length)\r\n           ];\r\n         break;\r\n-      case \"Família\":\r\n-        tmpEmissor =\r\n-          emissoresDebitoFamília[\r\n-            Math.floor(Math.random() * emissoresDebitoFamília.length)\r\n-          ];\r\n-        break;\r\n       case \"Seguros\":\r\n         tmpEmissor =\r\n           emissoresDebitoSeguros[\r\n             Math.floor(Math.random() * emissoresDebitoSeguros.length)\r\n"
                },
                {
                    "date": 1670078507227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n var tipos = [\"Debito\", \"Credito\"];\r\n \r\n var moeda = [\"EUR\", \"USD\"];\r\n \r\n-var categoriasCredito = [\r\n+var categoriasDebito = [\r\n   \"Casa\",\r\n   \"Mobilidade\",\r\n   \"Desporto\",\r\n   \"Impostos e Taxas\",\r\n@@ -23,9 +23,9 @@\n   \"Entretenimento\",\r\n   \"Investimentos\",\r\n ];\r\n \r\n-var categoriasDebito = [\"Familia\", \"Investimentos\", \"Sem Categoria\"];\r\n+var categoriasCredito = [\"Familia\", \"Investimentos\", \"Sem Categoria\"];\r\n \r\n var emissoresDebitoSemCategoria = [\r\n   \"Pagamento\",\r\n   \"Transferencia\",\r\n"
                },
                {
                    "date": 1670078598869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,9 +221,9 @@\n   \"Rendas\",\r\n   \"Etoro\",\r\n ];\r\n \r\n-var emissoresCreditoFamilia = [\"Herança\"];\r\n+var emissoresCreditoFamilia = [\"Herança\", \"Prenda\"];\r\n var emissoresCreditoSemCategoria = [\r\n   \"Transferência Bancária de João\",\r\n   \"Transferência Bancária de Joana\",\r\n   \"Transferência MBWAY de Miguel\",\r\n"
                },
                {
                    "date": 1670078621454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -355,9 +355,9 @@\n   } else {\r\n     tmpCategoria =\r\n       categoriasCredito[Math.floor(Math.random() * categoriasCredito.length)];\r\n     switch (tmpCategoria) {\r\n-      case \"Família\":\r\n+      case \"Familia\":\r\n         tmpEmissor =\r\n           emissoresCreditoFamilia[\r\n             Math.floor(Math.random() * emissoresCreditoFamilia.length)\r\n           ];\r\n"
                },
                {
                    "date": 1670079649466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -374,9 +374,9 @@\n             Math.floor(Math.random() * emissoresCreditoInvestimentos.length)\r\n           ];\r\n         break;\r\n     }\r\n-    tmpValor = Math.floor(Math.random() * 1000) + 1;\r\n+    tmpValor = Math.floor(Math.random() * 1600) + 1;\r\n   }\r\n \r\n   tmpDescricao = tmpEmissor + \" - \" + tmpCategoria;\r\n \r\n"
                }
            ],
            "date": 1669637017288,
            "name": "Commit-0",
            "content": "var mongoose = require(\"mongoose\");\r\nvar transaction = require(\"../models/transaction\");\r\nvar Transactions = module.exports;\r\n\r\nvar categorias = [\r\n  \"Salário\",\r\n  \"Alimentação\",\r\n  \"Transportes\",\r\n  \"Lazer\",\r\n  \"Saúde\",\r\n  \"Educação\",\r\n  \"Outros\",\r\n];\r\nvar tipos = [\"Débito\", \"Crédito\"];\r\n\r\nvar emissoresDébito = [\r\n  \"Pingo Doce\",\r\n  \"Continente\",\r\n  \"Worten\",\r\n  \"Cinemas\",\r\n  \"PSP\",\r\n  \"Finanças\",\r\n  \"McDonalds\",\r\n  \"Burger King\",\r\n  \"PizzaHut\",\r\n  \"FitnessUp\",\r\n  \"Fnac\",\r\n  \"Universidade do Minho\",\r\n  \"Levantamento ATM\",\r\n];\r\n\r\nvar emissoresCrédito = [\r\n  \"Salário\",\r\n  \"Prémio\",\r\n  \"Reembolso\",\r\n  \"Transferência de João\",\r\n  \"Transferência de Maria\",\r\n  \"Transferência de José\",\r\n  \"Transferência de Ana\",\r\n  \"Transferência de Pedro\",\r\n  \"Transferência de Sofia\",\r\n];\r\n\r\nvar moeda = [\"EUR\", \"USD\"];\r\n\r\n//Gerar uma transação aleatória\r\nfunction newTransaction() {\r\n  //random date and time between now and tomorrow\r\n  var data = new Date(\r\n    new Date().getTime() + Math.random() * 24 * 60 * 60 * 1000\r\n  );\r\n  var categoria = categorias[Math.floor(Math.random() * categorias.length)];\r\n  var emissor;\r\n  if (categoria == \"Salário\") {\r\n    emissor = \"Empregador\";\r\n    tipo = \"Crédito\";\r\n  } else {\r\n    emissor =\r\n      emissoresDébito[Math.floor(Math.random() * emissoresDébito.length)];\r\n    tipo = tipos[Math.floor(Math.random() * tipos.length)];\r\n  }\r\n  var valor = 0;\r\n  if (tipo == \"Crédito\") {\r\n    descricao = \"Recebimento de \" + categoria;\r\n    valor = Math.floor(Math.random() * 1000);\r\n  } else {\r\n    descricao = \"Pagamento de \" + categoria;\r\n    valor = Math.floor(Math.random() * 800);\r\n  }\r\n\r\n  var moeda = moeda[Math.floor(Math.random() * moeda.length)];\r\n\r\n  var transaction = {\r\n    _id: new mongoose.Types.ObjectId(),\r\n    date: data,\r\n    issuer: emissor,\r\n    description: descricao,\r\n    value: valor,\r\n    category: categoria,\r\n    currency: moeda,\r\n  };\r\n  console.log(transaction);\r\n  return transaction;\r\n}\r\n\r\nTransactions.createTransactions = async function (n) {\r\n  var transaction = newTransaction();\r\n  try {\r\n    await transaction.save();\r\n    console.log(\"Transaction created\");\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n"
        }
    ]
}