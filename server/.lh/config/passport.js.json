{
    "sourceFile": "config/passport.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 58,
            "patches": [
                {
                    "date": 1667063247803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1667063622191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,25 @@\n+const connection = require(\"./database\");\n+\n const customFields = {\n-    usernameField: 'email',\n\\ No newline at end of file\n+    emailField: 'email',\n     passwordField: 'password'\n-};\n+};\n+\n+const verifyCallback = (email, password, done) => {\n+        \n+        connection.query(\"SELECT * FROM users WHERE email = ? \", [email], function (err, results, fields) {\n+            if (err) console.log(err);\n+            if (results.length == 0) {\n+                return done(null, false);\n+            }\n+            const isValid = validPassword(password, results[0].hash, results[0].salt);\n+            user={id:results[0].id, email:results[0].email, hash:results[0].hash, salt:results[0].salt};\n+            if (isValid) {\n+                return done(null, user);\n+            }\n+            else {\n+                return done(null, false);\n+            }\n+        });\n+    };\n+    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1667063661388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+const passport = require(\"passport\");\n const connection = require(\"./database\");\n \n const customFields = {\n     emailField: 'email',\n@@ -20,6 +21,13 @@\n             else {\n                 return done(null, false);\n             }\n         });\n-    };\n-    \n\\ No newline at end of file\n+};\n+\n+const strategy = new LocalStrategy(customFields, verifyCallback);\n+passport.use(strategy);\n+\n+passport.serializeUser((user, done) => {\n+    console.log(\"serializeUser\");\n+    done(null, user.id);\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1667063751437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,5 +29,16 @@\n \n passport.serializeUser((user, done) => {\n     console.log(\"serializeUser\");\n     done(null, user.id);\n-});\n\\ No newline at end of file\n+});\n+\n+\n+passport.deserializeUser(function(userId, done) {\n+    console.log(\"deserializeUser\");\n+    connection.query(\"SELECT * FROM users WHERE id = ? \", [userId], function (err, results) {\n+        done(null, results[0]);\n+    });\n+});\n+\n+\n+\n"
                },
                {
                    "date": 1667063911939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,6 +39,47 @@\n         done(null, results[0]);\n     });\n });\n \n+/* Middleware  */\n \n+function validPassword(password, hash, salt) {\n+    var hashVerify = crypto.pbkdf2Sync(password, salt, 10000, 64, `sha512`).toString(`hex`);\n+    return hash === hashVerify;\n+}\n \n+function genPassword(password) {\n+    var salt = crypto.randomBytes(32).toString('hex');\n+    var genHash = crypto.pbkdf2Sync(password, salt, 10000, 64, `sha512`).toString(`hex`);\n+\n+    return {\n+        salt: salt,\n+        hash: genHash\n+    };\n+}\n+\n+function isAuth(req, res, next) {\n+    if (req.isAuthenticated()) {\n+        return next();\n+    }\n+    res.redirect('/notAuthorized');\n+}\n+\n+function isAdmin(req, res, next) {\n+    if (req.isAuthenticated() && req.user.admin == 1) {\n+        return next();\n+    }\n+    res.redirect('/notAuthorizedAdmin');\n+}\n+\n+\n+function userExists(req, res, next) {\n+    connection.query(\"SELECT * FROM users WHERE email = ? \", [req.body.email], function (err, results, fields) {\n+        if (err) console.log(err);\n+        if (results.length == 0) {\n+            return next();\n+        }\n+        else {\n+            res.redirect('/userExists');\n+        }\n+    });\n+}\n"
                },
                {
                    "date": 1667154358735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,9 @@\n const passport = require(\"passport\");\n const connection = require(\"./database\");\n+const LocalStrategy = require(\"passport-local\").Strategy;\n \n+\n const customFields = {\n     emailField: 'email',\n     passwordField: 'password'\n };\n"
                },
                {
                    "date": 1667154653012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n const passport = require(\"passport\");\n const connection = require(\"./database\");\n const LocalStrategy = require(\"passport-local\").Strategy;\n \n-\n const customFields = {\n     emailField: 'email',\n     passwordField: 'password'\n };\n"
                },
                {
                    "date": 1667155055239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,86 +1,53 @@\n-const passport = require(\"passport\");\n-const connection = require(\"./database\");\n-const LocalStrategy = require(\"passport-local\").Strategy;\n+var LocalStrategy = require('passport-local').Strategy;\n+var JWTstrategy = require(\"passport-jwt\").Strategy;\n+var ExtractJWT = require(\"passport-jwt\").ExtractJwt;\n+var secretKey = require('../config/app');\n+var Users = require('../controllers/users');\n \n-const customFields = {\n-    emailField: 'email',\n-    passwordField: 'password'\n-};\n \n-const verifyCallback = (email, password, done) => {\n-        \n-        connection.query(\"SELECT * FROM users WHERE email = ? \", [email], function (err, results, fields) {\n-            if (err) console.log(err);\n-            if (results.length == 0) {\n-                return done(null, false);\n-            }\n-            const isValid = validPassword(password, results[0].hash, results[0].salt);\n-            user={id:results[0].id, email:results[0].email, hash:results[0].hash, salt:results[0].salt};\n-            if (isValid) {\n-                return done(null, user);\n-            }\n-            else {\n-                return done(null, false);\n-            }\n-        });\n-};\n+module.exports = function(passport) {\n+    passport.use(\"login\", new LocalStrategy(\n+        function (employee, password, done) {\n+            Users.getOne({ employee: employee }, function (err, user) {\n+                if (err) done(err);\n+                if (!user) {\n+                    return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n+                }\n \n-const strategy = new LocalStrategy(customFields, verifyCallback);\n-passport.use(strategy);\n+                Users.comparePassword(password, user.password, function (err, isMatch) {\n+                    if (err) done(err);\n+                    if (isMatch) {\n+                        if(user.level==-1){\n+                            return done(null, false, { message: 'Utilizador desativado.' });\n+                        }else{\n+                            return done(null, user, { message: 'Login efetuado com sucesso.' });\n+                        }\n+                    } else {\n+                        return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n+                    }\n+                });\n+            });\n+        })\n+    );\n \n-passport.serializeUser((user, done) => {\n-    console.log(\"serializeUser\");\n-    done(null, user.id);\n-});\n+    passport.serializeUser(function (user, done) {\n+        done(null, user.id);\n+    });\n \n-\n-passport.deserializeUser(function(userId, done) {\n-    console.log(\"deserializeUser\");\n-    connection.query(\"SELECT * FROM users WHERE id = ? \", [userId], function (err, results) {\n-        done(null, results[0]);\n+    passport.deserializeUser(function (id, done) {\n+        Users.getUserById(id, function (err, user) {\n+            done(err, user);\n+        });\n     });\n-});\n \n-/* Middleware  */\n-\n-function validPassword(password, hash, salt) {\n-    var hashVerify = crypto.pbkdf2Sync(password, salt, 10000, 64, `sha512`).toString(`hex`);\n-    return hash === hashVerify;\n-}\n-\n-function genPassword(password) {\n-    var salt = crypto.randomBytes(32).toString('hex');\n-    var genHash = crypto.pbkdf2Sync(password, salt, 10000, 64, `sha512`).toString(`hex`);\n-\n-    return {\n-        salt: salt,\n-        hash: genHash\n-    };\n-}\n-\n-function isAuth(req, res, next) {\n-    if (req.isAuthenticated()) {\n-        return next();\n-    }\n-    res.redirect('/notAuthorized');\n-}\n-\n-function isAdmin(req, res, next) {\n-    if (req.isAuthenticated() && req.user.admin == 1) {\n-        return next();\n-    }\n-    res.redirect('/notAuthorizedAdmin');\n-}\n-\n-\n-function userExists(req, res, next) {\n-    connection.query(\"SELECT * FROM users WHERE email = ? \", [req.body.email], function (err, results, fields) {\n-        if (err) console.log(err);\n-        if (results.length == 0) {\n-            return next();\n-        }\n-        else {\n-            res.redirect('/userExists');\n-        }\n-    });\n-}\n+    passport.use(\"jwt\", new JWTstrategy({\n+        secretOrKey: secretKey.userPublicKey,\n+        algorithms: [\"RS256\"],\n+        jwtFromRequest: ExtractJWT.fromExtractors([\n+            ExtractJWT.fromUrlQueryParameter('token'),\n+            ExtractJWT.fromAuthHeaderWithScheme('Bearer')\n+        ])\n+    }, async (token, done) => {\n+        done(null, token);\n+    }))\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1667155319336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,27 +6,15 @@\n \n \n module.exports = function(passport) {\n     passport.use(\"login\", new LocalStrategy(\n-        function (employee, password, done) {\n-            Users.getOne({ employee: employee }, function (err, user) {\n+        function (user, password, done) {\n+            Users.register({ user: user }, function (err, user) {\n                 if (err) done(err);\n                 if (!user) {\n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n                 }\n \n-                Users.comparePassword(password, user.password, function (err, isMatch) {\n-                    if (err) done(err);\n-                    if (isMatch) {\n-                        if(user.level==-1){\n-                            return done(null, false, { message: 'Utilizador desativado.' });\n-                        }else{\n-                            return done(null, user, { message: 'Login efetuado com sucesso.' });\n-                        }\n-                    } else {\n-                        return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n-                    }\n-                });\n             });\n         })\n     );\n \n"
                },
                {
                    "date": 1667155731476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,23 +6,23 @@\n \n \n module.exports = function(passport) {\n     passport.use(\"login\", new LocalStrategy(\n-        function (user, password, done) {\n-            Users.register({ user: user }, function (err, user) {\n-                if (err) done(err);\n-                if (!user) {\n-                    return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n+        function (obj, done) {\n+           Users.login(obj, function(err, user) {\n+                if (err) { return done(err); }\n+                if (!obj) { \n+                    return done(null, false, {message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.'});\n                 }\n+                    return done(null, user, {message: 'Login efetuado com sucesso.'});\n+              }\n \n-            });\n-        })\n-    );\n \n-    passport.serializeUser(function (user, done) {\n-        done(null, user.id);\n-    });\n \n+        }\n+    ));\n+};\n+\n     passport.deserializeUser(function (id, done) {\n         Users.getUserById(id, function (err, user) {\n             done(err, user);\n         });\n"
                },
                {
                    "date": 1667155905906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,19 +11,17 @@\n            Users.login(obj, function(err, user) {\n                 if (err) { return done(err); }\n                 if (!obj) { \n                     return done(null, false, {message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.'});\n+                } else {\n+                    return done(null, user, {message: 'Login efetuado com sucesso.'});\n                 }\n-                    return done(null, user, {message: 'Login efetuado com sucesso.'});\n-              }\n-\n-\n-\n-        }\n-    ));\n+           });\n+        })\n+    );\n };\n \n-    passport.deserializeUser(function (id, done) {\n+passport.deserializeUser(function (id, done) {\n         Users.getUserById(id, function (err, user) {\n             done(err, user);\n         });\n     });\n"
                },
                {
                    "date": 1667155962877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,11 +17,14 @@\n                 }\n            });\n         })\n     );\n-};\n \n-passport.deserializeUser(function (id, done) {\n+    passport.serializeUser(function (user, done) {\n+        done(null, user.id);\n+    });\n+\n+    passport.deserializeUser(function (id, done) {\n         Users.getUserById(id, function (err, user) {\n             done(err, user);\n         });\n     });\n@@ -35,5 +38,7 @@\n         ])\n     }, async (token, done) => {\n         done(null, token);\n     }))\n-};\n\\ No newline at end of file\n+\n+};\n+\n"
                },
                {
                    "date": 1667157251486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n \n module.exports = function(passport) {\n     passport.use(\"login\", new LocalStrategy(\n         function (obj, done) {\n+            console.log(obj)\n            Users.login(obj, function(err, user) {\n                 if (err) { return done(err); }\n                 if (!obj) { \n                     return done(null, false, {message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.'});\n"
                },
                {
                    "date": 1667157485316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,12 @@\n var Users = require('../controllers/users');\n \n \n module.exports = function(passport) {\n+    console.log(\"PUTAS E VINHO VERDE\");\n     passport.use(\"login\", new LocalStrategy(\n         function (obj, done) {\n-            console.log(obj)\n+          \n            Users.login(obj, function(err, user) {\n                 if (err) { return done(err); }\n                 if (!obj) { \n                     return done(null, false, {message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.'});\n"
                },
                {
                    "date": 1667157573909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,13 +5,12 @@\n var Users = require('../controllers/users');\n \n \n module.exports = function(passport) {\n-    console.log(\"PUTAS E VINHO VERDE\");\n     passport.use(\"login\", new LocalStrategy(\n         function (obj, done) {\n-          \n            Users.login(obj, function(err, user) {\n+            console.log(\"PUTAS E VINHO VERDE\");\n                 if (err) { return done(err); }\n                 if (!obj) { \n                     return done(null, false, {message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.'});\n                 } else {\n"
                },
                {
                    "date": 1667157583589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,8 @@\n module.exports = function(passport) {\n     passport.use(\"login\", new LocalStrategy(\n         function (obj, done) {\n            Users.login(obj, function(err, user) {\n-            console.log(\"PUTAS E VINHO VERDE\");\n                 if (err) { return done(err); }\n                 if (!obj) { \n                     return done(null, false, {message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.'});\n                 } else {\n"
                },
                {
                    "date": 1667157719059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \n module.exports = function(passport) {\n     passport.use(\"login\", new LocalStrategy(\n         function (obj, done) {\n-           Users.login(obj, function(err, user) {\n+           Users.login(user: obj, function(err, user) {\n                 if (err) { return done(err); }\n                 if (!obj) { \n                     return done(null, false, {message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.'});\n                 } else {\n"
                },
                {
                    "date": 1667157729391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \n module.exports = function(passport) {\n     passport.use(\"login\", new LocalStrategy(\n         function (obj, done) {\n-           Users.login(user: obj, function(err, user) {\n+           Users.login( {user: obj}, function(err, user) {\n                 if (err) { return done(err); }\n                 if (!obj) { \n                     return done(null, false, {message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.'});\n                 } else {\n"
                },
                {
                    "date": 1667157752826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,4 +41,13 @@\n     }))\n \n };\n \n+\n+\n+\n+\n+\n+\n+\n+\n+\n"
                },
                {
                    "date": 1667158019844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,4 +50,51 @@\n \n \n \n \n+\n+module.exports = function(passport) {\n+    passport.use(\"local\", new LocalStrategy(\n+        function (employee, password, done) {\n+            Users.getOne({ employee: employee }, function (err, user) {\n+                if (err) done(err);\n+                if (!user) {\n+                    return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n+                }\n+\n+                Users.comparePassword(password, user.password, function (err, isMatch) {\n+                    if (err) done(err);\n+                    if (isMatch) {\n+                        if(user.level==-1){\n+                            return done(null, false, { message: 'Utilizador desativado.' });\n+                        }else{\n+                            return done(null, user, { message: 'Login efetuado com sucesso.' });\n+                        }\n+                    } else {\n+                        return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n+                    }\n+                });\n+            });\n+        })\n+    );\n+\n+    passport.serializeUser(function (user, done) {\n+        done(null, user.id);\n+    });\n+\n+    passport.deserializeUser(function (id, done) {\n+        Users.getUserById(id, function (err, user) {\n+            done(err, user);\n+        });\n+    });\n+\n+    passport.use(\"jwt\", new JWTstrategy({\n+        secretOrKey: secretKey.userPublicKey,\n+        algorithms: [\"RS256\"],\n+        jwtFromRequest: ExtractJWT.fromExtractors([\n+            ExtractJWT.fromUrlQueryParameter('token'),\n+            ExtractJWT.fromAuthHeaderWithScheme('Bearer')\n+        ])\n+    }, async (token, done) => {\n+        done(null, token);\n+    }))\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1667158039714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \n \n \n module.exports = function(passport) {\n-    passport.use(\"local\", new LocalStrategy(\n+    passport.use(\"login\", new LocalStrategy(\n         function (employee, password, done) {\n             Users.getOne({ employee: employee }, function (err, user) {\n                 if (err) done(err);\n                 if (!user) {\n"
                },
                {
                    "date": 1667169665071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,50 +51,4 @@\n \n \n \n \n-module.exports = function(passport) {\n-    passport.use(\"login\", new LocalStrategy(\n-        function (employee, password, done) {\n-            Users.getOne({ employee: employee }, function (err, user) {\n-                if (err) done(err);\n-                if (!user) {\n-                    return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n-                }\n-\n-                Users.comparePassword(password, user.password, function (err, isMatch) {\n-                    if (err) done(err);\n-                    if (isMatch) {\n-                        if(user.level==-1){\n-                            return done(null, false, { message: 'Utilizador desativado.' });\n-                        }else{\n-                            return done(null, user, { message: 'Login efetuado com sucesso.' });\n-                        }\n-                    } else {\n-                        return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n-                    }\n-                });\n-            });\n-        })\n-    );\n-\n-    passport.serializeUser(function (user, done) {\n-        done(null, user.id);\n-    });\n-\n-    passport.deserializeUser(function (id, done) {\n-        Users.getUserById(id, function (err, user) {\n-            done(err, user);\n-        });\n-    });\n-\n-    passport.use(\"jwt\", new JWTstrategy({\n-        secretOrKey: secretKey.userPublicKey,\n-        algorithms: [\"RS256\"],\n-        jwtFromRequest: ExtractJWT.fromExtractors([\n-            ExtractJWT.fromUrlQueryParameter('token'),\n-            ExtractJWT.fromAuthHeaderWithScheme('Bearer')\n-        ])\n-    }, async (token, done) => {\n-        done(null, token);\n-    }))\n-};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1667170290805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n \n module.exports = function(passport) {\n     passport.use(\"login\", new LocalStrategy(\n         function (obj, done) {\n+            console.log(obj)\n            Users.login( {user: obj}, function(err, user) {\n                 if (err) { return done(err); }\n                 if (!obj) { \n                     return done(null, false, {message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.'});\n"
                },
                {
                    "date": 1667170309212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n var Users = require('../controllers/users');\n \n \n module.exports = function(passport) {\n-    passport.use(\"login\", new LocalStrategy(\n+    passport.use(\"login\", new LocalStrategy( \n         function (obj, done) {\n             console.log(obj)\n            Users.login( {user: obj}, function(err, user) {\n                 if (err) { return done(err); }\n"
                },
                {
                    "date": 1667170381255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,11 @@\n var Users = require('../controllers/users');\n \n \n module.exports = function(passport) {\n-    passport.use(\"login\", new LocalStrategy( \n+    passport.use(\"login\", new LocalStrategy(\n         function (obj, done) {\n-            console.log(obj)\n+            console.log(\"olaaaa\")\n            Users.login( {user: obj}, function(err, user) {\n                 if (err) { return done(err); }\n                 if (!obj) { \n                     return done(null, false, {message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.'});\n"
                },
                {
                    "date": 1667170407870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n \n \n module.exports = function(passport) {\n     passport.use(\"login\", new LocalStrategy(\n-        function (obj, done) {\n+        function (obj,t,done) {\n             console.log(\"olaaaa\")\n            Users.login( {user: obj}, function(err, user) {\n                 if (err) { return done(err); }\n                 if (!obj) { \n"
                },
                {
                    "date": 1667170437887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,4 +52,6 @@\n \n \n \n \n+\n+\n"
                },
                {
                    "date": 1667171086122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,18 +6,28 @@\n \n \n module.exports = function(passport) {\n     passport.use(\"login\", new LocalStrategy(\n-        function (obj,t,done) {\n-            console.log(\"olaaaa\")\n-           Users.login( {user: obj}, function(err, user) {\n-                if (err) { return done(err); }\n-                if (!obj) { \n-                    return done(null, false, {message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.'});\n-                } else {\n-                    return done(null, user, {message: 'Login efetuado com sucesso.'});\n+        function (employee, password, done) {\n+            Users.getOne({ employee: employee }, function (err, user) {\n+                if (err) done(err);\n+                if (!user) {\n+                    return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n                 }\n-           });\n+\n+                Users.comparePassword(password, user.password, function (err, isMatch) {\n+                    if (err) done(err);\n+                    if (isMatch) {\n+                        if(user.level==-1){\n+                            return done(null, false, { message: 'Utilizador desativado.' });\n+                        }else{\n+                            return done(null, user, { message: 'Login efetuado com sucesso.' });\n+                        }\n+                    } else {\n+                        return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n+                    }\n+                });\n+            });\n         })\n     );\n \n     passport.serializeUser(function (user, done) {\n@@ -39,19 +49,12 @@\n         ])\n     }, async (token, done) => {\n         done(null, token);\n     }))\n-\n };\n \n \n \n \n \n \n \n-\n-\n-\n-\n-\n-\n"
                },
                {
                    "date": 1667171356587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,10 @@\n \n \n module.exports = function(passport) {\n     passport.use(\"login\", new LocalStrategy(\n-        function (employee, password, done) {\n-            Users.getOne({ employee: employee }, function (err, user) {\n+        function (email, password, done) {\n+            Users.getOne({ email: email }, function (err, user) {\n                 if (err) done(err);\n                 if (!user) {\n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n                 }\n"
                },
                {
                    "date": 1667171449059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,11 +4,12 @@\n var secretKey = require('../config/app');\n var Users = require('../controllers/users');\n \n \n-module.exports = function(passport) {\n+module.exports = function (passport) {\n     passport.use(\"login\", new LocalStrategy(\n         function (email, password, done) {\n+            console.log(\"ola\")\n             Users.getOne({ email: email }, function (err, user) {\n                 if (err) done(err);\n                 if (!user) {\n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n@@ -16,13 +17,9 @@\n \n                 Users.comparePassword(password, user.password, function (err, isMatch) {\n                     if (err) done(err);\n                     if (isMatch) {\n-                        if(user.level==-1){\n-                            return done(null, false, { message: 'Utilizador desativado.' });\n-                        }else{\n-                            return done(null, user, { message: 'Login efetuado com sucesso.' });\n-                        }\n+                        return done(null, user, { message: 'Login efetuado com sucesso.' });\n                     } else {\n                         return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n                     }\n                 });\n"
                },
                {
                    "date": 1667171555322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,17 +6,17 @@\n \n \n module.exports = function (passport) {\n     passport.use(\"login\", new LocalStrategy(\n-        function (email, password, done) {\n+        function (obj, done) {\n             console.log(\"ola\")\n-            Users.getOne({ email: email }, function (err, user) {\n+            Users.getOne({ email: obj.email }, function (err, user) {\n                 if (err) done(err);\n                 if (!user) {\n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n                 }\n \n-                Users.comparePassword(password, user.password, function (err, isMatch) {\n+                Users.comparePassword({ password: obj.password }, user.password, function (err, isMatch) {\n                     if (err) done(err);\n                     if (isMatch) {\n                         return done(null, user, { message: 'Login efetuado com sucesso.' });\n                     } else {\n"
                },
                {
                    "date": 1667171586884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n     passport.use(\"login\", new LocalStrategy(\n         function (obj, done) {\n             console.log(\"ola\")\n             Users.getOne({ email: obj.email }, function (err, user) {\n+                console.log(\"entrei ?\")\n                 if (err) done(err);\n                 if (!user) {\n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n                 }\n"
                },
                {
                    "date": 1667171597877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n var secretKey = require('../config/app');\n var Users = require('../controllers/users');\n \n \n-module.exports = function (passport) {\n+module.exports = function (passport) { \n     passport.use(\"login\", new LocalStrategy(\n         function (obj, done) {\n             console.log(\"ola\")\n             Users.getOne({ email: obj.email }, function (err, user) {\n"
                },
                {
                    "date": 1667171718977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,18 +6,16 @@\n \n \n module.exports = function (passport) { \n     passport.use(\"login\", new LocalStrategy(\n-        function (obj, done) {\n-            console.log(\"ola\")\n-            Users.getOne({ email: obj.email }, function (err, user) {\n-                console.log(\"entrei ?\")\n+        function (email,password, done) {\n+            Users.getOne({ email: email }, function (err, user) {\n                 if (err) done(err);\n                 if (!user) {\n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n                 }\n \n-                Users.comparePassword({ password: obj.password }, user.password, function (err, isMatch) {\n+                Users.comparePassword( password , user.password, function (err, isMatch) {\n                     if (err) done(err);\n                     if (isMatch) {\n                         return done(null, user, { message: 'Login efetuado com sucesso.' });\n                     } else {\n"
                },
                {
                    "date": 1667171797867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n         function (email,password, done) {\n             Users.getOne({ email: email }, function (err, user) {\n                 if (err) done(err);\n                 if (!user) {\n+                    console.log(\"User not found\");\n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n                 }\n \n                 Users.comparePassword( password , user.password, function (err, isMatch) {\n"
                },
                {
                    "date": 1667171808589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,8 @@\n         function (email,password, done) {\n             Users.getOne({ email: email }, function (err, user) {\n                 if (err) done(err);\n                 if (!user) {\n-                    console.log(\"User not found\");\n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n                 }\n \n                 Users.comparePassword( password , user.password, function (err, isMatch) {\n"
                },
                {
                    "date": 1667172580887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n         function (email,password, done) {\n             Users.getOne({ email: email }, function (err, user) {\n                 if (err) done(err);\n                 if (!user) {\n+        \n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n                 }\n \n                 Users.comparePassword( password , user.password, function (err, isMatch) {\n"
                },
                {
                    "date": 1667177620974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n module.exports = function (passport) { \n     passport.use(\"login\", new LocalStrategy(\n         function (email,password, done) {\n             Users.getOne({ email: email }, function (err, user) {\n+                console.log(\"teste\")\n                 if (err) done(err);\n                 if (!user) {\n         \n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n"
                },
                {
                    "date": 1667177649979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,10 @@\n \n module.exports = function (passport) { \n     passport.use(\"login\", new LocalStrategy(\n         function (email,password, done) {\n+            console.log(\"teste\")\n             Users.getOne({ email: email }, function (err, user) {\n-                console.log(\"teste\")\n                 if (err) done(err);\n                 if (!user) {\n         \n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n"
                },
                {
                    "date": 1667177662992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,8 @@\n \n module.exports = function (passport) { \n     passport.use(\"login\", new LocalStrategy(\n         function (email,password, done) {\n-            console.log(\"teste\")\n             Users.getOne({ email: email }, function (err, user) {\n                 if (err) done(err);\n                 if (!user) {\n         \n"
                },
                {
                    "date": 1667177683581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,8 @@\n         function (email,password, done) {\n             Users.getOne({ email: email }, function (err, user) {\n                 if (err) done(err);\n                 if (!user) {\n-        \n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n                 }\n \n                 Users.comparePassword( password , user.password, function (err, isMatch) {\n@@ -47,11 +46,4 @@\n     }, async (token, done) => {\n         done(null, token);\n     }))\n };\n-\n-\n-\n-\n-\n-\n-\n"
                },
                {
                    "date": 1667178314878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n         })\n     );\n \n     passport.serializeUser(function (user, done) {\n-        done(null, user.id);\n+        done(null, user);\n     });\n \n     passport.deserializeUser(function (id, done) {\n         Users.getUserById(id, function (err, user) {\n"
                },
                {
                    "date": 1667178337453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n         })\n     );\n \n     passport.serializeUser(function (user, done) {\n-        done(null, user);\n+        done(null, user.idUser);\n     });\n \n     passport.deserializeUser(function (id, done) {\n         Users.getUserById(id, function (err, user) {\n"
                },
                {
                    "date": 1667178594888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,11 @@\n var Users = require('../controllers/users');\n \n \n module.exports = function (passport) { \n-    passport.use(\"login\", new LocalStrategy(\n+    passport.use('login', new LocalStrategy(\n         function (email,password, done) {\n+            console.log(\"WTT\")\n             Users.getOne({ email: email }, function (err, user) {\n                 if (err) done(err);\n                 if (!user) {\n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n"
                },
                {
                    "date": 1667178707010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,8 @@\n \n module.exports = function (passport) { \n     passport.use('login', new LocalStrategy(\n         function (email,password, done) {\n-            console.log(\"WTT\")\n             Users.getOne({ email: email }, function (err, user) {\n                 if (err) done(err);\n                 if (!user) {\n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n"
                },
                {
                    "date": 1667179040984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \n module.exports = function (passport) { \n     passport.use('login', new LocalStrategy(\n         function (email,password, done) {\n-            Users.getOne({ email: email }, function (err, user) {\n+            Users.getOne(email, function (err, user) {\n                 if (err) done(err);\n                 if (!user) {\n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n                 }\n"
                },
                {
                    "date": 1667179065491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n module.exports = function (passport) { \n     passport.use('login', new LocalStrategy(\n         function (email,password, done) {\n             Users.getOne(email, function (err, user) {\n+                console.log(\"teste\")\n                 if (err) done(err);\n                 if (!user) {\n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n                 }\n"
                },
                {
                    "date": 1667179142286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,8 @@\n module.exports = function (passport) { \n     passport.use('login', new LocalStrategy(\n         function (email,password, done) {\n             Users.getOne(email, function (err, user) {\n-                console.log(\"teste\")\n                 if (err) done(err);\n                 if (!user) {\n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n                 }\n"
                },
                {
                    "date": 1667179177207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n \n \n module.exports = function (passport) { \n     passport.use('login', new LocalStrategy(\n-        function (email,password, done) {\n+        function (email, password, done) {\n             Users.getOne(email, function (err, user) {\n                 if (err) done(err);\n                 if (!user) {\n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n"
                },
                {
                    "date": 1667179628112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n \n \n module.exports = function (passport) { \n     passport.use('login', new LocalStrategy(\n-        function (email, password, done) {\n+        function (email, password, done) { \n             Users.getOne(email, function (err, user) {\n                 if (err) done(err);\n                 if (!user) {\n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n"
                },
                {
                    "date": 1667179724046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n var Users = require('../controllers/users');\n \n \n module.exports = function (passport) { \n-    passport.use('login', new LocalStrategy(\n+    passport.use(new LocalStrategy(\n         function (email, password, done) { \n             Users.getOne(email, function (err, user) {\n                 if (err) done(err);\n                 if (!user) {\n"
                },
                {
                    "date": 1667179748179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n var Users = require('../controllers/users');\n \n \n module.exports = function (passport) { \n-    passport.use(new LocalStrategy(\n+    passport.use('login', new LocalStrategy(\n         function (email, password, done) { \n             Users.getOne(email, function (err, user) {\n                 if (err) done(err);\n                 if (!user) {\n"
                },
                {
                    "date": 1667179960225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,23 +7,24 @@\n \n module.exports = function (passport) { \n     passport.use('login', new LocalStrategy(\n         function (email, password, done) { \n-            Users.getOne(email, function (err, user) {\n-                if (err) done(err);\n-                if (!user) {\n-                    return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n-                }\n+            // Users.getOne(email, function (err, user) {\n+            //     if (err) done(err);\n+            //     if (!user) {\n+            //         return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n+            //     }\n \n-                Users.comparePassword( password , user.password, function (err, isMatch) {\n-                    if (err) done(err);\n-                    if (isMatch) {\n-                        return done(null, user, { message: 'Login efetuado com sucesso.' });\n-                    } else {\n-                        return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n-                    }\n-                });\n-            });\n+            //     Users.comparePassword( password , user.password, function (err, isMatch) {\n+            //         if (err) done(err);\n+            //         if (isMatch) {\n+            //             return done(null, user, { message: 'Login efetuado com sucesso.' });\n+            //         } else {\n+            //             return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n+            //         }\n+            //     });\n+            // });\n+            return done(null, { email: email, password: password, idUser: 1}, {message: \"Login efetuado\"})\n         })\n     );\n \n     passport.serializeUser(function (user, done) {\n"
                },
                {
                    "date": 1667179988880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n             //             return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n             //         }\n             //     });\n             // });\n+            console.log(\"WTFFFFF\")\n             return done(null, { email: email, password: password, idUser: 1}, {message: \"Login efetuado\"})\n         })\n     );\n \n"
                },
                {
                    "date": 1667180031025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,25 +7,23 @@\n \n module.exports = function (passport) { \n     passport.use('login', new LocalStrategy(\n         function (email, password, done) { \n-            // Users.getOne(email, function (err, user) {\n-            //     if (err) done(err);\n-            //     if (!user) {\n-            //         return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n-            //     }\n+            Users.getOne(email, function (err, user) {\n+                if (err) done(err);\n+                if (!user) {\n+                    return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n+                }\n \n-            //     Users.comparePassword( password , user.password, function (err, isMatch) {\n-            //         if (err) done(err);\n-            //         if (isMatch) {\n-            //             return done(null, user, { message: 'Login efetuado com sucesso.' });\n-            //         } else {\n-            //             return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n-            //         }\n-            //     });\n-            // });\n-            console.log(\"WTFFFFF\")\n-            return done(null, { email: email, password: password, idUser: 1}, {message: \"Login efetuado\"})\n+                Users.comparePassword( password , user.password, function (err, isMatch) {\n+                    if (err) done(err);\n+                    if (isMatch) {\n+                        return done(null, user, { message: 'Login efetuado com sucesso.' });\n+                    } else {\n+                        return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n+                    }\n+                });\n+            });\n         })\n     );\n \n     passport.serializeUser(function (user, done) {\n"
                },
                {
                    "date": 1667181295323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,10 @@\n \n module.exports = function (passport) { \n     passport.use('login', new LocalStrategy(\n         function (email, password, done) { \n-            Users.getOne(email, function (err, user) {\n-                if (err) done(err);\n+            Users.getOne(email)\n+            .then(user => {\n                 if (!user) {\n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n                 }\n \n@@ -21,9 +21,10 @@\n                     } else {\n                         return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n                     }\n                 });\n-            });\n+            })\n+            .catch(err => done(err))\n         })\n     );\n \n     passport.serializeUser(function (user, done) {\n"
                },
                {
                    "date": 1667181323746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,10 @@\n \n module.exports = function (passport) { \n     passport.use('login', new LocalStrategy(\n         function (email, password, done) { \n-            Users.getOne(email)\n-            .then(user => {\n+            Users.getOne(email, function (err, user) {\n+                if (err) done(err);\n                 if (!user) {\n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n                 }\n \n@@ -21,10 +21,9 @@\n                     } else {\n                         return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n                     }\n                 });\n-            })\n-            .catch(err => done(err))\n+            });\n         })\n     );\n \n     passport.serializeUser(function (user, done) {\n"
                },
                {
                    "date": 1667237275279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,13 +2,33 @@\n var JWTstrategy = require(\"passport-jwt\").Strategy;\n var ExtractJWT = require(\"passport-jwt\").ExtractJwt;\n var secretKey = require('../config/app');\n var Users = require('../controllers/users');\n+var bcrypt = require('bcryptjs')\n \n-\n module.exports = function (passport) { \n     passport.use('login', new LocalStrategy(\n         function (email, password, done) { \n+            Users.getOne(email)\n+            .then(user =>{\n+                if (!user) {\n+                    return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n+                }\n+\n+                bcrypt.compare(password, user.password, function (err, isMatch) {\n+                    if(err) done(err);\n+                    if (isMatch) {\n+                        return done(null, user, { message: 'Login efetuado com sucesso.' });\n+                    } else {\n+                        return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n+                    }\n+                })\n+\n+            })\n+            .catch(err =>{\n+                done(err);\n+            })\n+            /*\n             Users.getOne(email, function (err, user) {\n                 if (err) done(err);\n                 if (!user) {\n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n@@ -21,9 +41,9 @@\n                     } else {\n                         return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n                     }\n                 });\n-            });\n+            });*/\n         })\n     );\n \n     passport.serializeUser(function (user, done) {\n"
                },
                {
                    "date": 1667237867186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n var bcrypt = require('bcryptjs')\n \n module.exports = function (passport) { \n     passport.use('login', new LocalStrategy(\n-        function (email, password, done) { \n+        function (email, password, done) {\n             Users.getOne(email)\n             .then(user =>{\n                 if (!user) {\n                     return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n"
                }
            ],
            "date": 1667063247803,
            "name": "Commit-0",
            "content": "const customFields = {\n    usernameField: 'email',\n    passwordField: 'password'\n};"
        }
    ]
}