{
    "sourceFile": "controllers/users.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 26,
            "patches": [
                {
                    "date": 1667154190520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1667154324355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,13 @@\n var User = require('../models/user')\n \n User.register = function (u) {    \n     console.log(\"here i am\")\n-    var newPassword = bcrypt.hashSync(u.password, 10);\n-    var parameters = [u.name, newPassword, u.email, new Date(u.birthDate), u.gender,u.savings]\n+    const saltHash=genPassword(req.body.password);\n+    console.log(saltHash);\n+    const salt = saltHash.salt;\n+    const hash = saltHash.hash;\n+    var parameters = [u.name, hash, u.email, u.birthDate, u.gender, u.savings]\n     console.log(parameters);\n     return new Promise(function(resolve, reject) {\n     sql.query(\"INSERT INTO users ( name, password, email , birthDate, gender, savings) VALUES ( ?, ?, ?, ?, ?, ?)\", parameters, function (err, res) {\n             if(err) {\n"
                },
                {
                    "date": 1667156590026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,4 +20,65 @@\n             }\n         });   \n     })       \n };\n+\n+\n+    \n+User.getUser = function(email){\n+    return new Promise(function(resolve,reject){\n+        sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n+            if(err) {\n+                console.log(\"error: \", err);\n+                reject(err);\n+            }\n+            else{\n+                resolve(res);\n+            }\n+        });   \n+    })       \n+};\n+\n+\n+\n+Users.comparePassword = function (candidatePassword, hash, callback) {\n+    return new Promise(function(resolve,reject){\n+        bcrypt.compare(candidatePassword, hash, function (err, isMatch) {\n+            callback(null, isMatch);\n+        });\n+    })\n+};\n+\n+\n+User.login = function(u){\n+    User.getUser(u.email).then(async user =>{\n+\n+    })\n+\n+};\n+\n+\n+\n+module.exports = function(passport) {\n+    passport.use(\"login\", new LocalStrategy(\n+        function (employee, password, done) {\n+            Users.getOne({ employee: employee }, function (err, user) {\n+                if (err) done(err);\n+                if (!user) {\n+                    return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n+                }\n+\n+                Users.comparePassword(password, user.password, function (err, isMatch) {\n+                    if (err) done(err);\n+                    if (isMatch) {\n+                        if(user.level==-1){\n+                            return done(null, false, { message: 'Utilizador desativado.' });\n+                        }else{\n+                            return done(null, user, { message: 'Login efetuado com sucesso.' });\n+                        }\n+                    } else {\n+                        return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n+                    }\n+                });\n+            });\n+        })\n+    );\n\\ No newline at end of file\n"
                },
                {
                    "date": 1667156819399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,17 +23,19 @@\n };\n \n \n     \n-User.getUser = function(email){\n+User.getUser = function(u){\n     return new Promise(function(resolve,reject){\n-        sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n+        sql.query(\"Select * from user where email= ?\",u.email ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n                 reject(err);\n             }\n             else{\n-                resolve(res);\n+                bcrypt.compare(u.password, res.password, function (err, isMatch) {\n+                    callback(null, isMatch);\n+                });\n             }\n         });   \n     })       \n };\n@@ -48,37 +50,4 @@\n     })\n };\n \n \n-User.login = function(u){\n-    User.getUser(u.email).then(async user =>{\n-\n-    })\n-\n-};\n-\n-\n-\n-module.exports = function(passport) {\n-    passport.use(\"login\", new LocalStrategy(\n-        function (employee, password, done) {\n-            Users.getOne({ employee: employee }, function (err, user) {\n-                if (err) done(err);\n-                if (!user) {\n-                    return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n-                }\n-\n-                Users.comparePassword(password, user.password, function (err, isMatch) {\n-                    if (err) done(err);\n-                    if (isMatch) {\n-                        if(user.level==-1){\n-                            return done(null, false, { message: 'Utilizador desativado.' });\n-                        }else{\n-                            return done(null, user, { message: 'Login efetuado com sucesso.' });\n-                        }\n-                    } else {\n-                        return done(null, false, { message: 'Ocorreu um erro ao realizar o login! Por favor verifique as suas credenciais.' });\n-                    }\n-                });\n-            });\n-        })\n-    );\n\\ No newline at end of file\n"
                },
                {
                    "date": 1667156854504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,13 +41,5 @@\n };\n \n \n \n-Users.comparePassword = function (candidatePassword, hash, callback) {\n-    return new Promise(function(resolve,reject){\n-        bcrypt.compare(candidatePassword, hash, function (err, isMatch) {\n-            callback(null, isMatch);\n-        });\n-    })\n-};\n \n-\n"
                },
                {
                    "date": 1667156879215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,10 @@\n };\n \n \n     \n-User.getUser = function(u){\n+User.Login = function(u){\n+    console.log(u)\n     return new Promise(function(resolve,reject){\n         sql.query(\"Select * from user where email= ?\",u.email ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n"
                },
                {
                    "date": 1667171208082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n };\n \n \n     \n-User.Login = function(u){\n+User.teste = function(u){\n     console.log(u)\n     return new Promise(function(resolve,reject){\n         sql.query(\"Select * from user where email= ?\",u.email ,function(err,res){\n             if(err) {\n@@ -41,6 +41,46 @@\n     })       \n };\n \n \n+Users.getOne = function(query, callback) {\n+    return new Promise(function(resolve,reject){\n+        sql.query(\"Select * from user where email= ?\",u.email ,function(err,res){\n+            if(err) {\n+                console.log(\"error: \", err);\n+                reject(err);\n+            }\n+            else{\n+                resolve(res);\n+            }\n+        });   \n+    })   \n+}\n \n \n+\n+Users.comparePassword = function (candidatePassword, hash, callback) {\n+\tbcrypt.compare(candidatePassword, hash, function (err, isMatch) {\n+\t\tcallback(null, isMatch);\n+\t});\n+}\n+\n+\n+Users.create = function (newUser, callback) {\n+    User.findOne({employee: newUser.employee}, (err,user) => {\n+        if (!user) {\n+            bcrypt.genSalt(salt, function(err, salt) {\n+                bcrypt.hash(newUser.password, salt, async function (err, hash) {\n+                    newUser.password = hash\n+                    try {\n+                        newUser = await newUser.save()\n+                        callback(null, newUser)\n+                    } catch (error) {\n+                        callback(error, null)\n+                    }\n+                })\n+            })\n+        }\n+        else \n+            callback(null,false)\n+    })\n+}\n"
                },
                {
                    "date": 1667171220022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n     })       \n };\n \n \n-Users.getOne = function(query, callback) {\n+User.getOne = function(query, callback) {\n     return new Promise(function(resolve,reject){\n         sql.query(\"Select * from user where email= ?\",u.email ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n@@ -57,16 +57,16 @@\n }\n \n \n \n-Users.comparePassword = function (candidatePassword, hash, callback) {\n+User.comparePassword = function (candidatePassword, hash, callback) {\n \tbcrypt.compare(candidatePassword, hash, function (err, isMatch) {\n \t\tcallback(null, isMatch);\n \t});\n }\n \n \n-Users.create = function (newUser, callback) {\n+User.create = function (newUser, callback) {\n     User.findOne({employee: newUser.employee}, (err,user) => {\n         if (!user) {\n             bcrypt.genSalt(salt, function(err, salt) {\n                 bcrypt.hash(newUser.password, salt, async function (err, hash) {\n"
                },
                {
                    "date": 1667171232651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n };\n \n \n     \n-User.teste = function(u){\n+/*User.login = function(u){\n     console.log(u)\n     return new Promise(function(resolve,reject){\n         sql.query(\"Select * from user where email= ?\",u.email ,function(err,res){\n             if(err) {\n@@ -38,9 +38,9 @@\n                 });\n             }\n         });   \n     })       \n-};\n+};*/\n \n \n User.getOne = function(query, callback) {\n     return new Promise(function(resolve,reject){\n"
                },
                {
                    "date": 1667171366423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,11 +41,11 @@\n     })       \n };*/\n \n \n-User.getOne = function(query, callback) {\n+User.getOne = function(email) {\n     return new Promise(function(resolve,reject){\n-        sql.query(\"Select * from user where email= ?\",u.email ,function(err,res){\n+        sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n                 reject(err);\n             }\n"
                },
                {
                    "date": 1667177363200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,9 @@\n                 console.log(\"error: \", err);\n                 reject(err);\n             }\n             else{\n+                console.log(res);\n                 resolve(res);\n             }\n         });   \n     })   \n"
                },
                {
                    "date": 1667178108459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n \n \n User.getOne = function(email) {\n     return new Promise(function(resolve,reject){\n+        console.log(\"gettingUser...\")\n         sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n                 reject(err);\n"
                },
                {
                    "date": 1667178529023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,9 @@\n };*/\n \n \n User.getOne = function(email) {\n+    console.log(\"WTF\")\n     return new Promise(function(resolve,reject){\n         console.log(\"gettingUser...\")\n         sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n             if(err) {\n"
                },
                {
                    "date": 1667179077087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,8 @@\n };*/\n \n \n User.getOne = function(email) {\n-    console.log(\"WTF\")\n     return new Promise(function(resolve,reject){\n         console.log(\"gettingUser...\")\n         sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n             if(err) {\n"
                },
                {
                    "date": 1667179235034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,8 +59,28 @@\n }\n \n \n \n+User.getOne = function(email) {\n+    return new Promise(function(resolve,reject){\n+        console.log(\"gettingUser...\")\n+        sql.query(\"Select * from user where idUser= ?\",email ,function(err,res){\n+            if(err) {\n+                console.log(\"error: \", err);\n+                reject(err);\n+            }\n+            else{\n+                console.log(res);\n+                resolve(res);\n+            }\n+        });   \n+    })   \n+}\n+\n+\n+\n+\n+\n User.comparePassword = function (candidatePassword, hash, callback) {\n \tbcrypt.compare(candidatePassword, hash, function (err, isMatch) {\n \t\tcallback(null, isMatch);\n \t});\n"
                },
                {
                    "date": 1667179252337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,12 +59,11 @@\n }\n \n \n \n-User.getOne = function(email) {\n+User.getUsersById = function(id) {\n     return new Promise(function(resolve,reject){\n-        console.log(\"gettingUser...\")\n-        sql.query(\"Select * from user where idUser= ?\",email ,function(err,res){\n+        sql.query(\"Select * from user where idUser= ?\",id ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n                 reject(err);\n             }\n"
                },
                {
                    "date": 1667179393741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n }\n \n \n \n-User.getUsersById = function(id) {\n+User.getUserById = function(id) {\n     return new Promise(function(resolve,reject){\n         sql.query(\"Select * from user where idUser= ?\",id ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n"
                },
                {
                    "date": 1667180741462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n var sql = require('../config/database.js');\n var User = require('../models/user')\n \n-User.register = function (u) {    \n+Users.register = function (u) {    \n     console.log(\"here i am\")\n     const saltHash=genPassword(req.body.password);\n     console.log(saltHash);\n     const salt = saltHash.salt;\n@@ -41,9 +41,9 @@\n     })       \n };*/\n \n \n-User.getOne = function(email) {\n+Users.getOne = function(email) {\n     return new Promise(function(resolve,reject){\n         console.log(\"gettingUser...\")\n         sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n             if(err) {\n@@ -59,9 +59,9 @@\n }\n \n \n \n-User.getUserById = function(id) {\n+Users.getUserById = function(id) {\n     return new Promise(function(resolve,reject){\n         sql.query(\"Select * from user where idUser= ?\",id ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n"
                },
                {
                    "date": 1667180748127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,16 +78,16 @@\n \n \n \n \n-User.comparePassword = function (candidatePassword, hash, callback) {\n+Users.comparePassword = function (candidatePassword, hash, callback) {\n \tbcrypt.compare(candidatePassword, hash, function (err, isMatch) {\n \t\tcallback(null, isMatch);\n \t});\n }\n \n \n-User.create = function (newUser, callback) {\n+Users.create = function (newUser, callback) {\n     User.findOne({employee: newUser.employee}, (err,user) => {\n         if (!user) {\n             bcrypt.genSalt(salt, function(err, salt) {\n                 bcrypt.hash(newUser.password, salt, async function (err, hash) {\n"
                },
                {
                    "date": 1667180758980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n var sql = require('../config/database.js');\n var User = require('../models/user')\n \n-Users.register = function (u) {    \n+User.register = function (u) {    \n     console.log(\"here i am\")\n     const saltHash=genPassword(req.body.password);\n     console.log(saltHash);\n     const salt = saltHash.salt;\n@@ -41,9 +41,9 @@\n     })       \n };*/\n \n \n-Users.getOne = function(email) {\n+User.getOne = function(email) {\n     return new Promise(function(resolve,reject){\n         console.log(\"gettingUser...\")\n         sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n             if(err) {\n@@ -59,9 +59,9 @@\n }\n \n \n \n-Users.getUserById = function(id) {\n+User.getUserById = function(id) {\n     return new Promise(function(resolve,reject){\n         sql.query(\"Select * from user where idUser= ?\",id ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n@@ -78,16 +78,16 @@\n \n \n \n \n-Users.comparePassword = function (candidatePassword, hash, callback) {\n+User.comparePassword = function (candidatePassword, hash, callback) {\n \tbcrypt.compare(candidatePassword, hash, function (err, isMatch) {\n \t\tcallback(null, isMatch);\n \t});\n }\n \n \n-Users.create = function (newUser, callback) {\n+User.create = function (newUser, callback) {\n     User.findOne({employee: newUser.employee}, (err,user) => {\n         if (!user) {\n             bcrypt.genSalt(salt, function(err, salt) {\n                 bcrypt.hash(newUser.password, salt, async function (err, hash) {\n"
                },
                {
                    "date": 1667180867512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n var sql = require('../config/database.js');\n-var User = require('../models/user')\n \n-User.register = function (u) {    \n+Users.register = function (u) {    \n     console.log(\"here i am\")\n     const saltHash=genPassword(req.body.password);\n     console.log(saltHash);\n     const salt = saltHash.salt;\n@@ -41,9 +40,9 @@\n     })       \n };*/\n \n \n-User.getOne = function(email) {\n+Users.getOne = function(email) {\n     return new Promise(function(resolve,reject){\n         console.log(\"gettingUser...\")\n         sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n             if(err) {\n@@ -59,9 +58,9 @@\n }\n \n \n \n-User.getUserById = function(id) {\n+Users.getUserById = function(id) {\n     return new Promise(function(resolve,reject){\n         sql.query(\"Select * from user where idUser= ?\",id ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n@@ -78,16 +77,16 @@\n \n \n \n \n-User.comparePassword = function (candidatePassword, hash, callback) {\n+Users.comparePassword = function (candidatePassword, hash, callback) {\n \tbcrypt.compare(candidatePassword, hash, function (err, isMatch) {\n \t\tcallback(null, isMatch);\n \t});\n }\n \n \n-User.create = function (newUser, callback) {\n+Users.create = function (newUser, callback) {\n     User.findOne({employee: newUser.employee}, (err,user) => {\n         if (!user) {\n             bcrypt.genSalt(salt, function(err, salt) {\n                 bcrypt.hash(newUser.password, salt, async function (err, hash) {\n@@ -104,4 +103,6 @@\n         else \n             callback(null,false)\n     })\n }\n+\n+var Users = module.exports\n\\ No newline at end of file\n"
                },
                {
                    "date": 1667180912244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,26 +1,6 @@\n var sql = require('../config/database.js');\n \n-Users.register = function (u) {    \n-    console.log(\"here i am\")\n-    const saltHash=genPassword(req.body.password);\n-    console.log(saltHash);\n-    const salt = saltHash.salt;\n-    const hash = saltHash.hash;\n-    var parameters = [u.name, hash, u.email, u.birthDate, u.gender, u.savings]\n-    console.log(parameters);\n-    return new Promise(function(resolve, reject) {\n-    sql.query(\"INSERT INTO users ( name, password, email , birthDate, gender, savings) VALUES ( ?, ?, ?, ?, ?, ?)\", parameters, function (err, res) {\n-            if(err) {\n-                console.log(\"error: \", err);\n-                reject(err);\n-            }\n-            else{\n-                resolve(res.insertId);\n-            }\n-        });   \n-    })       \n-};\n \n \n     \n /*User.login = function(u){\n"
                },
                {
                    "date": 1667181028452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,26 @@\n var sql = require('../config/database.js');\n \n+Users.register = function (u) {    \n+    console.log(\"here i am\")\n+    const saltHash=genPassword(req.body.password);\n+    console.log(saltHash);\n+    const salt = saltHash.salt;\n+    const hash = saltHash.hash;\n+    var parameters = [u.name, hash, u.email, u.birthDate, u.gender, u.savings]\n+    console.log(parameters);\n+    return new Promise(function(resolve, reject) {\n+    sql.query(\"INSERT INTO users ( name, password, email , birthDate, gender, savings) VALUES ( ?, ?, ?, ?, ?, ?)\", parameters, function (err, res) {\n+            if(err) {\n+                console.log(\"error: \", err);\n+                reject(err);\n+            }\n+            else{\n+                resolve(res.insertId);\n+            }\n+        });   \n+    })       \n+};\n \n \n     \n /*User.login = function(u){\n@@ -22,9 +42,8 @@\n \n \n Users.getOne = function(email) {\n     return new Promise(function(resolve,reject){\n-        console.log(\"gettingUser...\")\n         sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n                 reject(err);\n@@ -38,51 +57,11 @@\n }\n \n \n \n-Users.getUserById = function(id) {\n-    return new Promise(function(resolve,reject){\n-        sql.query(\"Select * from user where idUser= ?\",id ,function(err,res){\n-            if(err) {\n-                console.log(\"error: \", err);\n-                reject(err);\n-            }\n-            else{\n-                console.log(res);\n-                resolve(res);\n-            }\n-        });   \n-    })   \n-}\n-\n-\n-\n-\n-\n Users.comparePassword = function (candidatePassword, hash, callback) {\n \tbcrypt.compare(candidatePassword, hash, function (err, isMatch) {\n \t\tcallback(null, isMatch);\n \t});\n }\n \n \n-Users.create = function (newUser, callback) {\n-    User.findOne({employee: newUser.employee}, (err,user) => {\n-        if (!user) {\n-            bcrypt.genSalt(salt, function(err, salt) {\n-                bcrypt.hash(newUser.password, salt, async function (err, hash) {\n-                    newUser.password = hash\n-                    try {\n-                        newUser = await newUser.save()\n-                        callback(null, newUser)\n-                    } catch (error) {\n-                        callback(error, null)\n-                    }\n-                })\n-            })\n-        }\n-        else \n-            callback(null,false)\n-    })\n-}\n-\n-var Users = module.exports\n\\ No newline at end of file\n"
                },
                {
                    "date": 1667181038095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n var sql = require('../config/database.js');\n-\n+module.exports = Users;\n Users.register = function (u) {    \n     console.log(\"here i am\")\n     const saltHash=genPassword(req.body.password);\n     console.log(saltHash);\n"
                },
                {
                    "date": 1667181054314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n var sql = require('../config/database.js');\n-module.exports = Users;\n+var Users = module.exports\n Users.register = function (u) {    \n     console.log(\"here i am\")\n     const saltHash=genPassword(req.body.password);\n     console.log(saltHash);\n"
                },
                {
                    "date": 1667181079707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n var sql = require('../config/database.js');\n-var Users = module.exports\n+var Users = module.exports;\n+\n Users.register = function (u) {    \n     console.log(\"here i am\")\n     const saltHash=genPassword(req.body.password);\n     console.log(saltHash);\n"
                },
                {
                    "date": 1667181146186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,9 @@\n };*/\n \n \n Users.getOne = function(email) {\n+    console.log(\"TT\")\n     return new Promise(function(resolve,reject){\n         sql.query(\"Select * from user where email= ?\",email ,function(err,res){\n             if(err) {\n                 console.log(\"error: \", err);\n"
                }
            ],
            "date": 1667154190520,
            "name": "Commit-0",
            "content": "var sql = require('../config/database.js');\nvar User = require('../models/user')\n\nUser.register = function (u) {    \n    console.log(\"here i am\")\n    var newPassword = bcrypt.hashSync(u.password, 10);\n    var parameters = [u.name, newPassword, u.email, new Date(u.birthDate), u.gender,u.savings]\n    console.log(parameters);\n    return new Promise(function(resolve, reject) {\n    sql.query(\"INSERT INTO users ( name, password, email , birthDate, gender, savings) VALUES ( ?, ?, ?, ?, ?, ?)\", parameters, function (err, res) {\n            if(err) {\n                console.log(\"error: \", err);\n                reject(err);\n            }\n            else{\n                resolve(res.insertId);\n            }\n        });   \n    })       \n};\n"
        }
    ]
}